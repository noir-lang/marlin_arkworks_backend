{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10","program":"/Users/maximvezenov/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","crossbeam_epoch","--edition=2018","/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"default\"","--cfg","feature=\"once_cell\"","--cfg","feature=\"std\"","-C","metadata=2471fa3e71dc31f7","-C","extra-filename=-2471fa3e71dc31f7","--out-dir","/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps","-L","dependency=/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps","--extern","cfg_if=/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps/libcfg_if-3cd7bda968e519ae.rmeta","--extern","crossbeam_utils=/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps/libcrossbeam_utils-8726c7fd40eb473b.rmeta","--extern","memoffset=/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps/libmemoffset-2e26969fd5b58061.rmeta","--extern","once_cell=/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps/libonce_cell-f34e1ca9e47c9792.rmeta","--extern","scopeguard=/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps/libscopeguard-e191c87c52b0ca78.rmeta","--cap-lints","allow","--cfg","crossbeam_no_const_fn_trait_bound","--error-format=json","--sysroot","/Users/maximvezenov/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps/libcrossbeam_epoch-2471fa3e71dc31f7.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[11184795028235209744,0]},"crate_root":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src","external_crates":[{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8736441298905945133,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14793976659495462539,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3402831840469434398,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10266006331935790141,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3256146445313423250,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17904618012795691138,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9322387616446168443,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3101585505833515335,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9998121223216013160,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13604153592636442655,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[4682215639508348019,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[681692869457277629,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[14282542057858629160,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14550073586256240635,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6281633846692226065,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17361906875064838028,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[16875744454975590306,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[13997309999588659716,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","num":19,"id":{"name":"crossbeam_utils","disambiguator":[1700314392278703623,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","num":20,"id":{"name":"once_cell","disambiguator":[16724241155750565064,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","num":21,"id":{"name":"scopeguard","disambiguator":[12406165358025328992,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","num":22,"id":{"name":"memoffset","disambiguator":[2679046748938999690,0]}}],"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":0,"byte_end":6324,"line_start":1,"line_end":169,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5873,"byte_end":5882,"line_start":153,"line_end":153,"column_start":13,"column_end":22},"alias_span":null,"name":"Pointable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5884,"byte_end":5890,"line_start":153,"line_end":153,"column_start":24,"column_end":30},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":100},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5892,"byte_end":5912,"line_start":153,"line_end":153,"column_start":32,"column_end":52},"alias_span":null,"name":"CompareExchangeError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":247},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5926,"byte_end":5931,"line_start":154,"line_end":154,"column_start":13,"column_end":18},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5933,"byte_end":5940,"line_start":154,"line_end":154,"column_start":20,"column_end":27},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5942,"byte_end":5948,"line_start":154,"line_end":154,"column_start":29,"column_end":35},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":373},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":5995,"byte_end":6004,"line_start":156,"line_end":156,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":389},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6006,"byte_end":6017,"line_start":156,"line_end":156,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6050,"byte_end":6061,"line_start":157,"line_end":157,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":479},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6063,"byte_end":6068,"line_start":157,"line_end":157,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":96},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6132,"byte_end":6150,"line_start":160,"line_end":160,"column_start":32,"column_end":50},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6152,"byte_end":6173,"line_start":160,"line_end":160,"column_start":52,"column_end":73},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":897},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6281,"byte_end":6298,"line_start":167,"line_end":167,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":895},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6300,"byte_end":6309,"line_start":167,"line_end":167,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":893},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":6311,"byte_end":6314,"line_start":167,"line_end":167,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":0,"byte_end":6324,"line_start":1,"line_end":169,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":356},{"krate":0,"index":399},{"krate":0,"index":438},{"krate":0,"index":457},{"krate":0,"index":509},{"krate":0,"index":655},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":782},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":815},{"krate":0,"index":875},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`](Guard::defer) the execution of an","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2244,"byte_end":2351,"line_start":42,"line_end":42,"column_start":1,"column_end":108}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2352,"byte_end":2447,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2448,"byte_end":2503,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2504,"byte_end":2507,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2508,"byte_end":2518,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2519,"byte_end":2522,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2523,"byte_end":2620,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2621,"byte_end":2694,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":2855,"byte_end":2961,"line_start":58,"line_end":63,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":96},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13225582,"byte_end":13225600,"line_start":31,"line_end":31,"column_start":10,"column_end":28},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareExchangeError","parent":null,"children":[],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13225411,"byte_end":13225470,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"deprecated(note = \"Use `CompareExchangeError` instead\")","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13225514,"byte_end":13225572,"line_start":30,"line_end":30,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":100},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13225718,"byte_end":13225738,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"CompareExchangeError","qualname":"::atomic::CompareExchangeError","value":"CompareExchangeError { current, new }","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" The error returned on failed compare-and-swap operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-swap operation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13225646,"byte_end":13225706,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":104},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13225868,"byte_end":13225875,"line_start":36,"line_end":36,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareExchangeError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13225787,"byte_end":13225859,"line_start":35,"line_end":35,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":105},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13225961,"byte_end":13225964,"line_start":39,"line_end":39,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareExchangeError::new","value":"P","parent":{"krate":0,"index":100},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13225897,"byte_end":13225952,"line_start":38,"line_end":38,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":110},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13227075,"byte_end":13227096,"line_start":67,"line_end":67,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13226279,"byte_end":13226331,"line_start":51,"line_end":51,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13226332,"byte_end":13226335,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13226336,"byte_end":13226427,"line_start":53,"line_end":53,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13226428,"byte_end":13226520,"line_start":54,"line_end":54,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13226521,"byte_end":13226524,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13226525,"byte_end":13226590,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13226591,"byte_end":13226594,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13226595,"byte_end":13226689,"line_start":58,"line_end":58,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13226690,"byte_end":13226716,"line_start":59,"line_end":59,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13226717,"byte_end":13226809,"line_start":60,"line_end":60,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13226810,"byte_end":13226838,"line_start":61,"line_end":61,"column_start":1,"column_end":29}},{"value":"deprecated(note =\n\"`compare_and_set` and `compare_and_set_weak` that use this trait are deprecated, \\\n            use `compare_exchange` or `compare_exchange_weak instead`\")","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13226882,"byte_end":13227064,"line_start":63,"line_end":66,"column_start":1,"column_end":3}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13227162,"byte_end":13227169,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13227103,"byte_end":13227154,"line_start":68,"line_end":68,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13227387,"byte_end":13227394,"line_start":75,"line_end":75,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":110},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13227195,"byte_end":13227243,"line_start":71,"line_end":71,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13227248,"byte_end":13227251,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13227256,"byte_end":13227349,"line_start":73,"line_end":73,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13227354,"byte_end":13227379,"line_start":74,"line_end":74,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":127},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229744,"byte_end":13229753,"line_start":150,"line_end":150,"column_start":11,"column_end":20},"name":"Pointable","qualname":"::atomic::Pointable","value":"Pointable","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":135}],"decl_id":null,"docs":" Types that are pointed to by a single word.","sig":null,"attributes":[{"value":"/ Types that are pointed to by a single word.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13228771,"byte_end":13228818,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13228819,"byte_end":13228822,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ In concurrent programming, it is necessary to represent an object within a word because atomic","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13228823,"byte_end":13228921,"line_start":132,"line_end":132,"column_start":1,"column_end":99}},{"value":"/ operations (e.g., reads, writes, read-modify-writes) support only single words.  This trait","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13228922,"byte_end":13229017,"line_start":133,"line_end":133,"column_start":1,"column_end":96}},{"value":"/ qualifies such types that are pointed to by a single word.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229018,"byte_end":13229080,"line_start":134,"line_end":134,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229081,"byte_end":13229084,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ The trait generalizes `Box<T>` for a sized type `T`.  In a box, an object of type `T` is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229085,"byte_end":13229177,"line_start":136,"line_end":136,"column_start":1,"column_end":93}},{"value":"/ allocated in heap and it is owned by a single-word pointer.  This trait is also implemented for","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229178,"byte_end":13229277,"line_start":137,"line_end":137,"column_start":1,"column_end":100}},{"value":"/ `[MaybeUninit<T>]` by storing its size along with its elements and pointing to the pair of array","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229278,"byte_end":13229378,"line_start":138,"line_end":138,"column_start":1,"column_end":101}},{"value":"/ size and elements.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229379,"byte_end":13229401,"line_start":139,"line_end":139,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229402,"byte_end":13229405,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Pointers to `Pointable` types can be stored in [`Atomic`], [`Owned`], and [`Shared`].  In","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229406,"byte_end":13229499,"line_start":141,"line_end":141,"column_start":1,"column_end":94}},{"value":"/ particular, Crossbeam supports dynamically sized slices as follows.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229500,"byte_end":13229571,"line_start":142,"line_end":142,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229572,"byte_end":13229575,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229576,"byte_end":13229583,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229584,"byte_end":13229614,"line_start":145,"line_end":145,"column_start":1,"column_end":31}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229615,"byte_end":13229646,"line_start":146,"line_end":146,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229647,"byte_end":13229650,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ let o = Owned::<[MaybeUninit<i32>]>::init(10); // allocating [i32; 10]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229651,"byte_end":13229725,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229726,"byte_end":13229733,"line_start":149,"line_end":149,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":128},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229800,"byte_end":13229805,"line_start":152,"line_end":152,"column_start":11,"column_end":16},"name":"ALIGN","qualname":"::atomic::Pointable::ALIGN","value":"usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The alignment of pointer.\n","sig":null,"attributes":[{"value":"/ The alignment of pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229760,"byte_end":13229789,"line_start":151,"line_end":151,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":129},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229859,"byte_end":13229863,"line_start":155,"line_end":155,"column_start":10,"column_end":14},"name":"Init","qualname":"::atomic::Pointable::Init","value":"type Init;","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" The type for initializers.\n","sig":null,"attributes":[{"value":"/ The type for initializers.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229819,"byte_end":13229849,"line_start":154,"line_end":154,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230015,"byte_end":13230019,"line_start":162,"line_end":162,"column_start":15,"column_end":19},"name":"init","qualname":"::atomic::Pointable::init","value":"pub unsafe fn init(Self::Init) -> usize","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Initializes a with the given initializer.","sig":null,"attributes":[{"value":"/ Initializes a with the given initializer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229870,"byte_end":13229915,"line_start":157,"line_end":157,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229920,"byte_end":13229923,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229928,"byte_end":13229940,"line_start":159,"line_end":159,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229945,"byte_end":13229948,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ The result should be a multiple of `ALIGN`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13229953,"byte_end":13230000,"line_start":161,"line_end":161,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230383,"byte_end":13230388,"line_start":171,"line_end":171,"column_start":15,"column_end":20},"name":"deref","qualname":"::atomic::Pointable::deref","value":"pub unsafe fn deref<'a>(usize) -> &'a Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Dereferences the given pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230053,"byte_end":13230088,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230093,"byte_end":13230096,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230101,"byte_end":13230113,"line_start":166,"line_end":166,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230118,"byte_end":13230121,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230126,"byte_end":13230202,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230207,"byte_end":13230275,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be mutably dereferenced by [`Pointable::deref_mut`] concurrently.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230280,"byte_end":13230368,"line_start":170,"line_end":170,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230787,"byte_end":13230796,"line_start":181,"line_end":181,"column_start":15,"column_end":24},"name":"deref_mut","qualname":"::atomic::Pointable::deref_mut","value":"pub unsafe fn deref_mut<'a>(usize) -> &'a mut Self","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Mutably dereferences the given pointer.","sig":null,"attributes":[{"value":"/ Mutably dereferences the given pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230423,"byte_end":13230466,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230471,"byte_end":13230474,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230479,"byte_end":13230491,"line_start":175,"line_end":175,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230496,"byte_end":13230499,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230504,"byte_end":13230580,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230585,"byte_end":13230653,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230658,"byte_end":13230748,"line_start":179,"line_end":179,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230753,"byte_end":13230772,"line_start":180,"line_end":180,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13231209,"byte_end":13231213,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"::atomic::Pointable::drop","value":"pub unsafe fn drop(usize)","parent":{"krate":0,"index":127},"children":[],"decl_id":null,"docs":" Drops the object pointed to by the given pointer.","sig":null,"attributes":[{"value":"/ Drops the object pointed to by the given pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230835,"byte_end":13230888,"line_start":183,"line_end":183,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230893,"byte_end":13230896,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230901,"byte_end":13230913,"line_start":185,"line_end":185,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230918,"byte_end":13230921,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ - The given `ptr` should have been initialized with [`Pointable::init`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13230926,"byte_end":13231002,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/ - `ptr` should not have yet been dropped by [`Pointable::drop`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13231007,"byte_end":13231075,"line_start":188,"line_end":188,"column_start":5,"column_end":73}},{"value":"/ - `ptr` should not be dereferenced by [`Pointable::deref`] or [`Pointable::deref_mut`]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13231080,"byte_end":13231170,"line_start":189,"line_end":189,"column_start":5,"column_end":95}},{"value":"/   concurrently.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13231175,"byte_end":13231194,"line_start":190,"line_end":190,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":161},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234324,"byte_end":13234330,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13233806,"byte_end":13233870,"line_start":282,"line_end":282,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13233871,"byte_end":13233874,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13233875,"byte_end":13233973,"line_start":284,"line_end":284,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address. For example, the tag for a pointer to a sized type `T`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13233974,"byte_end":13234071,"line_start":285,"line_end":285,"column_start":1,"column_end":98}},{"value":"/ should be less than `(1 << mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234072,"byte_end":13234143,"line_start":286,"line_end":286,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234144,"byte_end":13234147,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234148,"byte_end":13234228,"line_start":288,"line_end":288,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234229,"byte_end":13234232,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ Crossbeam supports dynamically sized types.  See [`Pointable`] for details.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234233,"byte_end":13234312,"line_start":290,"line_end":290,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234873,"byte_end":13234876,"line_start":310,"line_end":310,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234583,"byte_end":13234665,"line_start":300,"line_end":300,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234670,"byte_end":13234673,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234678,"byte_end":13234692,"line_start":302,"line_end":302,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234697,"byte_end":13234700,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234705,"byte_end":13234712,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234717,"byte_end":13234749,"line_start":305,"line_end":305,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234754,"byte_end":13234757,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234762,"byte_end":13234792,"line_start":307,"line_end":307,"column_start":5,"column_end":35}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234797,"byte_end":13234849,"line_start":308,"line_end":308,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234854,"byte_end":13234861,"line_start":309,"line_end":309,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13235277,"byte_end":13235281,"line_start":326,"line_end":326,"column_start":12,"column_end":16},"name":"init","qualname":"<Atomic<T>>::init","value":"pub fn init(T::Init) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234979,"byte_end":13235061,"line_start":316,"line_end":316,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13235066,"byte_end":13235069,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13235074,"byte_end":13235088,"line_start":318,"line_end":318,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13235093,"byte_end":13235096,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13235101,"byte_end":13235108,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13235113,"byte_end":13235145,"line_start":321,"line_end":321,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13235150,"byte_end":13235153,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::init(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13235158,"byte_end":13235196,"line_start":323,"line_end":323,"column_start":5,"column_end":43}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13235201,"byte_end":13235253,"line_start":324,"line_end":324,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13235258,"byte_end":13235265,"line_start":325,"line_end":325,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236125,"byte_end":13236129,"line_start":357,"line_end":357,"column_start":12,"column_end":16},"name":"null","qualname":"<Atomic<T>>::null","value":"pub fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.\n","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13235993,"byte_end":13236031,"line_start":355,"line_end":355,"column_start":5,"column_end":43}},{"value":"cfg(not(all(not(crossbeam_no_const_fn_trait_bound), not(crossbeam_loom))))","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236036,"byte_end":13236113,"line_start":356,"line_end":356,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236771,"byte_end":13236775,"line_start":380,"line_end":380,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236256,"byte_end":13236301,"line_start":364,"line_end":364,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236306,"byte_end":13236309,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236314,"byte_end":13236404,"line_start":366,"line_end":366,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236409,"byte_end":13236423,"line_start":367,"line_end":367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236428,"byte_end":13236431,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236436,"byte_end":13236450,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236455,"byte_end":13236458,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236463,"byte_end":13236470,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236475,"byte_end":13236524,"line_start":372,"line_end":372,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236529,"byte_end":13236573,"line_start":373,"line_end":373,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236578,"byte_end":13236581,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236586,"byte_end":13236616,"line_start":375,"line_end":375,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236621,"byte_end":13236651,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236656,"byte_end":13236690,"line_start":377,"line_end":377,"column_start":5,"column_end":39}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236695,"byte_end":13236747,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236752,"byte_end":13236759,"line_start":379,"line_end":379,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237839,"byte_end":13237851,"line_start":406,"line_end":406,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236905,"byte_end":13236984,"line_start":384,"line_end":384,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236989,"byte_end":13236992,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13236997,"byte_end":13237070,"line_start":386,"line_end":386,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237075,"byte_end":13237151,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237156,"byte_end":13237227,"line_start":388,"line_end":388,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237232,"byte_end":13237306,"line_start":389,"line_end":389,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237311,"byte_end":13237334,"line_start":390,"line_end":390,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237339,"byte_end":13237342,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237347,"byte_end":13237422,"line_start":392,"line_end":392,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237427,"byte_end":13237501,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237506,"byte_end":13237540,"line_start":394,"line_end":394,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237545,"byte_end":13237548,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237553,"byte_end":13237567,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237572,"byte_end":13237575,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237580,"byte_end":13237587,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237592,"byte_end":13237641,"line_start":399,"line_end":399,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237646,"byte_end":13237649,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237654,"byte_end":13237684,"line_start":401,"line_end":401,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237689,"byte_end":13237719,"line_start":402,"line_end":402,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237724,"byte_end":13237758,"line_start":403,"line_end":403,"column_start":5,"column_end":39}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237763,"byte_end":13237815,"line_start":404,"line_end":404,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237820,"byte_end":13237827,"line_start":405,"line_end":405,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238611,"byte_end":13238616,"line_start":427,"line_end":427,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13237971,"byte_end":13238036,"line_start":410,"line_end":410,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238041,"byte_end":13238044,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238049,"byte_end":13238139,"line_start":412,"line_end":412,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238144,"byte_end":13238158,"line_start":413,"line_end":413,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238163,"byte_end":13238166,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238171,"byte_end":13238185,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238190,"byte_end":13238193,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238198,"byte_end":13238205,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{Atomic, Owned, Shared};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238210,"byte_end":13238259,"line_start":418,"line_end":418,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238264,"byte_end":13238308,"line_start":419,"line_end":419,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238313,"byte_end":13238316,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238321,"byte_end":13238351,"line_start":421,"line_end":421,"column_start":5,"column_end":35}},{"value":"/ # unsafe { drop(a.load(SeqCst, &crossbeam_epoch::pin()).into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238356,"byte_end":13238446,"line_start":422,"line_end":422,"column_start":5,"column_end":95}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238451,"byte_end":13238487,"line_start":423,"line_end":423,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238492,"byte_end":13238530,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238535,"byte_end":13238587,"line_start":425,"line_end":425,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238592,"byte_end":13238599,"line_start":426,"line_end":426,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239323,"byte_end":13239327,"line_start":448,"line_end":448,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238723,"byte_end":13238811,"line_start":431,"line_end":431,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238816,"byte_end":13238829,"line_start":432,"line_end":432,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238834,"byte_end":13238837,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238842,"byte_end":13238932,"line_start":434,"line_end":434,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238937,"byte_end":13238951,"line_start":435,"line_end":435,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238956,"byte_end":13238959,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238964,"byte_end":13238978,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238983,"byte_end":13238986,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13238991,"byte_end":13238998,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239003,"byte_end":13239060,"line_start":440,"line_end":440,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239065,"byte_end":13239109,"line_start":441,"line_end":441,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239114,"byte_end":13239117,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239122,"byte_end":13239152,"line_start":443,"line_end":443,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239157,"byte_end":13239187,"line_start":444,"line_end":444,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239192,"byte_end":13239242,"line_start":445,"line_end":445,"column_start":5,"column_end":55}},{"value":"/ # unsafe { drop(p.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239247,"byte_end":13239299,"line_start":446,"line_end":446,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239304,"byte_end":13239311,"line_start":447,"line_end":447,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13241223,"byte_end":13241239,"line_start":483,"line_end":483,"column_start":12,"column_end":28},"name":"compare_exchange","qualname":"<Atomic<T>>::compare_exchange","value":"pub fn compare_exchange<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239498,"byte_end":13239594,"line_start":452,"line_end":452,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239599,"byte_end":13239693,"line_start":453,"line_end":453,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239698,"byte_end":13239769,"line_start":454,"line_end":454,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239774,"byte_end":13239777,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239782,"byte_end":13239877,"line_start":456,"line_end":456,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239882,"byte_end":13239973,"line_start":457,"line_end":457,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239978,"byte_end":13239991,"line_start":458,"line_end":458,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13239996,"byte_end":13239999,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240004,"byte_end":13240073,"line_start":460,"line_end":460,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240078,"byte_end":13240159,"line_start":461,"line_end":461,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240164,"byte_end":13240255,"line_start":462,"line_end":462,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240260,"byte_end":13240350,"line_start":463,"line_end":463,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240355,"byte_end":13240437,"line_start":464,"line_end":464,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240442,"byte_end":13240520,"line_start":465,"line_end":465,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240525,"byte_end":13240605,"line_start":466,"line_end":466,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240610,"byte_end":13240676,"line_start":467,"line_end":467,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240681,"byte_end":13240684,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240689,"byte_end":13240703,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240708,"byte_end":13240711,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240716,"byte_end":13240723,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240728,"byte_end":13240792,"line_start":472,"line_end":472,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240797,"byte_end":13240841,"line_start":473,"line_end":473,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240846,"byte_end":13240849,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240854,"byte_end":13240884,"line_start":475,"line_end":475,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240889,"byte_end":13240892,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240897,"byte_end":13240927,"line_start":477,"line_end":477,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240932,"byte_end":13240969,"line_start":478,"line_end":478,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_exchange(curr, Shared::null(), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13240974,"byte_end":13241053,"line_start":479,"line_end":479,"column_start":5,"column_end":84}},{"value":"/ let res2 = a.compare_exchange(curr, Owned::new(5678), SeqCst, SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13241058,"byte_end":13241139,"line_start":480,"line_end":480,"column_start":5,"column_end":86}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13241144,"byte_end":13241199,"line_start":481,"line_end":481,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13241204,"byte_end":13241211,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13244410,"byte_end":13244431,"line_start":560,"line_end":560,"column_start":12,"column_end":33},"name":"compare_exchange_weak","qualname":"<Atomic<T>>::compare_exchange_weak","value":"pub fn compare_exchange_weak<'g,\nP>(&Self, Shared<, T>, P, Ordering, Ordering, &'g Guard)\n-> Result<Shared, CompareExchangeError> where P: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13241901,"byte_end":13241997,"line_start":506,"line_end":506,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13242002,"byte_end":13242096,"line_start":507,"line_end":507,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13242101,"byte_end":13242172,"line_start":508,"line_end":508,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13242177,"byte_end":13242180,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_exchange`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13242185,"byte_end":13242280,"line_start":510,"line_end":510,"column_start":5,"column_end":100}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13242285,"byte_end":13242380,"line_start":511,"line_end":511,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13242385,"byte_end":13242475,"line_start":512,"line_end":512,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13242480,"byte_end":13242564,"line_start":513,"line_end":513,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13242569,"byte_end":13242572,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method takes two `Ordering` arguments to describe the memory","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13242577,"byte_end":13242646,"line_start":515,"line_end":515,"column_start":5,"column_end":74}},{"value":"/ ordering of this operation. `success` describes the required ordering for the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13242651,"byte_end":13242732,"line_start":516,"line_end":516,"column_start":5,"column_end":86}},{"value":"/ read-modify-write operation that takes place if the comparison with `current` succeeds.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13242737,"byte_end":13242828,"line_start":517,"line_end":517,"column_start":5,"column_end":96}},{"value":"/ `failure` describes the required ordering for the load operation that takes place when","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13242833,"byte_end":13242923,"line_start":518,"line_end":518,"column_start":5,"column_end":95}},{"value":"/ the comparison fails. Using `Acquire` as success ordering makes the store part","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13242928,"byte_end":13243010,"line_start":519,"line_end":519,"column_start":5,"column_end":87}},{"value":"/ of this operation `Relaxed`, and using `Release` makes the successful load","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243015,"byte_end":13243093,"line_start":520,"line_end":520,"column_start":5,"column_end":83}},{"value":"/ `Relaxed`. The failure ordering can only be `SeqCst`, `Acquire` or `Relaxed`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243098,"byte_end":13243178,"line_start":521,"line_end":521,"column_start":5,"column_end":85}},{"value":"/ and must be equivalent to or weaker than the success ordering.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243183,"byte_end":13243249,"line_start":522,"line_end":522,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243254,"byte_end":13243257,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ [`compare_exchange`]: Atomic::compare_exchange","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243262,"byte_end":13243312,"line_start":524,"line_end":524,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243317,"byte_end":13243320,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243325,"byte_end":13243339,"line_start":526,"line_end":526,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243344,"byte_end":13243347,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243352,"byte_end":13243359,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243364,"byte_end":13243428,"line_start":529,"line_end":529,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243433,"byte_end":13243477,"line_start":530,"line_end":530,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243482,"byte_end":13243485,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243490,"byte_end":13243520,"line_start":532,"line_end":532,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243525,"byte_end":13243555,"line_start":533,"line_end":533,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243560,"byte_end":13243563,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243568,"byte_end":13243603,"line_start":535,"line_end":535,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243608,"byte_end":13243648,"line_start":536,"line_end":536,"column_start":5,"column_end":45}},{"value":"/ # unsafe { drop(a.load(SeqCst, guard).into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243653,"byte_end":13243725,"line_start":537,"line_end":537,"column_start":5,"column_end":77}},{"value":"/ loop {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243730,"byte_end":13243740,"line_start":538,"line_end":538,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(ptr, new, SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243745,"byte_end":13243817,"line_start":539,"line_end":539,"column_start":5,"column_end":77}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243822,"byte_end":13243844,"line_start":540,"line_end":540,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243849,"byte_end":13243873,"line_start":541,"line_end":541,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243878,"byte_end":13243900,"line_start":542,"line_end":542,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243905,"byte_end":13243918,"line_start":543,"line_end":543,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243923,"byte_end":13243948,"line_start":544,"line_end":544,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243953,"byte_end":13243987,"line_start":545,"line_end":545,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13243992,"byte_end":13244022,"line_start":546,"line_end":546,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13244027,"byte_end":13244040,"line_start":547,"line_end":547,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13244045,"byte_end":13244054,"line_start":548,"line_end":548,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13244059,"byte_end":13244064,"line_start":549,"line_end":549,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13244069,"byte_end":13244072,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13244077,"byte_end":13244118,"line_start":551,"line_end":551,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13244123,"byte_end":13244133,"line_start":552,"line_end":552,"column_start":5,"column_end":15}},{"value":"/     match a.compare_exchange_weak(curr, Shared::null(), SeqCst, SeqCst, guard) {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13244138,"byte_end":13244222,"line_start":553,"line_end":553,"column_start":5,"column_end":89}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13244227,"byte_end":13244254,"line_start":554,"line_end":554,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13244259,"byte_end":13244302,"line_start":555,"line_end":555,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13244307,"byte_end":13244316,"line_start":556,"line_end":556,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13244321,"byte_end":13244326,"line_start":557,"line_end":557,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13244331,"byte_end":13244386,"line_start":558,"line_end":558,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13244391,"byte_end":13244398,"line_start":559,"line_end":559,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246985,"byte_end":13246997,"line_start":623,"line_end":623,"column_start":12,"column_end":24},"name":"fetch_update","qualname":"<Atomic<T>>::fetch_update","value":"pub fn fetch_update<'g, F>(&Self, Ordering, Ordering, &'g Guard, F)\n-> Result<Shared, Shared> where F: FnMut(Shared) -> Option<Shared>","parent":null,"children":[],"decl_id":null,"docs":" Fetches the pointer, and then applies a function to it that returns a new value.\n Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","sig":null,"attributes":[{"value":"/ Fetches the pointer, and then applies a function to it that returns a new value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13245098,"byte_end":13245182,"line_start":583,"line_end":583,"column_start":5,"column_end":89}},{"value":"/ Returns a `Result` of `Ok(previous_value)` if the function returned `Some`, else `Err(_)`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13245187,"byte_end":13245281,"line_start":584,"line_end":584,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13245286,"byte_end":13245289,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ Note that the given function may be called multiple times if the value has been changed by","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13245294,"byte_end":13245388,"line_start":586,"line_end":586,"column_start":5,"column_end":99}},{"value":"/ other threads in the meantime, as long as the function returns `Some(_)`, but the function","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13245393,"byte_end":13245487,"line_start":587,"line_end":587,"column_start":5,"column_end":99}},{"value":"/ will have been applied only once to the stored value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13245492,"byte_end":13245549,"line_start":588,"line_end":588,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13245554,"byte_end":13245557,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ `fetch_update` takes two [`Ordering`] arguments to describe the memory","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13245562,"byte_end":13245636,"line_start":590,"line_end":590,"column_start":5,"column_end":79}},{"value":"/ ordering of this operation. The first describes the required ordering for","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13245641,"byte_end":13245718,"line_start":591,"line_end":591,"column_start":5,"column_end":82}},{"value":"/ when the operation finally succeeds while the second describes the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13245723,"byte_end":13245793,"line_start":592,"line_end":592,"column_start":5,"column_end":75}},{"value":"/ required ordering for loads. These correspond to the success and failure","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13245798,"byte_end":13245874,"line_start":593,"line_end":593,"column_start":5,"column_end":81}},{"value":"/ orderings of [`Atomic::compare_exchange`] respectively.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13245879,"byte_end":13245938,"line_start":594,"line_end":594,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13245943,"byte_end":13245946,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ Using [`Acquire`] as success ordering makes the store part of this","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13245951,"byte_end":13246021,"line_start":596,"line_end":596,"column_start":5,"column_end":75}},{"value":"/ operation [`Relaxed`], and using [`Release`] makes the final successful","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246026,"byte_end":13246101,"line_start":597,"line_end":597,"column_start":5,"column_end":80}},{"value":"/ load [`Relaxed`]. The (failed) load ordering can only be [`SeqCst`],","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246106,"byte_end":13246178,"line_start":598,"line_end":598,"column_start":5,"column_end":77}},{"value":"/ [`Acquire`] or [`Relaxed`] and must be equivalent to or weaker than the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246183,"byte_end":13246258,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ success ordering.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246263,"byte_end":13246284,"line_start":600,"line_end":600,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246289,"byte_end":13246292,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ [`Relaxed`]: Ordering::Relaxed","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246297,"byte_end":13246331,"line_start":602,"line_end":602,"column_start":5,"column_end":39}},{"value":"/ [`Acquire`]: Ordering::Acquire","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246336,"byte_end":13246370,"line_start":603,"line_end":603,"column_start":5,"column_end":39}},{"value":"/ [`Release`]: Ordering::Release","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246375,"byte_end":13246409,"line_start":604,"line_end":604,"column_start":5,"column_end":39}},{"value":"/ [`SeqCst`]: Ordering::SeqCst","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246414,"byte_end":13246446,"line_start":605,"line_end":605,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246451,"byte_end":13246454,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246459,"byte_end":13246473,"line_start":607,"line_end":607,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246478,"byte_end":13246481,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246486,"byte_end":13246493,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246498,"byte_end":13246547,"line_start":610,"line_end":610,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246552,"byte_end":13246596,"line_start":611,"line_end":611,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246601,"byte_end":13246604,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246609,"byte_end":13246639,"line_start":613,"line_end":613,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246644,"byte_end":13246674,"line_start":614,"line_end":614,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246679,"byte_end":13246682,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ let res1 = a.fetch_update(SeqCst, SeqCst, guard, |x| Some(x.with_tag(1)));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246687,"byte_end":13246765,"line_start":616,"line_end":616,"column_start":5,"column_end":83}},{"value":"/ assert!(res1.is_ok());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246770,"byte_end":13246796,"line_start":617,"line_end":617,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246801,"byte_end":13246804,"line_start":618,"line_end":618,"column_start":5,"column_end":8}},{"value":"/ let res2 = a.fetch_update(SeqCst, SeqCst, guard, |x| None);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246809,"byte_end":13246872,"line_start":619,"line_end":619,"column_start":5,"column_end":68}},{"value":"/ assert!(res2.is_err());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246877,"byte_end":13246904,"line_start":620,"line_end":620,"column_start":5,"column_end":32}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246909,"byte_end":13246961,"line_start":621,"line_end":621,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13246966,"byte_end":13246973,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13249357,"byte_end":13249372,"line_start":685,"line_end":685,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13247595,"byte_end":13247691,"line_start":643,"line_end":643,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13247696,"byte_end":13247790,"line_start":644,"line_end":644,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13247795,"byte_end":13247866,"line_start":645,"line_end":645,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13247871,"byte_end":13247874,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13247879,"byte_end":13247974,"line_start":647,"line_end":647,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13247979,"byte_end":13248070,"line_start":648,"line_end":648,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248075,"byte_end":13248088,"line_start":649,"line_end":649,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248093,"byte_end":13248096,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248101,"byte_end":13248186,"line_start":651,"line_end":651,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248191,"byte_end":13248222,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248227,"byte_end":13248230,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248235,"byte_end":13248272,"line_start":654,"line_end":654,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248277,"byte_end":13248280,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set` is equivalent to `compare_exchange` with the following mapping for","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248285,"byte_end":13248373,"line_start":656,"line_end":656,"column_start":5,"column_end":93}},{"value":"/ memory orderings:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248378,"byte_end":13248399,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248404,"byte_end":13248407,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248412,"byte_end":13248444,"line_start":659,"line_end":659,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248449,"byte_end":13248481,"line_start":660,"line_end":660,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248486,"byte_end":13248518,"line_start":661,"line_end":661,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248523,"byte_end":13248555,"line_start":662,"line_end":662,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248560,"byte_end":13248592,"line_start":663,"line_end":663,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248597,"byte_end":13248629,"line_start":664,"line_end":664,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248634,"byte_end":13248665,"line_start":665,"line_end":665,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248670,"byte_end":13248673,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248678,"byte_end":13248692,"line_start":667,"line_end":667,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248697,"byte_end":13248700,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248705,"byte_end":13248712,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248717,"byte_end":13248744,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248749,"byte_end":13248813,"line_start":671,"line_end":671,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248818,"byte_end":13248862,"line_start":672,"line_end":672,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248867,"byte_end":13248870,"line_start":673,"line_end":673,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248875,"byte_end":13248905,"line_start":674,"line_end":674,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248910,"byte_end":13248913,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248918,"byte_end":13248948,"line_start":676,"line_end":676,"column_start":5,"column_end":35}},{"value":"/ let curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248953,"byte_end":13248990,"line_start":677,"line_end":677,"column_start":5,"column_end":42}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13248995,"byte_end":13249065,"line_start":678,"line_end":678,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13249070,"byte_end":13249142,"line_start":679,"line_end":679,"column_start":5,"column_end":77}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13249147,"byte_end":13249202,"line_start":680,"line_end":680,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13249207,"byte_end":13249214,"line_start":681,"line_end":681,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13249266,"byte_end":13249286,"line_start":683,"line_end":683,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange` instead\")","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13249291,"byte_end":13249345,"line_start":684,"line_end":684,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252278,"byte_end":13252298,"line_start":764,"line_end":764,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13249715,"byte_end":13249811,"line_start":699,"line_end":699,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13249816,"byte_end":13249910,"line_start":700,"line_end":700,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13249915,"byte_end":13249986,"line_start":701,"line_end":701,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13249991,"byte_end":13249994,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13249999,"byte_end":13250093,"line_start":703,"line_end":703,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250098,"byte_end":13250193,"line_start":704,"line_end":704,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250198,"byte_end":13250288,"line_start":705,"line_end":705,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250293,"byte_end":13250377,"line_start":706,"line_end":706,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250382,"byte_end":13250385,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250390,"byte_end":13250475,"line_start":708,"line_end":708,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250480,"byte_end":13250511,"line_start":709,"line_end":709,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250516,"byte_end":13250519,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: Atomic::compare_and_set","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250524,"byte_end":13250572,"line_start":711,"line_end":711,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250577,"byte_end":13250580,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Migrating to `compare_exchange_weak`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250585,"byte_end":13250627,"line_start":713,"line_end":713,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250632,"byte_end":13250635,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ `compare_and_set_weak` is equivalent to `compare_exchange_weak` with the following mapping for","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250640,"byte_end":13250738,"line_start":715,"line_end":715,"column_start":5,"column_end":103}},{"value":"/ memory orderings:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250743,"byte_end":13250764,"line_start":716,"line_end":716,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250769,"byte_end":13250772,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ Original | Success | Failure","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250777,"byte_end":13250809,"line_start":718,"line_end":718,"column_start":5,"column_end":37}},{"value":"/ -------- | ------- | -------","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250814,"byte_end":13250846,"line_start":719,"line_end":719,"column_start":5,"column_end":37}},{"value":"/ Relaxed  | Relaxed | Relaxed","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250851,"byte_end":13250883,"line_start":720,"line_end":720,"column_start":5,"column_end":37}},{"value":"/ Acquire  | Acquire | Acquire","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250888,"byte_end":13250920,"line_start":721,"line_end":721,"column_start":5,"column_end":37}},{"value":"/ Release  | Release | Relaxed","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250925,"byte_end":13250957,"line_start":722,"line_end":722,"column_start":5,"column_end":37}},{"value":"/ AcqRel   | AcqRel  | Acquire","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250962,"byte_end":13250994,"line_start":723,"line_end":723,"column_start":5,"column_end":37}},{"value":"/ SeqCst   | SeqCst  | SeqCst","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13250999,"byte_end":13251030,"line_start":724,"line_end":724,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251035,"byte_end":13251038,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251043,"byte_end":13251057,"line_start":726,"line_end":726,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251062,"byte_end":13251065,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251070,"byte_end":13251077,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"/ # #![allow(deprecated)]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251082,"byte_end":13251109,"line_start":729,"line_end":729,"column_start":5,"column_end":32}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251114,"byte_end":13251178,"line_start":730,"line_end":730,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251183,"byte_end":13251227,"line_start":731,"line_end":731,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251232,"byte_end":13251235,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251240,"byte_end":13251270,"line_start":733,"line_end":733,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251275,"byte_end":13251305,"line_start":734,"line_end":734,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251310,"byte_end":13251313,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251318,"byte_end":13251353,"line_start":736,"line_end":736,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251358,"byte_end":13251398,"line_start":737,"line_end":737,"column_start":5,"column_end":45}},{"value":"/ # unsafe { drop(a.load(SeqCst, guard).into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251403,"byte_end":13251475,"line_start":738,"line_end":738,"column_start":5,"column_end":77}},{"value":"/ loop {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251480,"byte_end":13251490,"line_start":739,"line_end":739,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251495,"byte_end":13251558,"line_start":740,"line_end":740,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251563,"byte_end":13251585,"line_start":741,"line_end":741,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251590,"byte_end":13251614,"line_start":742,"line_end":742,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251619,"byte_end":13251641,"line_start":743,"line_end":743,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251646,"byte_end":13251659,"line_start":744,"line_end":744,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251664,"byte_end":13251689,"line_start":745,"line_end":745,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251694,"byte_end":13251728,"line_start":746,"line_end":746,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251733,"byte_end":13251763,"line_start":747,"line_end":747,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251768,"byte_end":13251781,"line_start":748,"line_end":748,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251786,"byte_end":13251795,"line_start":749,"line_end":749,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251800,"byte_end":13251805,"line_start":750,"line_end":750,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251810,"byte_end":13251813,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251818,"byte_end":13251859,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251864,"byte_end":13251874,"line_start":753,"line_end":753,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251879,"byte_end":13251954,"line_start":754,"line_end":754,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251959,"byte_end":13251986,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13251991,"byte_end":13252034,"line_start":756,"line_end":756,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252039,"byte_end":13252048,"line_start":757,"line_end":757,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252053,"byte_end":13252058,"line_start":758,"line_end":758,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(curr.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252063,"byte_end":13252118,"line_start":759,"line_end":759,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252123,"byte_end":13252130,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"allow(deprecated)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252182,"byte_end":13252202,"line_start":762,"line_end":762,"column_start":5,"column_end":25}},{"value":"deprecated(note = \"Use `compare_exchange_weak` instead\")","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252207,"byte_end":13252266,"line_start":763,"line_end":763,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253377,"byte_end":13253386,"line_start":797,"line_end":797,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252646,"byte_end":13252685,"line_start":778,"line_end":778,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252690,"byte_end":13252693,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252698,"byte_end":13252792,"line_start":780,"line_end":780,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252797,"byte_end":13252853,"line_start":781,"line_end":781,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252858,"byte_end":13252861,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252866,"byte_end":13252956,"line_start":783,"line_end":783,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252961,"byte_end":13252975,"line_start":784,"line_end":784,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252980,"byte_end":13252983,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13252988,"byte_end":13253002,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253007,"byte_end":13253010,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253015,"byte_end":13253022,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253027,"byte_end":13253084,"line_start":789,"line_end":789,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253089,"byte_end":13253133,"line_start":790,"line_end":790,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253138,"byte_end":13253141,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253146,"byte_end":13253206,"line_start":792,"line_end":792,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253211,"byte_end":13253241,"line_start":793,"line_end":793,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253246,"byte_end":13253301,"line_start":794,"line_end":794,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253306,"byte_end":13253353,"line_start":795,"line_end":795,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253358,"byte_end":13253365,"line_start":796,"line_end":796,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254285,"byte_end":13254293,"line_start":820,"line_end":820,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253557,"byte_end":13253595,"line_start":801,"line_end":801,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253600,"byte_end":13253603,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253608,"byte_end":13253701,"line_start":803,"line_end":803,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253706,"byte_end":13253762,"line_start":804,"line_end":804,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253767,"byte_end":13253770,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253775,"byte_end":13253865,"line_start":806,"line_end":806,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253870,"byte_end":13253884,"line_start":807,"line_end":807,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253889,"byte_end":13253892,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253897,"byte_end":13253911,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253916,"byte_end":13253919,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253924,"byte_end":13253931,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253936,"byte_end":13253993,"line_start":812,"line_end":812,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13253998,"byte_end":13254042,"line_start":813,"line_end":813,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254047,"byte_end":13254050,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254055,"byte_end":13254115,"line_start":815,"line_end":815,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254120,"byte_end":13254150,"line_start":816,"line_end":816,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254155,"byte_end":13254209,"line_start":817,"line_end":817,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254214,"byte_end":13254261,"line_start":818,"line_end":818,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254266,"byte_end":13254273,"line_start":819,"line_end":819,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255193,"byte_end":13255202,"line_start":843,"line_end":843,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254462,"byte_end":13254501,"line_start":824,"line_end":824,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254506,"byte_end":13254509,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254514,"byte_end":13254608,"line_start":826,"line_end":826,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254613,"byte_end":13254669,"line_start":827,"line_end":827,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254674,"byte_end":13254677,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254682,"byte_end":13254772,"line_start":829,"line_end":829,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254777,"byte_end":13254791,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254796,"byte_end":13254799,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254804,"byte_end":13254818,"line_start":832,"line_end":832,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254823,"byte_end":13254826,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254831,"byte_end":13254838,"line_start":834,"line_end":834,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254843,"byte_end":13254900,"line_start":835,"line_end":835,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254905,"byte_end":13254949,"line_start":836,"line_end":836,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254954,"byte_end":13254957,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13254962,"byte_end":13255022,"line_start":838,"line_end":838,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255027,"byte_end":13255057,"line_start":839,"line_end":839,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255062,"byte_end":13255117,"line_start":840,"line_end":840,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255122,"byte_end":13255169,"line_start":841,"line_end":841,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255174,"byte_end":13255181,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256499,"byte_end":13256509,"line_start":881,"line_end":881,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255372,"byte_end":13255407,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255412,"byte_end":13255415,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255420,"byte_end":13255509,"line_start":849,"line_end":849,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255514,"byte_end":13255600,"line_start":850,"line_end":850,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255605,"byte_end":13255640,"line_start":851,"line_end":851,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255645,"byte_end":13255648,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255653,"byte_end":13255665,"line_start":853,"line_end":853,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255670,"byte_end":13255673,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255678,"byte_end":13255737,"line_start":855,"line_end":855,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255742,"byte_end":13255745,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255750,"byte_end":13255762,"line_start":857,"line_end":857,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255767,"byte_end":13255770,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255775,"byte_end":13255862,"line_start":859,"line_end":859,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255867,"byte_end":13255900,"line_start":860,"line_end":860,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255905,"byte_end":13255908,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255913,"byte_end":13255927,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255932,"byte_end":13255935,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255940,"byte_end":13255951,"line_start":864,"line_end":864,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255956,"byte_end":13255975,"line_start":865,"line_end":865,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13255980,"byte_end":13256014,"line_start":866,"line_end":866,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256019,"byte_end":13256045,"line_start":867,"line_end":867,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256050,"byte_end":13256077,"line_start":868,"line_end":868,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256082,"byte_end":13256087,"line_start":869,"line_end":869,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256092,"byte_end":13256095,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256100,"byte_end":13256133,"line_start":871,"line_end":871,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256138,"byte_end":13256166,"line_start":872,"line_end":872,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256171,"byte_end":13256265,"line_start":873,"line_end":873,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256270,"byte_end":13256317,"line_start":874,"line_end":874,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256322,"byte_end":13256342,"line_start":875,"line_end":875,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256347,"byte_end":13256426,"line_start":876,"line_end":876,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256431,"byte_end":13256444,"line_start":877,"line_end":877,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256449,"byte_end":13256458,"line_start":878,"line_end":878,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256463,"byte_end":13256468,"line_start":879,"line_end":879,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256473,"byte_end":13256480,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13258196,"byte_end":13258210,"line_start":928,"line_end":928,"column_start":19,"column_end":33},"name":"try_into_owned","qualname":"<Atomic<T>>::try_into_owned","value":"pub unsafe fn try_into_owned(Self) -> Option<Owned<T>>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee if it is non-null.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee if it is non-null.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13256977,"byte_end":13257030,"line_start":895,"line_end":895,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257035,"byte_end":13257038,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257043,"byte_end":13257132,"line_start":897,"line_end":897,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257137,"byte_end":13257223,"line_start":898,"line_end":898,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257228,"byte_end":13257263,"line_start":899,"line_end":899,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257268,"byte_end":13257271,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257276,"byte_end":13257288,"line_start":901,"line_end":901,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257293,"byte_end":13257296,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257301,"byte_end":13257388,"line_start":903,"line_end":903,"column_start":5,"column_end":92}},{"value":"/ reference to the same object, or the pointer is null.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257393,"byte_end":13257450,"line_start":904,"line_end":904,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257455,"byte_end":13257458,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257463,"byte_end":13257477,"line_start":906,"line_end":906,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257482,"byte_end":13257485,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257490,"byte_end":13257501,"line_start":908,"line_end":908,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257506,"byte_end":13257525,"line_start":909,"line_end":909,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257530,"byte_end":13257564,"line_start":910,"line_end":910,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257569,"byte_end":13257595,"line_start":911,"line_end":911,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257600,"byte_end":13257627,"line_start":912,"line_end":912,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257632,"byte_end":13257637,"line_start":913,"line_end":913,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257642,"byte_end":13257645,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257650,"byte_end":13257683,"line_start":915,"line_end":915,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257688,"byte_end":13257716,"line_start":916,"line_end":916,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257721,"byte_end":13257815,"line_start":917,"line_end":917,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves, but it may be null, so we have to be careful.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257820,"byte_end":13257913,"line_start":918,"line_end":918,"column_start":5,"column_end":98}},{"value":"/         let old = mem::replace(&mut self.ptr, Atomic::null());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257918,"byte_end":13257984,"line_start":919,"line_end":919,"column_start":5,"column_end":71}},{"value":"/         unsafe {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13257989,"byte_end":13258009,"line_start":920,"line_end":920,"column_start":5,"column_end":25}},{"value":"/             if let Some(x) = old.try_into_owned() {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13258014,"byte_end":13258069,"line_start":921,"line_end":921,"column_start":5,"column_end":60}},{"value":"/                 drop(x)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13258074,"byte_end":13258101,"line_start":922,"line_end":922,"column_start":5,"column_end":32}},{"value":"/             }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13258106,"byte_end":13258123,"line_start":923,"line_end":923,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13258128,"byte_end":13258141,"line_start":924,"line_end":924,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13258146,"byte_end":13258155,"line_start":925,"line_end":925,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13258160,"byte_end":13258165,"line_start":926,"line_end":926,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13258170,"byte_end":13258177,"line_start":927,"line_end":927,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":243},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261181,"byte_end":13261188,"line_start":1041,"line_end":1041,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T: ?Sized + Pointable>","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261118,"byte_end":13261170,"line_start":1040,"line_end":1040,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261280,"byte_end":13261290,"line_start":1043,"line_end":1043,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261218,"byte_end":13261272,"line_start":1042,"line_end":1042,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261597,"byte_end":13261607,"line_start":1051,"line_end":1051,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":243},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261312,"byte_end":13261376,"line_start":1045,"line_end":1045,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261381,"byte_end":13261384,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261389,"byte_end":13261401,"line_start":1047,"line_end":1047,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261406,"byte_end":13261409,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ The given `data` should have been created by `Pointer::into_usize()`, and one `data` should","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261414,"byte_end":13261509,"line_start":1049,"line_end":1049,"column_start":5,"column_end":100}},{"value":"/ not be converted back by `Pointer::from_usize()` multiple times.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261514,"byte_end":13261582,"line_start":1050,"line_end":1050,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":247},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261873,"byte_end":13261878,"line_start":1060,"line_end":1060,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261633,"byte_end":13261668,"line_start":1054,"line_end":1054,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261669,"byte_end":13261672,"line_start":1055,"line_end":1055,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261673,"byte_end":13261715,"line_start":1056,"line_end":1056,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261716,"byte_end":13261719,"line_start":1057,"line_end":1057,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261720,"byte_end":13261818,"line_start":1058,"line_end":1058,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13261819,"byte_end":13261861,"line_start":1059,"line_end":1059,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263276,"byte_end":13263284,"line_start":1111,"line_end":1111,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262528,"byte_end":13262578,"line_start":1089,"line_end":1089,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262583,"byte_end":13262586,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262591,"byte_end":13262683,"line_start":1091,"line_end":1091,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262688,"byte_end":13262781,"line_start":1092,"line_end":1092,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262786,"byte_end":13262811,"line_start":1093,"line_end":1093,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262816,"byte_end":13262819,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262824,"byte_end":13262836,"line_start":1095,"line_end":1095,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262841,"byte_end":13262844,"line_start":1096,"line_end":1096,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262849,"byte_end":13262893,"line_start":1097,"line_end":1097,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262898,"byte_end":13262901,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262906,"byte_end":13262918,"line_start":1099,"line_end":1099,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262923,"byte_end":13262926,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ The given `raw` should have been derived from `Owned`, and one `raw` should not be converted","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262931,"byte_end":13263027,"line_start":1101,"line_end":1101,"column_start":5,"column_end":101}},{"value":"/ back by `Owned::from_raw()` multiple times.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263032,"byte_end":13263079,"line_start":1102,"line_end":1102,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263084,"byte_end":13263087,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263092,"byte_end":13263106,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263111,"byte_end":13263114,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263119,"byte_end":13263126,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263131,"byte_end":13263162,"line_start":1107,"line_end":1107,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263167,"byte_end":13263170,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263175,"byte_end":13263245,"line_start":1109,"line_end":1109,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263250,"byte_end":13263257,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263682,"byte_end":13263690,"line_start":1128,"line_end":1128,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263419,"byte_end":13263463,"line_start":1117,"line_end":1117,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263468,"byte_end":13263471,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263476,"byte_end":13263490,"line_start":1119,"line_end":1119,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263495,"byte_end":13263498,"line_start":1120,"line_end":1120,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263503,"byte_end":13263510,"line_start":1121,"line_end":1121,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263515,"byte_end":13263546,"line_start":1122,"line_end":1122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263551,"byte_end":13263554,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263559,"byte_end":13263588,"line_start":1124,"line_end":1124,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263593,"byte_end":13263628,"line_start":1125,"line_end":1125,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263633,"byte_end":13263658,"line_start":1126,"line_end":1126,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263663,"byte_end":13263670,"line_start":1127,"line_end":1127,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264079,"byte_end":13264082,"line_start":1143,"line_end":1143,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263849,"byte_end":13263930,"line_start":1134,"line_end":1134,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263935,"byte_end":13263938,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263943,"byte_end":13263957,"line_start":1136,"line_end":1136,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263962,"byte_end":13263965,"line_start":1137,"line_end":1137,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263970,"byte_end":13263977,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13263982,"byte_end":13264013,"line_start":1139,"line_end":1139,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264018,"byte_end":13264021,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264026,"byte_end":13264055,"line_start":1141,"line_end":1141,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264060,"byte_end":13264067,"line_start":1142,"line_end":1142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264421,"byte_end":13264425,"line_start":1158,"line_end":1158,"column_start":12,"column_end":16},"name":"init","qualname":"<Owned<T>>::init","value":"pub fn init(T::Init) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264183,"byte_end":13264264,"line_start":1149,"line_end":1149,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264269,"byte_end":13264272,"line_start":1150,"line_end":1150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264277,"byte_end":13264291,"line_start":1151,"line_end":1151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264296,"byte_end":13264299,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264304,"byte_end":13264311,"line_start":1153,"line_end":1153,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264316,"byte_end":13264347,"line_start":1154,"line_end":1154,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264352,"byte_end":13264355,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::<i32>::init(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264360,"byte_end":13264397,"line_start":1156,"line_end":1156,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264402,"byte_end":13264409,"line_start":1157,"line_end":1157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264903,"byte_end":13264914,"line_start":1175,"line_end":1175,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264517,"byte_end":13264566,"line_start":1162,"line_end":1162,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264571,"byte_end":13264574,"line_start":1163,"line_end":1163,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264579,"byte_end":13264593,"line_start":1164,"line_end":1164,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264598,"byte_end":13264601,"line_start":1165,"line_end":1165,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264606,"byte_end":13264613,"line_start":1166,"line_end":1166,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264618,"byte_end":13264666,"line_start":1167,"line_end":1167,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264671,"byte_end":13264674,"line_start":1168,"line_end":1168,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264679,"byte_end":13264708,"line_start":1169,"line_end":1169,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264713,"byte_end":13264743,"line_start":1170,"line_end":1170,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264748,"byte_end":13264781,"line_start":1171,"line_end":1171,"column_start":5,"column_end":38}},{"value":"/ # unsafe { drop(p.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264786,"byte_end":13264838,"line_start":1172,"line_end":1172,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264843,"byte_end":13264850,"line_start":1173,"line_end":1173,"column_start":5,"column_end":12}},{"value":"allow(clippy :: needless_lifetimes)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264855,"byte_end":13264891,"line_start":1174,"line_end":1174,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265234,"byte_end":13265237,"line_start":1188,"line_end":1188,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265026,"byte_end":13265072,"line_start":1179,"line_end":1179,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265077,"byte_end":13265080,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265085,"byte_end":13265099,"line_start":1181,"line_end":1181,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265104,"byte_end":13265107,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265112,"byte_end":13265119,"line_start":1183,"line_end":1183,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265124,"byte_end":13265155,"line_start":1184,"line_end":1184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265160,"byte_end":13265163,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265168,"byte_end":13265210,"line_start":1186,"line_end":1186,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265215,"byte_end":13265222,"line_start":1187,"line_end":1187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265710,"byte_end":13265718,"line_start":1206,"line_end":1206,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265333,"byte_end":13265423,"line_start":1193,"line_end":1193,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265428,"byte_end":13265466,"line_start":1194,"line_end":1194,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265471,"byte_end":13265474,"line_start":1195,"line_end":1195,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265479,"byte_end":13265493,"line_start":1196,"line_end":1196,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265498,"byte_end":13265501,"line_start":1197,"line_end":1197,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265506,"byte_end":13265513,"line_start":1198,"line_end":1198,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265518,"byte_end":13265549,"line_start":1199,"line_end":1199,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265554,"byte_end":13265557,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265562,"byte_end":13265591,"line_start":1201,"line_end":1201,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265596,"byte_end":13265623,"line_start":1202,"line_end":1202,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265628,"byte_end":13265654,"line_start":1203,"line_end":1203,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265659,"byte_end":13265686,"line_start":1204,"line_end":1204,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265691,"byte_end":13265698,"line_start":1205,"line_end":1205,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268180,"byte_end":13268186,"line_start":1309,"line_end":1309,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13267901,"byte_end":13267954,"line_start":1303,"line_end":1303,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13267955,"byte_end":13267958,"line_start":1304,"line_end":1304,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13267959,"byte_end":13268022,"line_start":1305,"line_end":1305,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268023,"byte_end":13268026,"line_start":1306,"line_end":1306,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268027,"byte_end":13268125,"line_start":1307,"line_end":1307,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268126,"byte_end":13268168,"line_start":1308,"line_end":1308,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269365,"byte_end":13269371,"line_start":1358,"line_end":1358,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268838,"byte_end":13268898,"line_start":1341,"line_end":1341,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268903,"byte_end":13268906,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268911,"byte_end":13268925,"line_start":1343,"line_end":1343,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268930,"byte_end":13268933,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268938,"byte_end":13268945,"line_start":1345,"line_end":1345,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268950,"byte_end":13269006,"line_start":1346,"line_end":1346,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269011,"byte_end":13269055,"line_start":1347,"line_end":1347,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269060,"byte_end":13269063,"line_start":1348,"line_end":1348,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269068,"byte_end":13269097,"line_start":1349,"line_end":1349,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269102,"byte_end":13269132,"line_start":1350,"line_end":1350,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269137,"byte_end":13269165,"line_start":1351,"line_end":1351,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269170,"byte_end":13269173,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269178,"byte_end":13269208,"line_start":1353,"line_end":1353,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269213,"byte_end":13269247,"line_start":1354,"line_end":1354,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269252,"byte_end":13269284,"line_start":1355,"line_end":1355,"column_start":5,"column_end":37}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269289,"byte_end":13269341,"line_start":1356,"line_end":1356,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269346,"byte_end":13269353,"line_start":1357,"line_end":1357,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269748,"byte_end":13269752,"line_start":1375,"line_end":1375,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269532,"byte_end":13269563,"line_start":1365,"line_end":1365,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269568,"byte_end":13269571,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269576,"byte_end":13269590,"line_start":1367,"line_end":1367,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269595,"byte_end":13269598,"line_start":1368,"line_end":1368,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269603,"byte_end":13269610,"line_start":1369,"line_end":1369,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269615,"byte_end":13269647,"line_start":1370,"line_end":1370,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269652,"byte_end":13269655,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269660,"byte_end":13269694,"line_start":1372,"line_end":1372,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269699,"byte_end":13269724,"line_start":1373,"line_end":1373,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269729,"byte_end":13269736,"line_start":1374,"line_end":1374,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270366,"byte_end":13270373,"line_start":1397,"line_end":1397,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269867,"byte_end":13269909,"line_start":1382,"line_end":1382,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269914,"byte_end":13269917,"line_start":1383,"line_end":1383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269922,"byte_end":13269936,"line_start":1384,"line_end":1384,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269941,"byte_end":13269944,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269949,"byte_end":13269956,"line_start":1386,"line_end":1386,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269961,"byte_end":13270017,"line_start":1387,"line_end":1387,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270022,"byte_end":13270066,"line_start":1388,"line_end":1388,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270071,"byte_end":13270074,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270079,"byte_end":13270106,"line_start":1390,"line_end":1390,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270111,"byte_end":13270141,"line_start":1391,"line_end":1391,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270146,"byte_end":13270191,"line_start":1392,"line_end":1392,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270196,"byte_end":13270234,"line_start":1393,"line_end":1393,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270239,"byte_end":13270285,"line_start":1394,"line_end":1394,"column_start":5,"column_end":51}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270290,"byte_end":13270342,"line_start":1395,"line_end":1395,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270347,"byte_end":13270354,"line_start":1396,"line_end":1396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271710,"byte_end":13271715,"line_start":1434,"line_end":1434,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270473,"byte_end":13270502,"line_start":1402,"line_end":1402,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270507,"byte_end":13270510,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270515,"byte_end":13270593,"line_start":1404,"line_end":1404,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270598,"byte_end":13270601,"line_start":1405,"line_end":1405,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270606,"byte_end":13270618,"line_start":1406,"line_end":1406,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270623,"byte_end":13270626,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270631,"byte_end":13270716,"line_start":1408,"line_end":1408,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270721,"byte_end":13270724,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270729,"byte_end":13270820,"line_start":1410,"line_end":1410,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270825,"byte_end":13270874,"line_start":1411,"line_end":1411,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270879,"byte_end":13270882,"line_start":1412,"line_end":1412,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270887,"byte_end":13270959,"line_start":1413,"line_end":1413,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13270964,"byte_end":13271039,"line_start":1414,"line_end":1414,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271044,"byte_end":13271047,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271052,"byte_end":13271145,"line_start":1416,"line_end":1416,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271150,"byte_end":13271243,"line_start":1417,"line_end":1417,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271248,"byte_end":13271286,"line_start":1418,"line_end":1418,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271291,"byte_end":13271294,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271299,"byte_end":13271313,"line_start":1420,"line_end":1420,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271318,"byte_end":13271321,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271326,"byte_end":13271333,"line_start":1422,"line_end":1422,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271338,"byte_end":13271387,"line_start":1423,"line_end":1423,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271392,"byte_end":13271436,"line_start":1424,"line_end":1424,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271441,"byte_end":13271444,"line_start":1425,"line_end":1425,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271449,"byte_end":13271479,"line_start":1426,"line_end":1426,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271484,"byte_end":13271514,"line_start":1427,"line_end":1427,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271519,"byte_end":13271553,"line_start":1428,"line_end":1428,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271558,"byte_end":13271570,"line_start":1429,"line_end":1429,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271575,"byte_end":13271612,"line_start":1430,"line_end":1430,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271617,"byte_end":13271622,"line_start":1431,"line_end":1431,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271627,"byte_end":13271679,"line_start":1432,"line_end":1432,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271684,"byte_end":13271691,"line_start":1433,"line_end":1433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273038,"byte_end":13273047,"line_start":1476,"line_end":1476,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271821,"byte_end":13271850,"line_start":1439,"line_end":1439,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271855,"byte_end":13271858,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271863,"byte_end":13271949,"line_start":1441,"line_end":1441,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271954,"byte_end":13271957,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271962,"byte_end":13271974,"line_start":1443,"line_end":1443,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271979,"byte_end":13271982,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13271987,"byte_end":13272082,"line_start":1445,"line_end":1445,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272087,"byte_end":13272124,"line_start":1446,"line_end":1446,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272129,"byte_end":13272132,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272137,"byte_end":13272226,"line_start":1448,"line_end":1448,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272231,"byte_end":13272234,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272239,"byte_end":13272313,"line_start":1450,"line_end":1450,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272318,"byte_end":13272321,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272326,"byte_end":13272340,"line_start":1452,"line_end":1452,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272345,"byte_end":13272348,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272353,"byte_end":13272360,"line_start":1454,"line_end":1454,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272365,"byte_end":13272414,"line_start":1455,"line_end":1455,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272419,"byte_end":13272463,"line_start":1456,"line_end":1456,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272468,"byte_end":13272471,"line_start":1457,"line_end":1457,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272476,"byte_end":13272518,"line_start":1458,"line_end":1458,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272523,"byte_end":13272553,"line_start":1459,"line_end":1459,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272558,"byte_end":13272561,"line_start":1460,"line_end":1460,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272566,"byte_end":13272604,"line_start":1461,"line_end":1461,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272609,"byte_end":13272621,"line_start":1462,"line_end":1462,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272626,"byte_end":13272656,"line_start":1463,"line_end":1463,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272661,"byte_end":13272691,"line_start":1464,"line_end":1464,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272696,"byte_end":13272737,"line_start":1465,"line_end":1465,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272742,"byte_end":13272760,"line_start":1466,"line_end":1466,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272765,"byte_end":13272809,"line_start":1467,"line_end":1467,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272814,"byte_end":13272819,"line_start":1468,"line_end":1468,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272824,"byte_end":13272827,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272832,"byte_end":13272866,"line_start":1470,"line_end":1470,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272871,"byte_end":13272883,"line_start":1471,"line_end":1471,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272888,"byte_end":13272940,"line_start":1472,"line_end":1472,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272945,"byte_end":13272950,"line_start":1473,"line_end":1473,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13272955,"byte_end":13273007,"line_start":1474,"line_end":1474,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273012,"byte_end":13273019,"line_start":1475,"line_end":1475,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274437,"byte_end":13274443,"line_start":1513,"line_end":1513,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273165,"byte_end":13273205,"line_start":1481,"line_end":1481,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273210,"byte_end":13273213,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273218,"byte_end":13273313,"line_start":1483,"line_end":1483,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273318,"byte_end":13273321,"line_start":1484,"line_end":1484,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273326,"byte_end":13273338,"line_start":1485,"line_end":1485,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273343,"byte_end":13273346,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273351,"byte_end":13273436,"line_start":1487,"line_end":1487,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273441,"byte_end":13273444,"line_start":1488,"line_end":1488,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possibility of data races due to lack of proper synchronization.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273449,"byte_end":13273540,"line_start":1489,"line_end":1489,"column_start":5,"column_end":96}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273545,"byte_end":13273594,"line_start":1490,"line_end":1490,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273599,"byte_end":13273602,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273607,"byte_end":13273679,"line_start":1492,"line_end":1492,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273684,"byte_end":13273759,"line_start":1493,"line_end":1493,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273764,"byte_end":13273767,"line_start":1494,"line_end":1494,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273772,"byte_end":13273865,"line_start":1495,"line_end":1495,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273870,"byte_end":13273963,"line_start":1496,"line_end":1496,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13273968,"byte_end":13274006,"line_start":1497,"line_end":1497,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274011,"byte_end":13274014,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274019,"byte_end":13274033,"line_start":1499,"line_end":1499,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274038,"byte_end":13274041,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274046,"byte_end":13274053,"line_start":1501,"line_end":1501,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274058,"byte_end":13274107,"line_start":1502,"line_end":1502,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274112,"byte_end":13274156,"line_start":1503,"line_end":1503,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274161,"byte_end":13274164,"line_start":1504,"line_end":1504,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274169,"byte_end":13274199,"line_start":1505,"line_end":1505,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274204,"byte_end":13274234,"line_start":1506,"line_end":1506,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274239,"byte_end":13274273,"line_start":1507,"line_end":1507,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274278,"byte_end":13274290,"line_start":1508,"line_end":1508,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274295,"byte_end":13274339,"line_start":1509,"line_end":1509,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274344,"byte_end":13274349,"line_start":1510,"line_end":1510,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274354,"byte_end":13274406,"line_start":1511,"line_end":1511,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274411,"byte_end":13274418,"line_start":1512,"line_end":1512,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275303,"byte_end":13275313,"line_start":1546,"line_end":1546,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274633,"byte_end":13274668,"line_start":1522,"line_end":1522,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274673,"byte_end":13274676,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274681,"byte_end":13274693,"line_start":1524,"line_end":1524,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274698,"byte_end":13274701,"line_start":1525,"line_end":1525,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274706,"byte_end":13274765,"line_start":1526,"line_end":1526,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274770,"byte_end":13274773,"line_start":1527,"line_end":1527,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274778,"byte_end":13274790,"line_start":1528,"line_end":1528,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274795,"byte_end":13274798,"line_start":1529,"line_end":1529,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274803,"byte_end":13274890,"line_start":1530,"line_end":1530,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274895,"byte_end":13274928,"line_start":1531,"line_end":1531,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274933,"byte_end":13274936,"line_start":1532,"line_end":1532,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274941,"byte_end":13274955,"line_start":1533,"line_end":1533,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274960,"byte_end":13274963,"line_start":1534,"line_end":1534,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274968,"byte_end":13274975,"line_start":1535,"line_end":1535,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13274980,"byte_end":13275029,"line_start":1536,"line_end":1536,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275034,"byte_end":13275078,"line_start":1537,"line_end":1537,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275083,"byte_end":13275086,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275091,"byte_end":13275121,"line_start":1539,"line_end":1539,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275126,"byte_end":13275138,"line_start":1540,"line_end":1540,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275143,"byte_end":13275185,"line_start":1541,"line_end":1541,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275190,"byte_end":13275228,"line_start":1542,"line_end":1542,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275233,"byte_end":13275262,"line_start":1543,"line_end":1543,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275267,"byte_end":13275272,"line_start":1544,"line_end":1544,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275277,"byte_end":13275284,"line_start":1545,"line_end":1545,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276138,"byte_end":13276152,"line_start":1573,"line_end":1573,"column_start":19,"column_end":33},"name":"try_into_owned","qualname":"<Shared>::try_into_owned","value":"pub unsafe fn try_into_owned(Self) -> Option<Owned<T>>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee if it is not null.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee if it is not null.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275465,"byte_end":13275518,"line_start":1551,"line_end":1551,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275523,"byte_end":13275526,"line_start":1552,"line_end":1552,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275531,"byte_end":13275543,"line_start":1553,"line_end":1553,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275548,"byte_end":13275551,"line_start":1554,"line_end":1554,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275556,"byte_end":13275643,"line_start":1555,"line_end":1555,"column_start":5,"column_end":92}},{"value":"/ reference to the same object, or if the pointer is null.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275648,"byte_end":13275708,"line_start":1556,"line_end":1556,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275713,"byte_end":13275716,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275721,"byte_end":13275735,"line_start":1558,"line_end":1558,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275740,"byte_end":13275743,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275748,"byte_end":13275755,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275760,"byte_end":13275809,"line_start":1561,"line_end":1561,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275814,"byte_end":13275858,"line_start":1562,"line_end":1562,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275863,"byte_end":13275866,"line_start":1563,"line_end":1563,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275871,"byte_end":13275901,"line_start":1564,"line_end":1564,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275906,"byte_end":13275918,"line_start":1565,"line_end":1565,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275923,"byte_end":13275965,"line_start":1566,"line_end":1566,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13275970,"byte_end":13276008,"line_start":1567,"line_end":1567,"column_start":5,"column_end":43}},{"value":"/     if let Some(x) = p.try_into_owned() {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276013,"byte_end":13276058,"line_start":1568,"line_end":1568,"column_start":5,"column_end":50}},{"value":"/         drop(x);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276063,"byte_end":13276083,"line_start":1569,"line_end":1569,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276088,"byte_end":13276097,"line_start":1570,"line_end":1570,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276102,"byte_end":13276107,"line_start":1571,"line_end":1571,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276112,"byte_end":13276119,"line_start":1572,"line_end":1572,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276776,"byte_end":13276779,"line_start":1595,"line_end":1595,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276311,"byte_end":13276357,"line_start":1581,"line_end":1581,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276362,"byte_end":13276365,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276370,"byte_end":13276384,"line_start":1583,"line_end":1583,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276389,"byte_end":13276392,"line_start":1584,"line_end":1584,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276397,"byte_end":13276404,"line_start":1585,"line_end":1585,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276409,"byte_end":13276465,"line_start":1586,"line_end":1586,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276470,"byte_end":13276514,"line_start":1587,"line_end":1587,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276519,"byte_end":13276522,"line_start":1588,"line_end":1588,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276527,"byte_end":13276589,"line_start":1589,"line_end":1589,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276594,"byte_end":13276624,"line_start":1590,"line_end":1590,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276629,"byte_end":13276663,"line_start":1591,"line_end":1591,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276668,"byte_end":13276695,"line_start":1592,"line_end":1592,"column_start":5,"column_end":32}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276700,"byte_end":13276752,"line_start":1593,"line_end":1593,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276757,"byte_end":13276764,"line_start":1594,"line_end":1594,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277510,"byte_end":13277518,"line_start":1619,"line_end":1619,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276875,"byte_end":13276965,"line_start":1600,"line_end":1600,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13276970,"byte_end":13277008,"line_start":1601,"line_end":1601,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277013,"byte_end":13277016,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277021,"byte_end":13277035,"line_start":1603,"line_end":1603,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277040,"byte_end":13277043,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277048,"byte_end":13277055,"line_start":1605,"line_end":1605,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277060,"byte_end":13277109,"line_start":1606,"line_end":1606,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277114,"byte_end":13277158,"line_start":1607,"line_end":1607,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277163,"byte_end":13277166,"line_start":1608,"line_end":1608,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277171,"byte_end":13277201,"line_start":1609,"line_end":1609,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277206,"byte_end":13277236,"line_start":1610,"line_end":1610,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277241,"byte_end":13277276,"line_start":1611,"line_end":1611,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277281,"byte_end":13277309,"line_start":1612,"line_end":1612,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277314,"byte_end":13277317,"line_start":1613,"line_end":1613,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277322,"byte_end":13277350,"line_start":1614,"line_end":1614,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277355,"byte_end":13277383,"line_start":1615,"line_end":1615,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277388,"byte_end":13277429,"line_start":1616,"line_end":1616,"column_start":5,"column_end":46}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277434,"byte_end":13277486,"line_start":1617,"line_end":1617,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277491,"byte_end":13277498,"line_start":1618,"line_end":1618,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":373},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13280503,"byte_end":13280512,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":374}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13280454,"byte_end":13280491,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13280819,"byte_end":13280822,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13280779,"byte_end":13280807,"line_start":38,"line_end":38,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13280927,"byte_end":13280935,"line_start":44,"line_end":44,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13280870,"byte_end":13280915,"line_start":43,"line_end":43,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281603,"byte_end":13281614,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":390}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281555,"byte_end":13281591,"line_start":72,"line_end":72,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281725,"byte_end":13281728,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281679,"byte_end":13281699,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281704,"byte_end":13281713,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281866,"byte_end":13281875,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281797,"byte_end":13281840,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281845,"byte_end":13281854,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13282031,"byte_end":13282040,"line_start":92,"line_end":92,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281949,"byte_end":13282005,"line_start":90,"line_end":90,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13282010,"byte_end":13282019,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":479},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302974,"byte_end":13302979,"line_start":71,"line_end":71,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":480}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301205,"byte_end":13301254,"line_start":11,"line_end":11,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301255,"byte_end":13301258,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301259,"byte_end":13301272,"line_start":13,"line_end":13,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301273,"byte_end":13301276,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301277,"byte_end":13301356,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301357,"byte_end":13301360,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301361,"byte_end":13301368,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301369,"byte_end":13301402,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301403,"byte_end":13301406,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301407,"byte_end":13301505,"line_start":20,"line_end":20,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301506,"byte_end":13301598,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301599,"byte_end":13301629,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301630,"byte_end":13301637,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301638,"byte_end":13301641,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301642,"byte_end":13301718,"line_start":25,"line_end":25,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301719,"byte_end":13301722,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301723,"byte_end":13301750,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301751,"byte_end":13301754,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301755,"byte_end":13301842,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301843,"byte_end":13301859,"line_start":30,"line_end":30,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301860,"byte_end":13301863,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301864,"byte_end":13301871,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301872,"byte_end":13301921,"line_start":33,"line_end":33,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301922,"byte_end":13301966,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301967,"byte_end":13301970,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13301971,"byte_end":13302009,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302010,"byte_end":13302039,"line_start":37,"line_end":37,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302040,"byte_end":13302043,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302044,"byte_end":13302074,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302075,"byte_end":13302105,"line_start":40,"line_end":40,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302106,"byte_end":13302109,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302110,"byte_end":13302184,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302185,"byte_end":13302219,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302220,"byte_end":13302223,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302224,"byte_end":13302275,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302276,"byte_end":13302322,"line_start":46,"line_end":46,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302323,"byte_end":13302366,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302367,"byte_end":13302372,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302373,"byte_end":13302425,"line_start":49,"line_end":49,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302426,"byte_end":13302433,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302434,"byte_end":13302437,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302438,"byte_end":13302459,"line_start":52,"line_end":52,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302460,"byte_end":13302463,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302464,"byte_end":13302559,"line_start":54,"line_end":54,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302560,"byte_end":13302658,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302659,"byte_end":13302678,"line_start":56,"line_end":56,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302679,"byte_end":13302682,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302683,"byte_end":13302690,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302691,"byte_end":13302724,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302725,"byte_end":13302728,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302729,"byte_end":13302759,"line_start":61,"line_end":61,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302760,"byte_end":13302790,"line_start":62,"line_end":62,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302791,"byte_end":13302823,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302824,"byte_end":13302841,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302842,"byte_end":13302874,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302875,"byte_end":13302892,"line_start":66,"line_end":66,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302893,"byte_end":13302926,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302927,"byte_end":13302934,"line_start":68,"line_end":68,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302935,"byte_end":13302938,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: super::pin","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13302939,"byte_end":13302962,"line_start":70,"line_end":70,"column_start":1,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303954,"byte_end":13303959,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303038,"byte_end":13303127,"line_start":76,"line_end":76,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303132,"byte_end":13303157,"line_start":77,"line_end":77,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303162,"byte_end":13303165,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303170,"byte_end":13303263,"line_start":79,"line_end":79,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303268,"byte_end":13303356,"line_start":80,"line_end":80,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303361,"byte_end":13303451,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303456,"byte_end":13303496,"line_start":82,"line_end":82,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303501,"byte_end":13303504,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303509,"byte_end":13303599,"line_start":84,"line_end":84,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303604,"byte_end":13303695,"line_start":85,"line_end":85,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303700,"byte_end":13303787,"line_start":86,"line_end":86,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303792,"byte_end":13303812,"line_start":87,"line_end":87,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303817,"byte_end":13303820,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303825,"byte_end":13303912,"line_start":89,"line_end":89,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303917,"byte_end":13303942,"line_start":90,"line_end":90,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13308316,"byte_end":13308331,"line_start":190,"line_end":190,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13304123,"byte_end":13304212,"line_start":101,"line_end":101,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13304217,"byte_end":13304242,"line_start":102,"line_end":102,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13304247,"byte_end":13304250,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13304255,"byte_end":13304348,"line_start":104,"line_end":104,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13304353,"byte_end":13304441,"line_start":105,"line_end":105,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13304446,"byte_end":13304536,"line_start":106,"line_end":106,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13304541,"byte_end":13304581,"line_start":107,"line_end":107,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13304586,"byte_end":13304589,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13304594,"byte_end":13304684,"line_start":109,"line_end":109,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13304689,"byte_end":13304780,"line_start":110,"line_end":110,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13304785,"byte_end":13304872,"line_start":111,"line_end":111,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13304877,"byte_end":13304897,"line_start":112,"line_end":112,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13304902,"byte_end":13304905,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13304910,"byte_end":13304997,"line_start":114,"line_end":114,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305002,"byte_end":13305027,"line_start":115,"line_end":115,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305032,"byte_end":13305035,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305040,"byte_end":13305052,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305057,"byte_end":13305060,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305065,"byte_end":13305157,"line_start":119,"line_end":119,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305162,"byte_end":13305249,"line_start":120,"line_end":120,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305254,"byte_end":13305266,"line_start":121,"line_end":121,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305271,"byte_end":13305274,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305279,"byte_end":13305286,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305291,"byte_end":13305324,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305329,"byte_end":13305332,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305337,"byte_end":13305367,"line_start":126,"line_end":126,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305372,"byte_end":13305399,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305404,"byte_end":13305416,"line_start":128,"line_end":128,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305421,"byte_end":13305496,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305501,"byte_end":13305540,"line_start":130,"line_end":130,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305545,"byte_end":13305581,"line_start":131,"line_end":131,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305586,"byte_end":13305597,"line_start":132,"line_end":132,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305602,"byte_end":13305607,"line_start":133,"line_end":133,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305612,"byte_end":13305619,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305624,"byte_end":13305627,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305632,"byte_end":13305726,"line_start":136,"line_end":136,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305731,"byte_end":13305762,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305767,"byte_end":13305770,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305775,"byte_end":13305870,"line_start":139,"line_end":139,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305875,"byte_end":13305967,"line_start":140,"line_end":140,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13305972,"byte_end":13306061,"line_start":141,"line_end":141,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306066,"byte_end":13306069,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306074,"byte_end":13306087,"line_start":143,"line_end":143,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306092,"byte_end":13306145,"line_start":144,"line_end":144,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306150,"byte_end":13306232,"line_start":145,"line_end":145,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306237,"byte_end":13306244,"line_start":146,"line_end":146,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306249,"byte_end":13306252,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306257,"byte_end":13306350,"line_start":148,"line_end":148,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306355,"byte_end":13306450,"line_start":149,"line_end":149,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306455,"byte_end":13306515,"line_start":150,"line_end":150,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306520,"byte_end":13306523,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306528,"byte_end":13306542,"line_start":152,"line_end":152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306547,"byte_end":13306550,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306555,"byte_end":13306641,"line_start":154,"line_end":154,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306646,"byte_end":13306740,"line_start":155,"line_end":155,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306745,"byte_end":13306841,"line_start":156,"line_end":156,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306846,"byte_end":13306938,"line_start":157,"line_end":157,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13306943,"byte_end":13306999,"line_start":158,"line_end":158,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307004,"byte_end":13307007,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307012,"byte_end":13307019,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307024,"byte_end":13307080,"line_start":161,"line_end":161,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307085,"byte_end":13307129,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307134,"byte_end":13307137,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307142,"byte_end":13307173,"line_start":164,"line_end":164,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307178,"byte_end":13307181,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307186,"byte_end":13307263,"line_start":166,"line_end":166,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307268,"byte_end":13307299,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307304,"byte_end":13307307,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307312,"byte_end":13307342,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307347,"byte_end":13307377,"line_start":170,"line_end":170,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307382,"byte_end":13307385,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307390,"byte_end":13307467,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307472,"byte_end":13307544,"line_start":173,"line_end":173,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307549,"byte_end":13307552,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307557,"byte_end":13307578,"line_start":175,"line_end":175,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307583,"byte_end":13307643,"line_start":176,"line_end":176,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307648,"byte_end":13307730,"line_start":177,"line_end":177,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307735,"byte_end":13307751,"line_start":178,"line_end":178,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307756,"byte_end":13307835,"line_start":179,"line_end":179,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307840,"byte_end":13307883,"line_start":180,"line_end":180,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307888,"byte_end":13307956,"line_start":181,"line_end":181,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13307961,"byte_end":13308053,"line_start":182,"line_end":182,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13308058,"byte_end":13308142,"line_start":183,"line_end":183,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13308147,"byte_end":13308184,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13308189,"byte_end":13308204,"line_start":185,"line_end":185,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13308209,"byte_end":13308218,"line_start":186,"line_end":186,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13308223,"byte_end":13308228,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13308233,"byte_end":13308285,"line_start":188,"line_end":188,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13308290,"byte_end":13308297,"line_start":189,"line_end":189,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311975,"byte_end":13311988,"line_start":270,"line_end":270,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13308570,"byte_end":13308663,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13308668,"byte_end":13308720,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13308725,"byte_end":13308728,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13308733,"byte_end":13308826,"line_start":204,"line_end":204,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13308831,"byte_end":13308921,"line_start":205,"line_end":205,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13308926,"byte_end":13309015,"line_start":206,"line_end":206,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309020,"byte_end":13309074,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309079,"byte_end":13309082,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309087,"byte_end":13309180,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309185,"byte_end":13309278,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309283,"byte_end":13309376,"line_start":211,"line_end":211,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309381,"byte_end":13309412,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309417,"byte_end":13309420,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309425,"byte_end":13309514,"line_start":214,"line_end":214,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309519,"byte_end":13309544,"line_start":215,"line_end":215,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309549,"byte_end":13309552,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309557,"byte_end":13309569,"line_start":217,"line_end":217,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309574,"byte_end":13309577,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309582,"byte_end":13309675,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309680,"byte_end":13309713,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309718,"byte_end":13309721,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309726,"byte_end":13309821,"line_start":222,"line_end":222,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309826,"byte_end":13309864,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309869,"byte_end":13309872,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309877,"byte_end":13309972,"line_start":225,"line_end":225,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13309977,"byte_end":13310069,"line_start":226,"line_end":226,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310074,"byte_end":13310163,"line_start":227,"line_end":227,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310168,"byte_end":13310171,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310176,"byte_end":13310189,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310194,"byte_end":13310247,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310252,"byte_end":13310311,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310316,"byte_end":13310323,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310328,"byte_end":13310331,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310336,"byte_end":13310430,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310435,"byte_end":13310522,"line_start":235,"line_end":235,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310527,"byte_end":13310587,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310592,"byte_end":13310595,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310600,"byte_end":13310614,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310619,"byte_end":13310622,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310627,"byte_end":13310713,"line_start":240,"line_end":240,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310718,"byte_end":13310812,"line_start":241,"line_end":241,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310817,"byte_end":13310913,"line_start":242,"line_end":242,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13310918,"byte_end":13311010,"line_start":243,"line_end":243,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311015,"byte_end":13311071,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311076,"byte_end":13311079,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311084,"byte_end":13311091,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311096,"byte_end":13311152,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311157,"byte_end":13311201,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311206,"byte_end":13311209,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311214,"byte_end":13311245,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311250,"byte_end":13311253,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311258,"byte_end":13311335,"line_start":252,"line_end":252,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311340,"byte_end":13311371,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311376,"byte_end":13311379,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311384,"byte_end":13311414,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311419,"byte_end":13311449,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311454,"byte_end":13311457,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311462,"byte_end":13311539,"line_start":258,"line_end":258,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311544,"byte_end":13311616,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311621,"byte_end":13311624,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311629,"byte_end":13311650,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311655,"byte_end":13311715,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311720,"byte_end":13311802,"line_start":263,"line_end":263,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311807,"byte_end":13311823,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311828,"byte_end":13311863,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311868,"byte_end":13311877,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311882,"byte_end":13311887,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311892,"byte_end":13311944,"line_start":268,"line_end":268,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13311949,"byte_end":13311956,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312873,"byte_end":13312878,"line_start":294,"line_end":294,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312088,"byte_end":13312183,"line_start":274,"line_end":274,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312188,"byte_end":13312205,"line_start":275,"line_end":275,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312210,"byte_end":13312213,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312218,"byte_end":13312312,"line_start":277,"line_end":277,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312317,"byte_end":13312409,"line_start":278,"line_end":278,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312414,"byte_end":13312482,"line_start":279,"line_end":279,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312487,"byte_end":13312490,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312495,"byte_end":13312587,"line_start":281,"line_end":281,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312592,"byte_end":13312595,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312600,"byte_end":13312614,"line_start":283,"line_end":283,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312619,"byte_end":13312622,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312627,"byte_end":13312634,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312639,"byte_end":13312672,"line_start":286,"line_end":286,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312677,"byte_end":13312680,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312685,"byte_end":13312715,"line_start":288,"line_end":288,"column_start":5,"column_end":35}},{"value":"/ guard.defer(move || {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312720,"byte_end":13312745,"line_start":289,"line_end":289,"column_start":5,"column_end":30}},{"value":"/     println!(\"This better be printed as soon as possible!\");","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312750,"byte_end":13312814,"line_start":290,"line_end":290,"column_start":5,"column_end":69}},{"value":"/ });","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312819,"byte_end":13312826,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ guard.flush();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312831,"byte_end":13312849,"line_start":292,"line_end":292,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13312854,"byte_end":13312861,"line_start":293,"line_end":293,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314097,"byte_end":13314102,"line_start":328,"line_end":328,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313002,"byte_end":13313053,"line_start":300,"line_end":300,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313058,"byte_end":13313061,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313066,"byte_end":13313156,"line_start":302,"line_end":302,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313161,"byte_end":13313255,"line_start":303,"line_end":303,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313260,"byte_end":13313354,"line_start":304,"line_end":304,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313359,"byte_end":13313411,"line_start":305,"line_end":305,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313416,"byte_end":13313419,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313424,"byte_end":13313517,"line_start":307,"line_end":307,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313522,"byte_end":13313525,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313530,"byte_end":13313544,"line_start":309,"line_end":309,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313549,"byte_end":13313552,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313557,"byte_end":13313564,"line_start":311,"line_end":311,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313569,"byte_end":13313618,"line_start":312,"line_end":312,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313623,"byte_end":13313667,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313672,"byte_end":13313675,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313680,"byte_end":13313709,"line_start":315,"line_end":315,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313714,"byte_end":13313747,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313752,"byte_end":13313757,"line_start":317,"line_end":317,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313762,"byte_end":13313801,"line_start":318,"line_end":318,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313806,"byte_end":13313860,"line_start":319,"line_end":319,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313865,"byte_end":13313870,"line_start":320,"line_end":320,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313875,"byte_end":13313893,"line_start":321,"line_end":321,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313898,"byte_end":13313903,"line_start":322,"line_end":322,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313908,"byte_end":13313947,"line_start":323,"line_end":323,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13313952,"byte_end":13314006,"line_start":324,"line_end":324,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314011,"byte_end":13314016,"line_start":325,"line_end":325,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314021,"byte_end":13314073,"line_start":326,"line_end":326,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314078,"byte_end":13314085,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13315486,"byte_end":13315497,"line_start":365,"line_end":365,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314226,"byte_end":13314317,"line_start":334,"line_end":334,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314322,"byte_end":13314325,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314330,"byte_end":13314421,"line_start":336,"line_end":336,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314426,"byte_end":13314522,"line_start":337,"line_end":337,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314527,"byte_end":13314621,"line_start":338,"line_end":338,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314626,"byte_end":13314645,"line_start":339,"line_end":339,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314650,"byte_end":13314653,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314658,"byte_end":13314752,"line_start":341,"line_end":341,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314757,"byte_end":13314799,"line_start":342,"line_end":342,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314804,"byte_end":13314807,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314812,"byte_end":13314826,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314831,"byte_end":13314834,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314839,"byte_end":13314846,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314851,"byte_end":13314900,"line_start":347,"line_end":347,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314905,"byte_end":13314949,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314954,"byte_end":13314974,"line_start":349,"line_end":349,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13314979,"byte_end":13315007,"line_start":350,"line_end":350,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13315012,"byte_end":13315015,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13315020,"byte_end":13315049,"line_start":352,"line_end":352,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13315054,"byte_end":13315087,"line_start":353,"line_end":353,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13315092,"byte_end":13315097,"line_start":354,"line_end":354,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13315102,"byte_end":13315141,"line_start":355,"line_end":355,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13315146,"byte_end":13315200,"line_start":356,"line_end":356,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13315205,"byte_end":13315210,"line_start":357,"line_end":357,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13315215,"byte_end":13315282,"line_start":358,"line_end":358,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13315287,"byte_end":13315292,"line_start":359,"line_end":359,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13315297,"byte_end":13315336,"line_start":360,"line_end":360,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13315341,"byte_end":13315395,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13315400,"byte_end":13315405,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13315410,"byte_end":13315462,"line_start":363,"line_end":363,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13315467,"byte_end":13315474,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316643,"byte_end":13316652,"line_start":403,"line_end":403,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316102,"byte_end":13316157,"line_start":387,"line_end":387,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316162,"byte_end":13316165,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316170,"byte_end":13316245,"line_start":389,"line_end":389,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316250,"byte_end":13316300,"line_start":390,"line_end":390,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316305,"byte_end":13316308,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316313,"byte_end":13316397,"line_start":392,"line_end":392,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316402,"byte_end":13316405,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316410,"byte_end":13316424,"line_start":394,"line_end":394,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316429,"byte_end":13316432,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316437,"byte_end":13316444,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316449,"byte_end":13316482,"line_start":397,"line_end":397,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316487,"byte_end":13316490,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316495,"byte_end":13316525,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316530,"byte_end":13316560,"line_start":400,"line_end":400,"column_start":5,"column_end":35}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316565,"byte_end":13316619,"line_start":401,"line_end":401,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316624,"byte_end":13316631,"line_start":402,"line_end":402,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":503},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13320004,"byte_end":13320015,"line_start":510,"line_end":510,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317062,"byte_end":13317149,"line_start":423,"line_end":423,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317150,"byte_end":13317153,"line_start":424,"line_end":424,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317154,"byte_end":13317249,"line_start":425,"line_end":425,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317250,"byte_end":13317339,"line_start":426,"line_end":426,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317340,"byte_end":13317343,"line_start":427,"line_end":427,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317344,"byte_end":13317437,"line_start":428,"line_end":428,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317438,"byte_end":13317475,"line_start":429,"line_end":429,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317476,"byte_end":13317479,"line_start":430,"line_end":430,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317480,"byte_end":13317576,"line_start":431,"line_end":431,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317577,"byte_end":13317580,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317581,"byte_end":13317593,"line_start":433,"line_end":433,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317594,"byte_end":13317597,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317598,"byte_end":13317688,"line_start":435,"line_end":435,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317689,"byte_end":13317756,"line_start":436,"line_end":436,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317757,"byte_end":13317760,"line_start":437,"line_end":437,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317761,"byte_end":13317775,"line_start":438,"line_end":438,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317776,"byte_end":13317779,"line_start":439,"line_end":439,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317780,"byte_end":13317787,"line_start":440,"line_end":440,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317788,"byte_end":13317837,"line_start":441,"line_end":441,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317838,"byte_end":13317883,"line_start":442,"line_end":442,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317884,"byte_end":13317887,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317888,"byte_end":13317915,"line_start":444,"line_end":444,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317916,"byte_end":13317919,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317920,"byte_end":13317932,"line_start":446,"line_end":446,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317933,"byte_end":13317988,"line_start":447,"line_end":447,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13317989,"byte_end":13318035,"line_start":448,"line_end":448,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318036,"byte_end":13318039,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318040,"byte_end":13318114,"line_start":450,"line_end":450,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318115,"byte_end":13318165,"line_start":451,"line_end":451,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318166,"byte_end":13318169,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318170,"byte_end":13318199,"line_start":453,"line_end":453,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318200,"byte_end":13318256,"line_start":454,"line_end":454,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318257,"byte_end":13318268,"line_start":455,"line_end":455,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318269,"byte_end":13318272,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318273,"byte_end":13318354,"line_start":457,"line_end":457,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318355,"byte_end":13318360,"line_start":458,"line_end":458,"column_start":1,"column_end":6}},{"value":"/ # unsafe { drop(a.into_owned()); } // avoid leak","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318361,"byte_end":13318413,"line_start":459,"line_end":459,"column_start":1,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318414,"byte_end":13318421,"line_start":460,"line_end":460,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318422,"byte_end":13318425,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318426,"byte_end":13318520,"line_start":462,"line_end":462,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318521,"byte_end":13318524,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318525,"byte_end":13318619,"line_start":464,"line_end":464,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318620,"byte_end":13318705,"line_start":465,"line_end":465,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318706,"byte_end":13318709,"line_start":466,"line_end":466,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318710,"byte_end":13318809,"line_start":467,"line_end":467,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318810,"byte_end":13318908,"line_start":468,"line_end":468,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318909,"byte_end":13318929,"line_start":469,"line_end":469,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318930,"byte_end":13318933,"line_start":470,"line_end":470,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318934,"byte_end":13318941,"line_start":471,"line_end":471,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318942,"byte_end":13318991,"line_start":472,"line_end":472,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13318992,"byte_end":13319023,"line_start":473,"line_end":473,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319024,"byte_end":13319069,"line_start":474,"line_end":474,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319070,"byte_end":13319073,"line_start":475,"line_end":475,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319074,"byte_end":13319095,"line_start":476,"line_end":476,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319096,"byte_end":13319126,"line_start":477,"line_end":477,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319127,"byte_end":13319132,"line_start":478,"line_end":478,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319133,"byte_end":13319136,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319137,"byte_end":13319157,"line_start":480,"line_end":480,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319158,"byte_end":13319188,"line_start":481,"line_end":481,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319189,"byte_end":13319219,"line_start":482,"line_end":482,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319220,"byte_end":13319225,"line_start":483,"line_end":483,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319226,"byte_end":13319229,"line_start":484,"line_end":484,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319230,"byte_end":13319261,"line_start":485,"line_end":485,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319262,"byte_end":13319290,"line_start":486,"line_end":486,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319291,"byte_end":13319311,"line_start":487,"line_end":487,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319312,"byte_end":13319348,"line_start":488,"line_end":488,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319349,"byte_end":13319426,"line_start":489,"line_end":489,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319427,"byte_end":13319430,"line_start":490,"line_end":490,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319431,"byte_end":13319482,"line_start":491,"line_end":491,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319483,"byte_end":13319523,"line_start":492,"line_end":492,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319524,"byte_end":13319598,"line_start":493,"line_end":493,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319599,"byte_end":13319602,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319603,"byte_end":13319691,"line_start":495,"line_end":495,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319692,"byte_end":13319742,"line_start":496,"line_end":496,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319743,"byte_end":13319795,"line_start":497,"line_end":497,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319796,"byte_end":13319824,"line_start":498,"line_end":498,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319825,"byte_end":13319828,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319829,"byte_end":13319861,"line_start":500,"line_end":500,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319862,"byte_end":13319879,"line_start":501,"line_end":501,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319880,"byte_end":13319893,"line_start":502,"line_end":502,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319894,"byte_end":13319903,"line_start":503,"line_end":503,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319904,"byte_end":13319909,"line_start":504,"line_end":504,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319910,"byte_end":13319917,"line_start":505,"line_end":505,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319918,"byte_end":13319921,"line_start":506,"line_end":506,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: super::Atomic","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319922,"byte_end":13319951,"line_start":507,"line_end":507,"column_start":1,"column_end":30}},{"value":"/ [`defer`]: Guard::defer","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319952,"byte_end":13319979,"line_start":508,"line_end":508,"column_start":1,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13319980,"byte_end":13319989,"line_start":509,"line_end":509,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":893},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":13373427,"byte_end":13373430,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":13373381,"byte_end":13373409,"line_start":29,"line_end":29,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":13373410,"byte_end":13373419,"line_start":30,"line_end":30,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":895},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":13373555,"byte_end":13373564,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":13373486,"byte_end":13373537,"line_start":35,"line_end":35,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":13373538,"byte_end":13373547,"line_start":36,"line_end":36,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":897},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":13373674,"byte_end":13373691,"line_start":42,"line_end":42,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/default.rs","byte_start":13373625,"byte_end":13373666,"line_start":41,"line_end":41,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13226023,"byte_end":13226043,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13227470,"byte_end":13227478,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13231252,"byte_end":13231253,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234474,"byte_end":13234480,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234545,"byte_end":13234551,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234567,"byte_end":13234573,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":171}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234963,"byte_end":13234969,"line_start":315,"line_end":315,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":191},{"krate":0,"index":196},{"krate":0,"index":199},{"krate":0,"index":203},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13258616,"byte_end":13258622,"line_start":942,"line_end":942,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13258969,"byte_end":13258975,"line_start":954,"line_end":954,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13259263,"byte_end":13259269,"line_start":962,"line_end":962,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13259616,"byte_end":13259622,"line_start":973,"line_end":973,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13259734,"byte_end":13259740,"line_start":979,"line_end":979,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13260192,"byte_end":13260198,"line_start":997,"line_end":997,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13260301,"byte_end":13260307,"line_start":1003,"line_end":1003,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13260427,"byte_end":13260433,"line_start":1009,"line_end":1009,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13260782,"byte_end":13260788,"line_start":1024,"line_end":1024,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262001,"byte_end":13262006,"line_start":1065,"line_end":1065,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262513,"byte_end":13262518,"line_start":1088,"line_end":1088,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264168,"byte_end":13264173,"line_start":1148,"line_end":1148,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265900,"byte_end":13265905,"line_start":1212,"line_end":1212,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13266095,"byte_end":13266100,"line_start":1221,"line_end":1221,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13266378,"byte_end":13266383,"line_start":1232,"line_end":1232,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13266524,"byte_end":13266529,"line_start":1238,"line_end":1238,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13266722,"byte_end":13266727,"line_start":1247,"line_end":1247,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13266893,"byte_end":13266898,"line_start":1254,"line_end":1254,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13266988,"byte_end":13266993,"line_start":1260,"line_end":1260,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13267466,"byte_end":13267471,"line_start":1279,"line_end":1279,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13267581,"byte_end":13267586,"line_start":1285,"line_end":1285,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13267708,"byte_end":13267713,"line_start":1291,"line_end":1291,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13267819,"byte_end":13267824,"line_start":1297,"line_end":1297,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268325,"byte_end":13268331,"line_start":1314,"line_end":1314,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268505,"byte_end":13268511,"line_start":1323,"line_end":1323,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268566,"byte_end":13268572,"line_start":1325,"line_end":1325,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268818,"byte_end":13268824,"line_start":1340,"line_end":1340,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269512,"byte_end":13269518,"line_start":1364,"line_end":1364,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277663,"byte_end":13277669,"line_start":1624,"line_end":1624,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13278289,"byte_end":13278295,"line_start":1647,"line_end":1647,"column_start":62,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13278422,"byte_end":13278428,"line_start":1653,"line_end":1653,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13278502,"byte_end":13278508,"line_start":1655,"line_end":1655,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13278673,"byte_end":13278679,"line_start":1661,"line_end":1661,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13278827,"byte_end":13278833,"line_start":1667,"line_end":1667,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13279136,"byte_end":13279142,"line_start":1678,"line_end":1678,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13279333,"byte_end":13279339,"line_start":1684,"line_end":1684,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13280575,"byte_end":13280584,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13280609,"byte_end":13280618,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13280640,"byte_end":13280649,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13280763,"byte_end":13280772,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281014,"byte_end":13281023,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281221,"byte_end":13281230,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281358,"byte_end":13281367,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281541,"byte_end":13281550,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281661,"byte_end":13281672,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13282132,"byte_end":13282143,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13282290,"byte_end":13282301,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/deferred.rs","byte_start":13293048,"byte_end":13293056,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/deferred.rs","byte_start":13293180,"byte_end":13293188,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/epoch.rs","byte_start":13297273,"byte_end":13297278,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/epoch.rs","byte_start":13299082,"byte_end":13299093,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303026,"byte_end":13303031,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316777,"byte_end":13316782,"line_start":408,"line_end":408,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316952,"byte_end":13316957,"line_start":417,"line_end":417,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":502}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13320294,"byte_end":13320306,"line_start":515,"line_end":515,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13323462,"byte_end":13323465,"line_start":72,"line_end":72,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13323475,"byte_end":13323478,"line_start":74,"line_end":74,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13324427,"byte_end":13324430,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13324582,"byte_end":13324585,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13324974,"byte_end":13324977,"line_start":130,"line_end":130,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13325384,"byte_end":13325393,"line_start":146,"line_end":146,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13325403,"byte_end":13325412,"line_start":148,"line_end":148,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13326094,"byte_end":13326100,"line_start":169,"line_end":169,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13331323,"byte_end":13331328,"line_start":311,"line_end":311,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":641},{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13340115,"byte_end":13340120,"line_start":538,"line_end":538,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":652},{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":13346185,"byte_end":13346190,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":698}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":13346326,"byte_end":13346331,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":700}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":13346844,"byte_end":13346848,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":13349431,"byte_end":13349435,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":13349967,"byte_end":13349971,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":13359792,"byte_end":13359797,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":13359834,"byte_end":13359839,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":13359855,"byte_end":13359860,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":772},{"krate":0,"index":773}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":13365780,"byte_end":13365785,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":777}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/lib.rs","byte_start":4694,"byte_end":4704,"line_start":108,"line_end":108,"column_start":17,"column_end":27},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13226023,"byte_end":13226043,"line_start":42,"line_end":42,"column_start":52,"column_end":72},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":100},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13227470,"byte_end":13227478,"line_start":79,"line_end":79,"column_start":32,"column_end":40},"kind":{"Impl":{"id":2}},"from":{"krate":2,"index":46172},"to":{"krate":0,"index":110}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13231252,"byte_end":13231253,"line_start":194,"line_end":194,"column_start":23,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":137},"to":{"krate":0,"index":127}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234474,"byte_end":13234480,"line_start":296,"line_end":296,"column_start":59,"column_end":65},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234545,"byte_end":13234551,"line_start":297,"line_end":297,"column_start":59,"column_end":65},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234567,"byte_end":13234573,"line_start":299,"line_end":299,"column_start":9,"column_end":15},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13234963,"byte_end":13234969,"line_start":315,"line_end":315,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":161},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13258616,"byte_end":13258622,"line_start":942,"line_end":942,"column_start":44,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13258969,"byte_end":13258975,"line_start":954,"line_end":954,"column_start":46,"column_end":52},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":9614}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13259263,"byte_end":13259269,"line_start":962,"line_end":962,"column_start":39,"column_end":45},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13259616,"byte_end":13259622,"line_start":973,"line_end":973,"column_start":41,"column_end":47},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13259734,"byte_end":13259740,"line_start":979,"line_end":979,"column_start":48,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13260192,"byte_end":13260198,"line_start":997,"line_end":997,"column_start":26,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13260301,"byte_end":13260307,"line_start":1003,"line_end":1003,"column_start":21,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13260427,"byte_end":13260433,"line_start":1009,"line_end":1009,"column_start":57,"column_end":63},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13260782,"byte_end":13260788,"line_start":1024,"line_end":1024,"column_start":28,"column_end":34},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":161},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262001,"byte_end":13262006,"line_start":1065,"line_end":1065,"column_start":44,"column_end":49},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":247},"to":{"krate":0,"index":243}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13262513,"byte_end":13262518,"line_start":1088,"line_end":1088,"column_start":9,"column_end":14},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13264168,"byte_end":13264173,"line_start":1148,"line_end":1148,"column_start":29,"column_end":34},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13265900,"byte_end":13265905,"line_start":1212,"line_end":1212,"column_start":38,"column_end":43},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13266095,"byte_end":13266100,"line_start":1221,"line_end":1221,"column_start":44,"column_end":49},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13266378,"byte_end":13266383,"line_start":1232,"line_end":1232,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13266524,"byte_end":13266529,"line_start":1238,"line_end":1238,"column_start":39,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13266722,"byte_end":13266727,"line_start":1247,"line_end":1247,"column_start":42,"column_end":47},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":3255}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13266893,"byte_end":13266898,"line_start":1254,"line_end":1254,"column_start":21,"column_end":26},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13266988,"byte_end":13266993,"line_start":1260,"line_end":1260,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13267466,"byte_end":13267471,"line_start":1279,"line_end":1279,"column_start":43,"column_end":48},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2623}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13267581,"byte_end":13267586,"line_start":1285,"line_end":1285,"column_start":46,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2626}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13267708,"byte_end":13267713,"line_start":1291,"line_end":1291,"column_start":42,"column_end":47},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13267819,"byte_end":13267824,"line_start":1297,"line_end":1297,"column_start":42,"column_end":47},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":247},"to":{"krate":2,"index":2924}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268325,"byte_end":13268331,"line_start":1314,"line_end":1314,"column_start":39,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268505,"byte_end":13268511,"line_start":1323,"line_end":1323,"column_start":38,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3034}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268566,"byte_end":13268572,"line_start":1325,"line_end":1325,"column_start":44,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":301},"to":{"krate":0,"index":243}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13268818,"byte_end":13268824,"line_start":1340,"line_end":1340,"column_start":13,"column_end":19},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13269512,"byte_end":13269518,"line_start":1364,"line_end":1364,"column_start":33,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13277663,"byte_end":13277669,"line_start":1624,"line_end":1624,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13278289,"byte_end":13278295,"line_start":1647,"line_end":1647,"column_start":62,"column_end":68},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13278422,"byte_end":13278428,"line_start":1653,"line_end":1653,"column_start":36,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13278502,"byte_end":13278508,"line_start":1655,"line_end":1655,"column_start":63,"column_end":69},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2722}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13278673,"byte_end":13278679,"line_start":1661,"line_end":1661,"column_start":37,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2711}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13278827,"byte_end":13278833,"line_start":1667,"line_end":1667,"column_start":44,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13279136,"byte_end":13279142,"line_start":1678,"line_end":1678,"column_start":46,"column_end":52},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":9614}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/atomic.rs","byte_start":13279333,"byte_end":13279339,"line_start":1684,"line_end":1684,"column_start":41,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13280575,"byte_end":13280584,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13280609,"byte_end":13280618,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13280640,"byte_end":13280649,"line_start":29,"line_end":29,"column_start":18,"column_end":27},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13280763,"byte_end":13280772,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":373},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281014,"byte_end":13281023,"line_start":49,"line_end":49,"column_start":16,"column_end":25},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281221,"byte_end":13281230,"line_start":58,"line_end":58,"column_start":21,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281358,"byte_end":13281367,"line_start":64,"line_end":64,"column_start":20,"column_end":29},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2675}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281541,"byte_end":13281550,"line_start":70,"line_end":70,"column_start":13,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":373},"to":{"krate":2,"index":2680}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13281661,"byte_end":13281672,"line_start":77,"line_end":77,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13282132,"byte_end":13282143,"line_start":97,"line_end":97,"column_start":15,"column_end":26},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":389},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/collector.rs","byte_start":13282290,"byte_end":13282301,"line_start":106,"line_end":106,"column_start":21,"column_end":32},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":389},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/deferred.rs","byte_start":13293048,"byte_end":13293056,"line_start":25,"line_end":25,"column_start":21,"column_end":29},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":422},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/deferred.rs","byte_start":13293180,"byte_end":13293188,"line_start":31,"line_end":31,"column_start":6,"column_end":14},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/epoch.rs","byte_start":13297273,"byte_end":13297278,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/epoch.rs","byte_start":13299082,"byte_end":13299093,"line_start":82,"line_end":82,"column_start":6,"column_end":17},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":834},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13303026,"byte_end":13303031,"line_start":75,"line_end":75,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316777,"byte_end":13316782,"line_start":408,"line_end":408,"column_start":15,"column_end":20},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13316952,"byte_end":13316957,"line_start":417,"line_end":417,"column_start":21,"column_end":26},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":479},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/guard.rs","byte_start":13320294,"byte_end":13320306,"line_start":515,"line_end":515,"column_start":26,"column_end":38},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":504},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13323462,"byte_end":13323465,"line_start":72,"line_end":72,"column_start":22,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13323475,"byte_end":13323478,"line_start":74,"line_end":74,"column_start":6,"column_end":9},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13324427,"byte_end":13324430,"line_start":109,"line_end":109,"column_start":18,"column_end":21},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13324582,"byte_end":13324585,"line_start":118,"line_end":118,"column_start":15,"column_end":18},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13324974,"byte_end":13324977,"line_start":130,"line_end":130,"column_start":21,"column_end":24},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":593},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13325384,"byte_end":13325393,"line_start":146,"line_end":146,"column_start":22,"column_end":31},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":840},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13325403,"byte_end":13325412,"line_start":148,"line_end":148,"column_start":6,"column_end":15},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":840},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13326094,"byte_end":13326100,"line_start":169,"line_end":169,"column_start":6,"column_end":12},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13331323,"byte_end":13331328,"line_start":311,"line_end":311,"column_start":6,"column_end":11},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/internal.rs","byte_start":13340115,"byte_end":13340120,"line_start":538,"line_end":538,"column_start":27,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":624},"to":{"krate":0,"index":683}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":13346185,"byte_end":13346190,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":847},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":13346326,"byte_end":13346331,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":13346844,"byte_end":13346848,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":851},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":13349431,"byte_end":13349435,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":851},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/list.rs","byte_start":13349967,"byte_end":13349971,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":688},"to":{"krate":2,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":13359792,"byte_end":13359797,"line_start":40,"line_end":40,"column_start":31,"column_end":36},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":13359834,"byte_end":13359839,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":13359855,"byte_end":13359860,"line_start":43,"line_end":43,"column_start":9,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/crossbeam-epoch-0.9.10/src/sync/queue.rs","byte_start":13365780,"byte_end":13365785,"line_start":204,"line_end":204,"column_start":18,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":868},"to":{"krate":2,"index":3266}}]}