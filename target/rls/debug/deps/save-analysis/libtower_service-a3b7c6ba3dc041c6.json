{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2","program":"/Users/maximvezenov/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","tower_service","--edition=2018","/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=a3b7c6ba3dc041c6","-C","extra-filename=-a3b7c6ba3dc041c6","--out-dir","/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps","-L","dependency=/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/maximvezenov/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps/libtower_service-a3b7c6ba3dc041c6.rmeta"},"prelude":{"crate_id":{"name":"tower_service","disambiguator":[3943605207060663377,0]},"crate_root":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src","external_crates":[{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8736441298905945133,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14793976659495462539,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3402831840469434398,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10266006331935790141,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3256146445313423250,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17904618012795691138,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9322387616446168443,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3101585505833515335,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9998121223216013160,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13604153592636442655,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[4682215639508348019,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[681692869457277629,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[14282542057858629160,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14550073586256240635,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6281633846692226065,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17361906875064838028,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[16875744454975590306,0]}}],"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":0,"byte_end":13442,"line_start":1,"line_end":389,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":0,"byte_end":13442,"line_start":1,"line_end":389,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":20},{"krate":0,"index":29}],"decl_id":null,"docs":" Definition of the core `Service` trait to Tower","sig":null,"attributes":[{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":0,"byte_end":106,"line_start":1,"line_end":6,"column_start":1,"column_end":3}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":107,"byte_end":130,"line_start":7,"line_end":7,"column_start":1,"column_end":24}},{"value":"/ Definition of the core `Service` trait to Tower","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":186,"byte_end":237,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":238,"byte_end":241,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The [`Service`] trait provides the necessary abstractions for defining","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":242,"byte_end":316,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ request / response clients and servers. It is simple but powerful and is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":317,"byte_end":393,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ used as the foundation for the rest of Tower.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":394,"byte_end":443,"line_start":14,"line_end":14,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":13},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10548,"byte_end":10555,"line_start":311,"line_end":311,"column_start":11,"column_end":18},"name":"Service","qualname":"::Service","value":"Service<Request>","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19}],"decl_id":null,"docs":" An asynchronous function from a `Request` to a `Response`.","sig":null,"attributes":[{"value":"/ An asynchronous function from a `Request` to a `Response`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":503,"byte_end":565,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":566,"byte_end":569,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The `Service` trait is a simplified interface making it easy to write","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":570,"byte_end":643,"line_start":21,"line_end":21,"column_start":1,"column_end":74}},{"value":"/ network applications in a modular and reusable way, decoupled from the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":644,"byte_end":718,"line_start":22,"line_end":22,"column_start":1,"column_end":75}},{"value":"/ underlying protocol. It is one of Tower's fundamental abstractions.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":719,"byte_end":790,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":791,"byte_end":794,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Functional","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":795,"byte_end":811,"line_start":25,"line_end":25,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":812,"byte_end":815,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ A `Service` is a function of a `Request`. It immediately returns a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":816,"byte_end":886,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ `Future` representing the eventual completion of processing the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":887,"byte_end":954,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/ request. The actual request processing may happen at any time in the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":955,"byte_end":1027,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ future, on any thread or executor. The processing may depend on calling","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1028,"byte_end":1103,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ other services. At some point in the future, the processing will complete,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1104,"byte_end":1182,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ and the `Future` will resolve to a response or error.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1183,"byte_end":1240,"line_start":32,"line_end":32,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1241,"byte_end":1244,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ At a high level, the `Service::call` function represents an RPC request. The","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1245,"byte_end":1325,"line_start":34,"line_end":34,"column_start":1,"column_end":81}},{"value":"/ `Service` value can be a server or a client.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1326,"byte_end":1374,"line_start":35,"line_end":35,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1375,"byte_end":1378,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Server","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1379,"byte_end":1391,"line_start":37,"line_end":37,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1392,"byte_end":1395,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ An RPC server *implements* the `Service` trait. Requests received by the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1396,"byte_end":1472,"line_start":39,"line_end":39,"column_start":1,"column_end":77}},{"value":"/ server over the network are deserialized and then passed as an argument to the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1473,"byte_end":1555,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/ server value. The returned response is sent back over the network.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1556,"byte_end":1626,"line_start":41,"line_end":41,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1627,"byte_end":1630,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ As an example, here is how an HTTP request is processed by a server:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1631,"byte_end":1703,"line_start":43,"line_end":43,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1704,"byte_end":1707,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1708,"byte_end":1719,"line_start":45,"line_end":45,"column_start":1,"column_end":12}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1720,"byte_end":1744,"line_start":46,"line_end":46,"column_start":1,"column_end":25}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1745,"byte_end":1782,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/ # use std::future::Future;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1783,"byte_end":1813,"line_start":48,"line_end":48,"column_start":1,"column_end":31}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1814,"byte_end":1847,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/ use http::{Request, Response, StatusCode};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1848,"byte_end":1894,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1895,"byte_end":1898,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ struct HelloWorld;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1899,"byte_end":1921,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1922,"byte_end":1925,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ impl Service<Request<Vec<u8>>> for HelloWorld {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1926,"byte_end":1977,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/     type Response = Response<Vec<u8>>;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":1978,"byte_end":2020,"line_start":55,"line_end":55,"column_start":1,"column_end":43}},{"value":"/     type Error = http::Error;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2021,"byte_end":2054,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/     type Future = Pin<Box<dyn Future<Output = Result<Self::Response, Self::Error>>>>;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2055,"byte_end":2144,"line_start":57,"line_end":57,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2145,"byte_end":2148,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/     fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2149,"byte_end":2238,"line_start":59,"line_end":59,"column_start":1,"column_end":90}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2239,"byte_end":2270,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2271,"byte_end":2280,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2281,"byte_end":2284,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/     fn call(&mut self, req: Request<Vec<u8>>) -> Self::Future {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2285,"byte_end":2352,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/         // create the body","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2353,"byte_end":2383,"line_start":64,"line_end":64,"column_start":1,"column_end":31}},{"value":"/         let body: Vec<u8> = \"hello, world!\\n\"","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2384,"byte_end":2433,"line_start":65,"line_end":65,"column_start":1,"column_end":50}},{"value":"/             .as_bytes()","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2434,"byte_end":2461,"line_start":66,"line_end":66,"column_start":1,"column_end":28}},{"value":"/             .to_owned();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2462,"byte_end":2490,"line_start":67,"line_end":67,"column_start":1,"column_end":29}},{"value":"/         // Create the HTTP response","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2491,"byte_end":2530,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"/         let resp = Response::builder()","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2531,"byte_end":2573,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"/             .status(StatusCode::OK)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2574,"byte_end":2613,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/             .body(body)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2614,"byte_end":2641,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"/             .expect(\"Unable to create `http::Response`\");","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2642,"byte_end":2703,"line_start":72,"line_end":72,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2704,"byte_end":2707,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/         // create a response in a future.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2708,"byte_end":2753,"line_start":74,"line_end":74,"column_start":1,"column_end":46}},{"value":"/         let fut = async {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2754,"byte_end":2783,"line_start":75,"line_end":75,"column_start":1,"column_end":30}},{"value":"/             Ok(resp)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2784,"byte_end":2808,"line_start":76,"line_end":76,"column_start":1,"column_end":25}},{"value":"/         };","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2809,"byte_end":2823,"line_start":77,"line_end":77,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2824,"byte_end":2827,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/         // Return the response as an immediate future","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2828,"byte_end":2885,"line_start":79,"line_end":79,"column_start":1,"column_end":58}},{"value":"/         Box::pin(fut)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2886,"byte_end":2911,"line_start":80,"line_end":80,"column_start":1,"column_end":26}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2912,"byte_end":2921,"line_start":81,"line_end":81,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2922,"byte_end":2927,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2928,"byte_end":2935,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2936,"byte_end":2939,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ # Client","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2940,"byte_end":2952,"line_start":85,"line_end":85,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2953,"byte_end":2956,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ A client consumes a service by using a `Service` value. The client may","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":2957,"byte_end":3031,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"/ issue requests by invoking `call` and passing the request as an argument.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3032,"byte_end":3109,"line_start":88,"line_end":88,"column_start":1,"column_end":78}},{"value":"/ It then receives the response by waiting for the returned future.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3110,"byte_end":3179,"line_start":89,"line_end":89,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3180,"byte_end":3183,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ As an example, here is how a Redis request would be issued:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3184,"byte_end":3247,"line_start":91,"line_end":91,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3248,"byte_end":3251,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ ```rust,ignore","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3252,"byte_end":3270,"line_start":93,"line_end":93,"column_start":1,"column_end":19}},{"value":"/ let client = redis::Client::new()","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3271,"byte_end":3308,"line_start":94,"line_end":94,"column_start":1,"column_end":38}},{"value":"/     .connect(\"127.0.0.1:6379\".parse().unwrap())","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3309,"byte_end":3360,"line_start":95,"line_end":95,"column_start":1,"column_end":52}},{"value":"/     .unwrap();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3361,"byte_end":3379,"line_start":96,"line_end":96,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3380,"byte_end":3383,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ let resp = client.call(Cmd::set(\"foo\", \"this is the value of foo\")).await?;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3384,"byte_end":3463,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3464,"byte_end":3467,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ // Wait for the future to resolve","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3468,"byte_end":3505,"line_start":100,"line_end":100,"column_start":1,"column_end":38}},{"value":"/ println!(\"Redis response: {:?}\", resp);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3506,"byte_end":3549,"line_start":101,"line_end":101,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3550,"byte_end":3557,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3558,"byte_end":3561,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ # Middleware / Layer","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3562,"byte_end":3586,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3587,"byte_end":3590,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ More often than not, all the pieces needed for writing robust, scalable","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3591,"byte_end":3666,"line_start":106,"line_end":106,"column_start":1,"column_end":76}},{"value":"/ network applications are the same no matter the underlying protocol. By","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3667,"byte_end":3742,"line_start":107,"line_end":107,"column_start":1,"column_end":76}},{"value":"/ unifying the API for both clients and servers in a protocol agnostic way,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3743,"byte_end":3820,"line_start":108,"line_end":108,"column_start":1,"column_end":78}},{"value":"/ it is possible to write middleware that provide these pieces in a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3821,"byte_end":3890,"line_start":109,"line_end":109,"column_start":1,"column_end":70}},{"value":"/ reusable way.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3891,"byte_end":3908,"line_start":110,"line_end":110,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3909,"byte_end":3912,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ Take timeouts as an example:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3913,"byte_end":3945,"line_start":112,"line_end":112,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3946,"byte_end":3949,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3950,"byte_end":3961,"line_start":114,"line_end":114,"column_start":1,"column_end":12}},{"value":"/ use tower_service::Service;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3962,"byte_end":3993,"line_start":115,"line_end":115,"column_start":1,"column_end":32}},{"value":"/ use tower_layer::Layer;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":3994,"byte_end":4021,"line_start":116,"line_end":116,"column_start":1,"column_end":28}},{"value":"/ use futures::FutureExt;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4022,"byte_end":4049,"line_start":117,"line_end":117,"column_start":1,"column_end":28}},{"value":"/ use std::future::Future;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4050,"byte_end":4078,"line_start":118,"line_end":118,"column_start":1,"column_end":29}},{"value":"/ use std::task::{Context, Poll};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4079,"byte_end":4114,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4115,"byte_end":4143,"line_start":120,"line_end":120,"column_start":1,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4144,"byte_end":4166,"line_start":121,"line_end":121,"column_start":1,"column_end":23}},{"value":"/ use std::fmt;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4167,"byte_end":4184,"line_start":122,"line_end":122,"column_start":1,"column_end":18}},{"value":"/ use std::error::Error;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4185,"byte_end":4211,"line_start":123,"line_end":123,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4212,"byte_end":4215,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ // Our timeout service, which wraps another service and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4216,"byte_end":4275,"line_start":125,"line_end":125,"column_start":1,"column_end":60}},{"value":"/ // adds a timeout to its response future.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4276,"byte_end":4321,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ pub struct Timeout<T> {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4322,"byte_end":4349,"line_start":127,"line_end":127,"column_start":1,"column_end":28}},{"value":"/     inner: T,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4350,"byte_end":4367,"line_start":128,"line_end":128,"column_start":1,"column_end":18}},{"value":"/     timeout: Duration,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4368,"byte_end":4394,"line_start":129,"line_end":129,"column_start":1,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4395,"byte_end":4400,"line_start":130,"line_end":130,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4401,"byte_end":4404,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ impl<T> Timeout<T> {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4405,"byte_end":4429,"line_start":132,"line_end":132,"column_start":1,"column_end":25}},{"value":"/     pub fn new(inner: T, timeout: Duration) -> Timeout<T> {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4430,"byte_end":4493,"line_start":133,"line_end":133,"column_start":1,"column_end":64}},{"value":"/         Timeout {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4494,"byte_end":4515,"line_start":134,"line_end":134,"column_start":1,"column_end":22}},{"value":"/             inner,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4516,"byte_end":4538,"line_start":135,"line_end":135,"column_start":1,"column_end":23}},{"value":"/             timeout","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4539,"byte_end":4562,"line_start":136,"line_end":136,"column_start":1,"column_end":24}},{"value":"/         }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4563,"byte_end":4576,"line_start":137,"line_end":137,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4577,"byte_end":4586,"line_start":138,"line_end":138,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4587,"byte_end":4592,"line_start":139,"line_end":139,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4593,"byte_end":4596,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ // The error returned if processing a request timed out","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4597,"byte_end":4656,"line_start":141,"line_end":141,"column_start":1,"column_end":60}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4657,"byte_end":4677,"line_start":142,"line_end":142,"column_start":1,"column_end":21}},{"value":"/ pub struct Expired;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4678,"byte_end":4701,"line_start":143,"line_end":143,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4702,"byte_end":4705,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ impl fmt::Display for Expired {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4706,"byte_end":4741,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4742,"byte_end":4808,"line_start":146,"line_end":146,"column_start":1,"column_end":67}},{"value":"/         write!(f, \"expired\")","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4809,"byte_end":4841,"line_start":147,"line_end":147,"column_start":1,"column_end":33}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4842,"byte_end":4851,"line_start":148,"line_end":148,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4852,"byte_end":4857,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4858,"byte_end":4861,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ impl Error for Expired {}","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4862,"byte_end":4891,"line_start":151,"line_end":151,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4892,"byte_end":4895,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ // We can implement `Service` for `Timeout<T>` if `T` is a `Service`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4896,"byte_end":4968,"line_start":153,"line_end":153,"column_start":1,"column_end":73}},{"value":"/ impl<T, Request> Service<Request> for Timeout<T>","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":4969,"byte_end":5021,"line_start":154,"line_end":154,"column_start":1,"column_end":53}},{"value":"/ where","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5022,"byte_end":5031,"line_start":155,"line_end":155,"column_start":1,"column_end":10}},{"value":"/     T: Service<Request>,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5032,"byte_end":5060,"line_start":156,"line_end":156,"column_start":1,"column_end":29}},{"value":"/     T::Future: 'static,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5061,"byte_end":5088,"line_start":157,"line_end":157,"column_start":1,"column_end":28}},{"value":"/     T::Error: Into<Box<dyn Error + Send + Sync>> + 'static,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5089,"byte_end":5152,"line_start":158,"line_end":158,"column_start":1,"column_end":64}},{"value":"/     T::Response: 'static,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5153,"byte_end":5182,"line_start":159,"line_end":159,"column_start":1,"column_end":30}},{"value":"/ {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5183,"byte_end":5188,"line_start":160,"line_end":160,"column_start":1,"column_end":6}},{"value":"/     // `Timeout` doesn't modify the response type, so we use `T`'s response type","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5189,"byte_end":5273,"line_start":161,"line_end":161,"column_start":1,"column_end":85}},{"value":"/     type Response = T::Response;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5274,"byte_end":5310,"line_start":162,"line_end":162,"column_start":1,"column_end":37}},{"value":"/     // Errors may be either `Expired` if the timeout expired, or the inner service's","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5311,"byte_end":5399,"line_start":163,"line_end":163,"column_start":1,"column_end":89}},{"value":"/     // `Error` type. Therefore, we return a boxed `dyn Error + Send + Sync` trait object to erase","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5400,"byte_end":5501,"line_start":164,"line_end":164,"column_start":1,"column_end":102}},{"value":"/     // the error's type.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5502,"byte_end":5530,"line_start":165,"line_end":165,"column_start":1,"column_end":29}},{"value":"/     type Error = Box<dyn Error + Send + Sync>;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5531,"byte_end":5581,"line_start":166,"line_end":166,"column_start":1,"column_end":51}},{"value":"/     type Future = Pin<Box<dyn Future<Output = Result<Self::Response, Self::Error>>>>;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5582,"byte_end":5671,"line_start":167,"line_end":167,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5672,"byte_end":5675,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/     fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5676,"byte_end":5765,"line_start":169,"line_end":169,"column_start":1,"column_end":90}},{"value":"/         // Our timeout service is ready if the inner service is ready.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5766,"byte_end":5840,"line_start":170,"line_end":170,"column_start":1,"column_end":75}},{"value":"/         // This is how backpressure can be propagated through a tree of nested services.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5841,"byte_end":5933,"line_start":171,"line_end":171,"column_start":1,"column_end":93}},{"value":"/        self.inner.poll_ready(cx).map_err(Into::into)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5934,"byte_end":5990,"line_start":172,"line_end":172,"column_start":1,"column_end":57}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":5991,"byte_end":6000,"line_start":173,"line_end":173,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6001,"byte_end":6004,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/     fn call(&mut self, req: Request) -> Self::Future {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6005,"byte_end":6063,"line_start":175,"line_end":175,"column_start":1,"column_end":59}},{"value":"/         // Create a future that completes after `self.timeout`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6064,"byte_end":6130,"line_start":176,"line_end":176,"column_start":1,"column_end":67}},{"value":"/         let timeout = tokio::time::sleep(self.timeout);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6131,"byte_end":6190,"line_start":177,"line_end":177,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6191,"byte_end":6194,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/         // Call the inner service and get a future that resolves to the response","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6195,"byte_end":6279,"line_start":179,"line_end":179,"column_start":1,"column_end":85}},{"value":"/         let fut = self.inner.call(req);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6280,"byte_end":6323,"line_start":180,"line_end":180,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6324,"byte_end":6327,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/         // Wrap those two futures in another future that completes when either one completes","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6328,"byte_end":6424,"line_start":182,"line_end":182,"column_start":1,"column_end":97}},{"value":"/         //","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6425,"byte_end":6439,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/         // If the inner service is too slow the `sleep` future will complete first","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6440,"byte_end":6526,"line_start":184,"line_end":184,"column_start":1,"column_end":87}},{"value":"/         // And an error will be returned and `fut` will be dropped and not polled again","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6527,"byte_end":6618,"line_start":185,"line_end":185,"column_start":1,"column_end":92}},{"value":"/         //","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6619,"byte_end":6633,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         // We have to box the errors so the types match","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6634,"byte_end":6693,"line_start":187,"line_end":187,"column_start":1,"column_end":60}},{"value":"/         let f = async move {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6694,"byte_end":6726,"line_start":188,"line_end":188,"column_start":1,"column_end":33}},{"value":"/             tokio::select! {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6727,"byte_end":6759,"line_start":189,"line_end":189,"column_start":1,"column_end":33}},{"value":"/                 res = fut => {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6760,"byte_end":6794,"line_start":190,"line_end":190,"column_start":1,"column_end":35}},{"value":"/                     res.map_err(|err| err.into())","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6795,"byte_end":6848,"line_start":191,"line_end":191,"column_start":1,"column_end":54}},{"value":"/                 },","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6849,"byte_end":6871,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/                 _ = timeout => {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6872,"byte_end":6908,"line_start":193,"line_end":193,"column_start":1,"column_end":37}},{"value":"/                     Err(Box::new(Expired) as Box<dyn Error + Send + Sync>)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6909,"byte_end":6987,"line_start":194,"line_end":194,"column_start":1,"column_end":79}},{"value":"/                 },","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":6988,"byte_end":7010,"line_start":195,"line_end":195,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7011,"byte_end":7028,"line_start":196,"line_end":196,"column_start":1,"column_end":18}},{"value":"/         };","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7029,"byte_end":7043,"line_start":197,"line_end":197,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7044,"byte_end":7047,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/         Box::pin(f)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7048,"byte_end":7071,"line_start":199,"line_end":199,"column_start":1,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7072,"byte_end":7081,"line_start":200,"line_end":200,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7082,"byte_end":7087,"line_start":201,"line_end":201,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7088,"byte_end":7091,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ // A layer for wrapping services in `Timeout`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7092,"byte_end":7141,"line_start":203,"line_end":203,"column_start":1,"column_end":50}},{"value":"/ pub struct TimeoutLayer(Duration);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7142,"byte_end":7180,"line_start":204,"line_end":204,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7181,"byte_end":7184,"line_start":205,"line_end":205,"column_start":1,"column_end":4}},{"value":"/ impl TimeoutLayer {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7185,"byte_end":7208,"line_start":206,"line_end":206,"column_start":1,"column_end":24}},{"value":"/     pub fn new(delay: Duration) -> Self {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7209,"byte_end":7254,"line_start":207,"line_end":207,"column_start":1,"column_end":46}},{"value":"/         TimeoutLayer(delay)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7255,"byte_end":7286,"line_start":208,"line_end":208,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7287,"byte_end":7296,"line_start":209,"line_end":209,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7297,"byte_end":7302,"line_start":210,"line_end":210,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7303,"byte_end":7306,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ impl<S> Layer<S> for TimeoutLayer {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7307,"byte_end":7346,"line_start":212,"line_end":212,"column_start":1,"column_end":40}},{"value":"/     type Service = Timeout<S>;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7347,"byte_end":7381,"line_start":213,"line_end":213,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7382,"byte_end":7385,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/     fn layer(&self, service: S) -> Timeout<S> {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7386,"byte_end":7437,"line_start":215,"line_end":215,"column_start":1,"column_end":52}},{"value":"/         Timeout::new(service, self.0)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7438,"byte_end":7479,"line_start":216,"line_end":216,"column_start":1,"column_end":42}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7480,"byte_end":7489,"line_start":217,"line_end":217,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7490,"byte_end":7495,"line_start":218,"line_end":218,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7496,"byte_end":7503,"line_start":219,"line_end":219,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7504,"byte_end":7507,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"/ The above timeout implementation is decoupled from the underlying protocol","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7508,"byte_end":7586,"line_start":221,"line_end":221,"column_start":1,"column_end":79}},{"value":"/ and is also decoupled from client or server concerns. In other words, the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7587,"byte_end":7664,"line_start":222,"line_end":222,"column_start":1,"column_end":78}},{"value":"/ same timeout middleware could be used in either a client or a server.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7665,"byte_end":7738,"line_start":223,"line_end":223,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7739,"byte_end":7742,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ # Backpressure","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7743,"byte_end":7761,"line_start":225,"line_end":225,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7762,"byte_end":7765,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ Calling a `Service` which is at capacity (i.e., it is temporarily unable to process a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7766,"byte_end":7855,"line_start":227,"line_end":227,"column_start":1,"column_end":90}},{"value":"/ request) should result in an error. The caller is responsible for ensuring","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7856,"byte_end":7934,"line_start":228,"line_end":228,"column_start":1,"column_end":79}},{"value":"/ that the service is ready to receive the request before calling it.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":7935,"byte_end":8006,"line_start":229,"line_end":229,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8007,"byte_end":8010,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ `Service` provides a mechanism by which the caller is able to coordinate","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8011,"byte_end":8087,"line_start":231,"line_end":231,"column_start":1,"column_end":77}},{"value":"/ readiness. `Service::poll_ready` returns `Ready` if the service expects that","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8088,"byte_end":8168,"line_start":232,"line_end":232,"column_start":1,"column_end":81}},{"value":"/ it is able to process a request.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8169,"byte_end":8205,"line_start":233,"line_end":233,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8206,"byte_end":8209,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ # Be careful when cloning inner services","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8210,"byte_end":8254,"line_start":235,"line_end":235,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8255,"byte_end":8258,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ Services are permitted to panic if `call` is invoked without obtaining `Poll::Ready(Ok(()))`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8259,"byte_end":8355,"line_start":237,"line_end":237,"column_start":1,"column_end":97}},{"value":"/ from `poll_ready`. You should therefore be careful when cloning services for example to move","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8356,"byte_end":8452,"line_start":238,"line_end":238,"column_start":1,"column_end":97}},{"value":"/ them into boxed futures. Even though the original service is ready, the clone might not be.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8453,"byte_end":8548,"line_start":239,"line_end":239,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8549,"byte_end":8552,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ Therefore this kind of code is wrong and might panic:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8553,"byte_end":8610,"line_start":241,"line_end":241,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8611,"byte_end":8614,"line_start":242,"line_end":242,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8615,"byte_end":8626,"line_start":243,"line_end":243,"column_start":1,"column_end":12}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8627,"byte_end":8651,"line_start":244,"line_end":244,"column_start":1,"column_end":25}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8652,"byte_end":8689,"line_start":245,"line_end":245,"column_start":1,"column_end":38}},{"value":"/ # use std::future::Future;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8690,"byte_end":8720,"line_start":246,"line_end":246,"column_start":1,"column_end":31}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8721,"byte_end":8754,"line_start":247,"line_end":247,"column_start":1,"column_end":34}},{"value":"/ #","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8755,"byte_end":8760,"line_start":248,"line_end":248,"column_start":1,"column_end":6}},{"value":"/ struct Wrapper<S> {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8761,"byte_end":8784,"line_start":249,"line_end":249,"column_start":1,"column_end":24}},{"value":"/     inner: S,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8785,"byte_end":8802,"line_start":250,"line_end":250,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8803,"byte_end":8808,"line_start":251,"line_end":251,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8809,"byte_end":8812,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ impl<R, S> Service<R> for Wrapper<S>","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8813,"byte_end":8853,"line_start":253,"line_end":253,"column_start":1,"column_end":41}},{"value":"/ where","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8854,"byte_end":8863,"line_start":254,"line_end":254,"column_start":1,"column_end":10}},{"value":"/     S: Service<R> + Clone + 'static,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8864,"byte_end":8904,"line_start":255,"line_end":255,"column_start":1,"column_end":41}},{"value":"/     R: 'static,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8905,"byte_end":8924,"line_start":256,"line_end":256,"column_start":1,"column_end":20}},{"value":"/ {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8925,"byte_end":8930,"line_start":257,"line_end":257,"column_start":1,"column_end":6}},{"value":"/     type Response = S::Response;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8931,"byte_end":8967,"line_start":258,"line_end":258,"column_start":1,"column_end":37}},{"value":"/     type Error = S::Error;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8968,"byte_end":8998,"line_start":259,"line_end":259,"column_start":1,"column_end":31}},{"value":"/     type Future = Pin<Box<dyn Future<Output = Result<Self::Response, Self::Error>>>>;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":8999,"byte_end":9088,"line_start":260,"line_end":260,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9089,"byte_end":9092,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/     fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9093,"byte_end":9182,"line_start":262,"line_end":262,"column_start":1,"column_end":90}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9183,"byte_end":9214,"line_start":263,"line_end":263,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9215,"byte_end":9224,"line_start":264,"line_end":264,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9225,"byte_end":9228,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/     fn call(&mut self, req: R) -> Self::Future {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9229,"byte_end":9281,"line_start":266,"line_end":266,"column_start":1,"column_end":53}},{"value":"/         let mut inner = self.inner.clone();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9282,"byte_end":9329,"line_start":267,"line_end":267,"column_start":1,"column_end":48}},{"value":"/         Box::pin(async move {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9330,"byte_end":9363,"line_start":268,"line_end":268,"column_start":1,"column_end":34}},{"value":"/             // `inner` might not be ready since its a clone","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9364,"byte_end":9427,"line_start":269,"line_end":269,"column_start":1,"column_end":64}},{"value":"/             inner.call(req).await","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9428,"byte_end":9465,"line_start":270,"line_end":270,"column_start":1,"column_end":38}},{"value":"/         })","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9466,"byte_end":9480,"line_start":271,"line_end":271,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9481,"byte_end":9490,"line_start":272,"line_end":272,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9491,"byte_end":9496,"line_start":273,"line_end":273,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9497,"byte_end":9504,"line_start":274,"line_end":274,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9505,"byte_end":9508,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"/ You should instead use [`std::mem::replace`] to take the service that was ready:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9509,"byte_end":9593,"line_start":276,"line_end":276,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9594,"byte_end":9597,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9598,"byte_end":9609,"line_start":278,"line_end":278,"column_start":1,"column_end":12}},{"value":"/ # use std::pin::Pin;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9610,"byte_end":9634,"line_start":279,"line_end":279,"column_start":1,"column_end":25}},{"value":"/ # use std::task::{Poll, Context};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9635,"byte_end":9672,"line_start":280,"line_end":280,"column_start":1,"column_end":38}},{"value":"/ # use std::future::Future;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9673,"byte_end":9703,"line_start":281,"line_end":281,"column_start":1,"column_end":31}},{"value":"/ # use tower_service::Service;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9704,"byte_end":9737,"line_start":282,"line_end":282,"column_start":1,"column_end":34}},{"value":"/ #","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9738,"byte_end":9743,"line_start":283,"line_end":283,"column_start":1,"column_end":6}},{"value":"/ struct Wrapper<S> {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9744,"byte_end":9767,"line_start":284,"line_end":284,"column_start":1,"column_end":24}},{"value":"/     inner: S,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9768,"byte_end":9785,"line_start":285,"line_end":285,"column_start":1,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9786,"byte_end":9791,"line_start":286,"line_end":286,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9792,"byte_end":9795,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ impl<R, S> Service<R> for Wrapper<S>","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9796,"byte_end":9836,"line_start":288,"line_end":288,"column_start":1,"column_end":41}},{"value":"/ where","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9837,"byte_end":9846,"line_start":289,"line_end":289,"column_start":1,"column_end":10}},{"value":"/     S: Service<R> + Clone + 'static,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9847,"byte_end":9887,"line_start":290,"line_end":290,"column_start":1,"column_end":41}},{"value":"/     R: 'static,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9888,"byte_end":9907,"line_start":291,"line_end":291,"column_start":1,"column_end":20}},{"value":"/ {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9908,"byte_end":9913,"line_start":292,"line_end":292,"column_start":1,"column_end":6}},{"value":"/     type Response = S::Response;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9914,"byte_end":9950,"line_start":293,"line_end":293,"column_start":1,"column_end":37}},{"value":"/     type Error = S::Error;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9951,"byte_end":9981,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/     type Future = Pin<Box<dyn Future<Output = Result<Self::Response, Self::Error>>>>;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":9982,"byte_end":10071,"line_start":295,"line_end":295,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10072,"byte_end":10075,"line_start":296,"line_end":296,"column_start":1,"column_end":4}},{"value":"/     fn poll_ready(&mut self, cx: &mut Context<'_>) -> Poll<Result<(), Self::Error>> {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10076,"byte_end":10165,"line_start":297,"line_end":297,"column_start":1,"column_end":90}},{"value":"/         Poll::Ready(Ok(()))","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10166,"byte_end":10197,"line_start":298,"line_end":298,"column_start":1,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10198,"byte_end":10207,"line_start":299,"line_end":299,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10208,"byte_end":10211,"line_start":300,"line_end":300,"column_start":1,"column_end":4}},{"value":"/     fn call(&mut self, req: R) -> Self::Future {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10212,"byte_end":10264,"line_start":301,"line_end":301,"column_start":1,"column_end":53}},{"value":"/         let clone = self.inner.clone();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10265,"byte_end":10308,"line_start":302,"line_end":302,"column_start":1,"column_end":44}},{"value":"/         // take the service that was ready","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10309,"byte_end":10355,"line_start":303,"line_end":303,"column_start":1,"column_end":47}},{"value":"/         let mut inner = std::mem::replace(&mut self.inner, clone);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10356,"byte_end":10426,"line_start":304,"line_end":304,"column_start":1,"column_end":71}},{"value":"/         Box::pin(async move {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10427,"byte_end":10460,"line_start":305,"line_end":305,"column_start":1,"column_end":34}},{"value":"/             inner.call(req).await","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10461,"byte_end":10498,"line_start":306,"line_end":306,"column_start":1,"column_end":38}},{"value":"/         })","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10499,"byte_end":10513,"line_start":307,"line_end":307,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10514,"byte_end":10523,"line_start":308,"line_end":308,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10524,"byte_end":10529,"line_start":309,"line_end":309,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10530,"byte_end":10537,"line_start":310,"line_end":310,"column_start":1,"column_end":8}}]},{"kind":"Type","id":{"krate":0,"index":15},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10616,"byte_end":10624,"line_start":313,"line_end":313,"column_start":10,"column_end":18},"name":"Response","qualname":"::Service::Response","value":"type Response;","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Responses given by the service.\n","sig":null,"attributes":[{"value":"/ Responses given by the service.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10571,"byte_end":10606,"line_start":312,"line_end":312,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":16},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10676,"byte_end":10681,"line_start":316,"line_end":316,"column_start":10,"column_end":15},"name":"Error","qualname":"::Service::Error","value":"type Error;","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Errors produced by the service.\n","sig":null,"attributes":[{"value":"/ Errors produced by the service.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10631,"byte_end":10666,"line_start":315,"line_end":315,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":17},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10728,"byte_end":10734,"line_start":319,"line_end":319,"column_start":10,"column_end":16},"name":"Future","qualname":"::Service::Future","value":"type Future: Future<Output = Result<Self::Response, Self::Error>>;","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" The future response value.\n","sig":null,"attributes":[{"value":"/ The future response value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10688,"byte_end":10718,"line_start":318,"line_end":318,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":12020,"byte_end":12030,"line_start":340,"line_end":340,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"::Service::poll_ready","value":"pub fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Returns `Poll::Ready(Ok(()))` when the service is able to process requests.","sig":null,"attributes":[{"value":"/ Returns `Poll::Ready(Ok(()))` when the service is able to process requests.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10795,"byte_end":10874,"line_start":321,"line_end":321,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10879,"byte_end":10882,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ If the service is at capacity, then `Poll::Pending` is returned and the task","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10887,"byte_end":10967,"line_start":323,"line_end":323,"column_start":5,"column_end":85}},{"value":"/ is notified when the service becomes ready again. This function is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":10972,"byte_end":11042,"line_start":324,"line_end":324,"column_start":5,"column_end":75}},{"value":"/ expected to be called while on a task. Generally, this can be done with","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":11047,"byte_end":11122,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ a simple `futures::future::poll_fn` call.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":11127,"byte_end":11172,"line_start":326,"line_end":326,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":11177,"byte_end":11180,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ If `Poll::Ready(Err(_))` is returned, the service is no longer able to service requests","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":11185,"byte_end":11276,"line_start":328,"line_end":328,"column_start":5,"column_end":96}},{"value":"/ and the caller should discard the service instance.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":11281,"byte_end":11336,"line_start":329,"line_end":329,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":11341,"byte_end":11344,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Once `poll_ready` returns `Poll::Ready(Ok(()))`, a request may be dispatched to the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":11349,"byte_end":11436,"line_start":331,"line_end":331,"column_start":5,"column_end":92}},{"value":"/ service using `call`. Until a request is dispatched, repeated calls to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":11441,"byte_end":11515,"line_start":332,"line_end":332,"column_start":5,"column_end":79}},{"value":"/ `poll_ready` must return either `Poll::Ready(Ok(()))` or `Poll::Ready(Err(_))`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":11520,"byte_end":11603,"line_start":333,"line_end":333,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":11608,"byte_end":11611,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Note that `poll_ready` may reserve shared resources that are consumed in a subsequent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":11616,"byte_end":11705,"line_start":335,"line_end":335,"column_start":5,"column_end":94}},{"value":"/ invocation of `call`. Thus, it is critical for implementations to not assume that `call`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":11710,"byte_end":11802,"line_start":336,"line_end":336,"column_start":5,"column_end":97}},{"value":"/ will always be invoked and to ensure that such resources are released if the service is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":11807,"byte_end":11898,"line_start":337,"line_end":337,"column_start":5,"column_end":96}},{"value":"/ dropped before `call` is invoked or the future returned by `call` is dropped before it","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":11903,"byte_end":11993,"line_start":338,"line_end":338,"column_start":5,"column_end":95}},{"value":"/ is polled.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":11998,"byte_end":12012,"line_start":339,"line_end":339,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":12601,"byte_end":12605,"line_start":354,"line_end":354,"column_start":8,"column_end":12},"name":"call","qualname":"::Service::call","value":"pub fn call(&mut Self, Request) -> Self::Future","parent":{"krate":0,"index":13},"children":[],"decl_id":null,"docs":" Process the request and return the response asynchronously.","sig":null,"attributes":[{"value":"/ Process the request and return the response asynchronously.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":12103,"byte_end":12166,"line_start":342,"line_end":342,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":12171,"byte_end":12174,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This function is expected to be callable off task. As such,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":12179,"byte_end":12242,"line_start":344,"line_end":344,"column_start":5,"column_end":68}},{"value":"/ implementations should take care to not call `poll_ready`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":12247,"byte_end":12309,"line_start":345,"line_end":345,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":12314,"byte_end":12317,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ Before dispatching a request, `poll_ready` must be called and return","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":12322,"byte_end":12394,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ `Poll::Ready(Ok(()))`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":12399,"byte_end":12425,"line_start":348,"line_end":348,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":12430,"byte_end":12433,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":12438,"byte_end":12450,"line_start":350,"line_end":350,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":12455,"byte_end":12458,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Implementations are permitted to panic if `call` is invoked without","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":12463,"byte_end":12534,"line_start":352,"line_end":352,"column_start":5,"column_end":76}},{"value":"/ obtaining `Poll::Ready(Ok(()))` from `poll_ready`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":12539,"byte_end":12593,"line_start":353,"line_end":353,"column_start":5,"column_end":59}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":13087,"byte_end":13090,"line_start":374,"line_end":374,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/tower-service-0.3.2/src/lib.rs","byte_start":13087,"byte_end":13090,"line_start":374,"line_end":374,"column_start":39,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":5,"index":315},"to":{"krate":0,"index":13}}]}