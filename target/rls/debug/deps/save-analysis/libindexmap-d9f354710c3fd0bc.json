{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1","program":"/Users/maximvezenov/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","indexmap","--edition=2021","/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"std\"","-C","metadata=d9f354710c3fd0bc","-C","extra-filename=-d9f354710c3fd0bc","--out-dir","/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps","-L","dependency=/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps","--extern","hashbrown=/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps/libhashbrown-1fd90ed69ff491f2.rmeta","--cap-lints","allow","--cfg","has_std","--error-format=json","--sysroot","/Users/maximvezenov/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps/libindexmap-d9f354710c3fd0bc.rmeta"},"prelude":{"crate_id":{"name":"indexmap","disambiguator":[8022265384670277173,0]},"crate_root":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src","external_crates":[{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14793976659495462539,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3402831840469434398,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10266006331935790141,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[3256146445313423250,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":5,"id":{"name":"std","disambiguator":[8736441298905945133,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17904618012795691138,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9322387616446168443,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3101585505833515335,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9998121223216013160,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13604153592636442655,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[4682215639508348019,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[681692869457277629,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[14282542057858629160,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14550073586256240635,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6281633846692226065,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17361906875064838028,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[16875744454975590306,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","num":18,"id":{"name":"hashbrown","disambiguator":[11004370185337620497,0]}}],"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":92,"byte_end":5459,"line_start":2,"line_end":193,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":134},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":91542,"byte_end":91555,"line_start":598,"line_end":598,"column_start":20,"column_end":33},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":82}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":14626,"byte_end":14637,"line_start":6,"line_end":6,"column_start":30,"column_end":41},"alias_span":null,"name":"MutableKeys","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":0,"index":269},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15185,"byte_end":15190,"line_start":27,"line_end":27,"column_start":22,"column_end":27},"alias_span":null,"name":"Entry","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":0,"index":134},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15192,"byte_end":15205,"line_start":27,"line_end":27,"column_start":29,"column_end":42},"alias_span":null,"name":"OccupiedEntry","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":0,"index":312},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15207,"byte_end":15218,"line_start":27,"line_end":27,"column_start":44,"column_end":55},"alias_span":null,"name":"VacantEntry","value":"","parent":{"krate":0,"index":81}},{"kind":"Use","ref_id":{"krate":0,"index":22},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":3606,"byte_end":3616,"line_start":109,"line_end":109,"column_start":28,"column_end":38},"alias_span":null,"name":"Equivalent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":409},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":3638,"byte_end":3646,"line_start":110,"line_end":110,"column_start":21,"column_end":29},"alias_span":null,"name":"IndexMap","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":927},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":3668,"byte_end":3676,"line_start":111,"line_end":111,"column_start":21,"column_end":29},"alias_span":null,"name":"IndexSet","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":92,"byte_end":5459,"line_start":2,"line_end":193,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":18},{"krate":0,"index":29},{"krate":0,"index":64},{"krate":0,"index":81},{"krate":0,"index":862},{"krate":0,"index":1326},{"krate":0,"index":1329},{"krate":0,"index":1332},{"krate":0,"index":1469},{"krate":0,"index":1472},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1335},{"krate":0,"index":1481},{"krate":0,"index":1487},{"krate":0,"index":1490},{"krate":0,"index":1337},{"krate":0,"index":1342},{"krate":0,"index":1354}],"decl_id":null,"docs":" [`IndexMap`] is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":92,"byte_end":113,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"warn(rust_2018_idioms)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":114,"byte_end":140,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"no_std","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":196,"byte_end":206,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"/ [`IndexMap`] is a hash table where the iteration order of the key-value","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":208,"byte_end":283,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ pairs is independent of the hash values of the keys.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":284,"byte_end":340,"line_start":8,"line_end":8,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":341,"byte_end":344,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`] is a corresponding hash set using the same implementation and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":345,"byte_end":423,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ with similar properties.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":424,"byte_end":452,"line_start":11,"line_end":11,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":453,"byte_end":456,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`]: map/struct.IndexMap.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":457,"byte_end":499,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`IndexSet`]: set/struct.IndexSet.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":500,"byte_end":542,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":543,"byte_end":546,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":547,"byte_end":550,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ### Feature Highlights","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":551,"byte_end":577,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":578,"byte_end":581,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`] and [`IndexSet`] are drop-in compatible with the std `HashMap`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":582,"byte_end":661,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ and `HashSet`, but they also have some features of note:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":662,"byte_end":722,"line_start":20,"line_end":20,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":723,"byte_end":726,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ - The ordering semantics (see their documentation for details)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":727,"byte_end":793,"line_start":22,"line_end":22,"column_start":1,"column_end":67}},{"value":"/ - Sorting methods and the [`.pop()`][IndexMap::pop] methods.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":794,"byte_end":858,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ - The [`Equivalent`] trait, which offers more flexible equality definitions","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":859,"byte_end":938,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/   between borrowed and owned versions of keys.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":939,"byte_end":989,"line_start":25,"line_end":25,"column_start":1,"column_end":51}},{"value":"/ - The [`MutableKeys`][map::MutableKeys] trait, which gives opt-in mutable","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":990,"byte_end":1067,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/   access to hash map keys.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1068,"byte_end":1098,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1099,"byte_end":1102,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ### Alternate Hashers","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1103,"byte_end":1128,"line_start":29,"line_end":29,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1129,"byte_end":1132,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`] and [`IndexSet`] have a default hasher type `S = RandomState`,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1133,"byte_end":1212,"line_start":31,"line_end":31,"column_start":1,"column_end":80}},{"value":"/ just like the standard `HashMap` and `HashSet`, which is resistant to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1213,"byte_end":1286,"line_start":32,"line_end":32,"column_start":1,"column_end":74}},{"value":"/ HashDoS attacks but not the most performant. Type aliases can make it easier","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1287,"byte_end":1367,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ to use alternate hashers:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1368,"byte_end":1397,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1398,"byte_end":1401,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1402,"byte_end":1409,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"/ use fnv::FnvBuildHasher;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1410,"byte_end":1438,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/ use fxhash::FxBuildHasher;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1439,"byte_end":1469,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ use indexmap::{IndexMap, IndexSet};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1470,"byte_end":1509,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1510,"byte_end":1513,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ type FnvIndexMap<K, V> = IndexMap<K, V, FnvBuildHasher>;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1514,"byte_end":1574,"line_start":41,"line_end":41,"column_start":1,"column_end":61}},{"value":"/ type FnvIndexSet<T> = IndexSet<T, FnvBuildHasher>;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1575,"byte_end":1629,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1630,"byte_end":1633,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ type FxIndexMap<K, V> = IndexMap<K, V, FxBuildHasher>;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1634,"byte_end":1692,"line_start":44,"line_end":44,"column_start":1,"column_end":59}},{"value":"/ type FxIndexSet<T> = IndexSet<T, FxBuildHasher>;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1693,"byte_end":1745,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1746,"byte_end":1749,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ let std: IndexSet<i32> = (0..100).collect();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1750,"byte_end":1798,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/ let fnv: FnvIndexSet<i32> = (0..100).collect();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1799,"byte_end":1850,"line_start":48,"line_end":48,"column_start":1,"column_end":52}},{"value":"/ let fx: FxIndexSet<i32> = (0..100).collect();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1851,"byte_end":1900,"line_start":49,"line_end":49,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(std, fnv);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1901,"byte_end":1926,"line_start":50,"line_end":50,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(std, fx);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1927,"byte_end":1951,"line_start":51,"line_end":51,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1952,"byte_end":1959,"line_start":52,"line_end":52,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1960,"byte_end":1963,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ ### Rust Version","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1964,"byte_end":1984,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1985,"byte_end":1988,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ This version of indexmap requires Rust 1.56 or later.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":1989,"byte_end":2046,"line_start":56,"line_end":56,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2047,"byte_end":2050,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ The indexmap 1.x release series will use a carefully considered version","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2051,"byte_end":2126,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ upgrade policy, where in a later 1.x version, we will raise the minimum","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2127,"byte_end":2202,"line_start":59,"line_end":59,"column_start":1,"column_end":76}},{"value":"/ required Rust version.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2203,"byte_end":2229,"line_start":60,"line_end":60,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2230,"byte_end":2233,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## No Standard Library Targets","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2234,"byte_end":2268,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2269,"byte_end":2272,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ This crate supports being built without `std`, requiring","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2273,"byte_end":2333,"line_start":64,"line_end":64,"column_start":1,"column_end":61}},{"value":"/ `alloc` instead. This is enabled automatically when it is detected that","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2334,"byte_end":2409,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ `std` is not available. There is no crate feature to enable/disable to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2410,"byte_end":2484,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ trigger this. It can be tested by building for a std-less target.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2485,"byte_end":2554,"line_start":67,"line_end":67,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2555,"byte_end":2558,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ - Creating maps and sets using [`new`][IndexMap::new] and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2559,"byte_end":2620,"line_start":69,"line_end":69,"column_start":1,"column_end":62}},{"value":"/ [`with_capacity`][IndexMap::with_capacity] is unavailable without `std`.  ","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2621,"byte_end":2699,"line_start":70,"line_end":70,"column_start":1,"column_end":79}},{"value":"/   Use methods [`IndexMap::default`][def],","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2700,"byte_end":2745,"line_start":71,"line_end":71,"column_start":1,"column_end":46}},{"value":"/   [`with_hasher`][IndexMap::with_hasher],","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2746,"byte_end":2791,"line_start":72,"line_end":72,"column_start":1,"column_end":46}},{"value":"/   [`with_capacity_and_hasher`][IndexMap::with_capacity_and_hasher] instead.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2792,"byte_end":2871,"line_start":73,"line_end":73,"column_start":1,"column_end":80}},{"value":"/   A no-std compatible hasher will be needed as well, for example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2872,"byte_end":2940,"line_start":74,"line_end":74,"column_start":1,"column_end":69}},{"value":"/   from the crate `twox-hash`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2941,"byte_end":2974,"line_start":75,"line_end":75,"column_start":1,"column_end":34}},{"value":"/ - Macros [`indexmap!`] and [`indexset!`] are unavailable without `std`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":2975,"byte_end":3050,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":3051,"byte_end":3054,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ [def]: map/struct.IndexMap.html#impl-Default","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":3055,"byte_end":3103,"line_start":78,"line_end":78,"column_start":1,"column_end":49}}]},{"kind":"Trait","id":{"krate":0,"index":22},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","byte_start":11026,"byte_end":11036,"line_start":13,"line_end":13,"column_start":11,"column_end":21},"name":"Equivalent","qualname":"::equivalent::Equivalent","value":"Equivalent<K: ?Sized>","parent":null,"children":[{"krate":0,"index":24}],"decl_id":null,"docs":" Key equivalence trait.","sig":null,"attributes":[{"value":"/ Key equivalence trait.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","byte_start":10636,"byte_end":10662,"line_start":3,"line_end":3,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","byte_start":10663,"byte_end":10666,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ This trait allows hash table lookup to be customized.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","byte_start":10667,"byte_end":10724,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/ It has one blanket implementation that uses the regular `Borrow` solution,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","byte_start":10725,"byte_end":10803,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ just like `HashMap` and `BTreeMap` do, so that you can pass `&str` to lookup","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","byte_start":10804,"byte_end":10884,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ into a map with `String` keys and so on.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","byte_start":10885,"byte_end":10929,"line_start":8,"line_end":8,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","byte_start":10930,"byte_end":10933,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # Contract","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","byte_start":10934,"byte_end":10948,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","byte_start":10949,"byte_end":10952,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The implementor **must** hash like `K`, if it is hashable.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","byte_start":10953,"byte_end":11015,"line_start":12,"line_end":12,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","byte_start":11124,"byte_end":11134,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"equivalent","qualname":"::equivalent::Equivalent::equivalent","value":"pub fn equivalent(&Self, &K) -> bool","parent":{"krate":0,"index":22},"children":[],"decl_id":null,"docs":" Compare self to `key` and return `true` if they are equal.\n","sig":null,"attributes":[{"value":"/ Compare self to `key` and return `true` if they are equal.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","byte_start":11054,"byte_end":11116,"line_start":14,"line_end":14,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":44},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":11430,"byte_end":11443,"line_start":5,"line_end":5,"column_start":12,"column_end":25},"name":"PrivateMarker","qualname":"::mutable_keys::PrivateMarker","value":"PrivateMarker {  }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":11993,"byte_end":12004,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"name":"MutableKeys","qualname":"::mutable_keys::MutableKeys","value":"MutableKeys","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52}],"decl_id":null,"docs":" Opt-in mutable access to keys.","sig":null,"attributes":[{"value":"/ Opt-in mutable access to keys.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":11448,"byte_end":11482,"line_start":7,"line_end":7,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":11483,"byte_end":11486,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ These methods expose `&mut K`, mutable references to the key as it is stored","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":11487,"byte_end":11567,"line_start":9,"line_end":9,"column_start":1,"column_end":81}},{"value":"/ in the map.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":11568,"byte_end":11583,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/ You are allowed to modify the keys in the hashmap **if the modification","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":11584,"byte_end":11659,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ does not change the key’s hash and equality**.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":11660,"byte_end":11712,"line_start":12,"line_end":12,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":11713,"byte_end":11716,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ If keys are modified erroneously, you can no longer look them up.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":11717,"byte_end":11786,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/ This is sound (memory safe) but a logical error hazard (just like","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":11787,"byte_end":11856,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ implementing PartialEq, Eq, or Hash incorrectly would be).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":11857,"byte_end":11919,"line_start":16,"line_end":16,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":11920,"byte_end":11923,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ `use` this trait to enable its methods for `IndexMap`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":11924,"byte_end":11982,"line_start":18,"line_end":18,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12016,"byte_end":12019,"line_start":20,"line_end":20,"column_start":10,"column_end":13},"name":"Key","qualname":"::mutable_keys::MutableKeys::Key","value":"type Key;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":47},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12030,"byte_end":12035,"line_start":21,"line_end":21,"column_start":10,"column_end":15},"name":"Value","qualname":"::mutable_keys::MutableKeys::Value","value":"type Value;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12107,"byte_end":12120,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"get_full_mut2","qualname":"::mutable_keys::MutableKeys::get_full_mut2","value":"pub fn get_full_mut2<Q: ?Sized>(&mut Self, &Q)\n-> Option<(usize, &mut Self::Key, &mut Self::Value)> where Q: Hash +\nEquivalent<Self::Key>","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Return item index, mutable reference to key and value\n","sig":null,"attributes":[{"value":"/ Return item index, mutable reference to key and value","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12042,"byte_end":12099,"line_start":23,"line_end":23,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12556,"byte_end":12563,"line_start":38,"line_end":38,"column_start":8,"column_end":15},"name":"retain2","qualname":"::mutable_keys::MutableKeys::retain2","value":"pub fn retain2<F>(&mut Self, F) where\nF: FnMut(&mut Self::Key, &mut Self::Value) -> bool","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12284,"byte_end":12356,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12361,"byte_end":12395,"line_start":32,"line_end":32,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12400,"byte_end":12403,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12408,"byte_end":12480,"line_start":34,"line_end":34,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12485,"byte_end":12495,"line_start":35,"line_end":35,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12500,"byte_end":12503,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12508,"byte_end":12548,"line_start":37,"line_end":37,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12855,"byte_end":12871,"line_start":45,"line_end":45,"column_start":8,"column_end":24},"name":"__private_marker","qualname":"::mutable_keys::MutableKeys::__private_marker","value":"pub fn __private_marker(&Self) -> PrivateMarker","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" This method is not useful in itself – it is there to “seal” the trait\n for external implementation, so that we can add methods without\n causing breaking changes.\n","sig":null,"attributes":[{"value":"/ This method is not useful in itself – it is there to “seal” the trait","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12662,"byte_end":12741,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"/ for external implementation, so that we can add methods without","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12746,"byte_end":12813,"line_start":43,"line_end":43,"column_start":5,"column_end":72}},{"value":"/ causing breaking changes.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":12818,"byte_end":12847,"line_start":44,"line_end":44,"column_start":5,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":81},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"map","qualname":"::map","value":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":403},{"krate":0,"index":406},{"krate":0,"index":409},{"krate":0,"index":415},{"krate":0,"index":421},{"krate":0,"index":431},{"krate":0,"index":436},{"krate":0,"index":441},{"krate":0,"index":463},{"krate":0,"index":534},{"krate":0,"index":548},{"krate":0,"index":553},{"krate":0,"index":558},{"krate":0,"index":561},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":572},{"krate":0,"index":576},{"krate":0,"index":580},{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":598},{"krate":0,"index":603},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":622},{"krate":0,"index":626},{"krate":0,"index":631},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":650},{"krate":0,"index":654},{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":672},{"krate":0,"index":677},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":696},{"krate":0,"index":700},{"krate":0,"index":705},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":724},{"krate":0,"index":728},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":746},{"krate":0,"index":751},{"krate":0,"index":755},{"krate":0,"index":758},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":769},{"krate":0,"index":777},{"krate":0,"index":785},{"krate":0,"index":792},{"krate":0,"index":799},{"krate":0,"index":805},{"krate":0,"index":811},{"krate":0,"index":816},{"krate":0,"index":822},{"krate":0,"index":829},{"krate":0,"index":836},{"krate":0,"index":844},{"krate":0,"index":849},{"krate":0,"index":858}],"decl_id":null,"docs":" `IndexMap` is a hash table where the iteration order of the key-value\n pairs is independent of the hash values of the keys.\n","sig":null,"attributes":[{"value":"/ `IndexMap` is a hash table where the iteration order of the key-value","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":14454,"byte_end":14527,"line_start":1,"line_end":1,"column_start":1,"column_end":74}},{"value":"/ pairs is independent of the hash values of the keys.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":14528,"byte_end":14584,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":134},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":98841,"byte_end":98854,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"OccupiedEntry","qualname":"::map::core::raw::OccupiedEntry","value":"OccupiedEntry {  }","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"decl_id":null,"docs":" A view into an occupied entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into an occupied entry in a `IndexMap`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":98569,"byte_end":98619,"line_start":102,"line_end":102,"column_start":1,"column_end":51}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":98620,"byte_end":98657,"line_start":103,"line_end":103,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":98658,"byte_end":98661,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":98662,"byte_end":98692,"line_start":105,"line_end":105,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99585,"byte_end":99588,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"key","qualname":"<OccupiedEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the entry's key in the map.","sig":null,"attributes":[{"value":"/ Gets a reference to the entry's key in the map.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99255,"byte_end":99306,"line_start":120,"line_end":120,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99311,"byte_end":99314,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Note that this is not the key that was used to find the entry. There may be an observable","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99319,"byte_end":99412,"line_start":122,"line_end":122,"column_start":5,"column_end":98}},{"value":"/ difference if the key type has any distinguishing features outside of `Hash` and `Eq`, like","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99417,"byte_end":99512,"line_start":123,"line_end":123,"column_start":5,"column_end":100}},{"value":"/ extra fields or the memory address of an allocation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99517,"byte_end":99573,"line_start":124,"line_end":124,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99724,"byte_end":99727,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"get","qualname":"<OccupiedEntry>::get","value":"pub fn get(&Self) -> &V","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the entry's value in the map.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the entry's value in the map.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99659,"byte_end":99712,"line_start":129,"line_end":129,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99993,"byte_end":100000,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<OccupiedEntry>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut V","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the entry's value in the map.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the entry's value in the map.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99800,"byte_end":99861,"line_start":134,"line_end":134,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99866,"byte_end":99869,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you need a reference which may outlive the destruction of the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99874,"byte_end":99942,"line_start":136,"line_end":136,"column_start":5,"column_end":73}},{"value":"/ `Entry` value, see `into_mut`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99947,"byte_end":99981,"line_start":137,"line_end":137,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":100412,"byte_end":100417,"line_start":152,"line_end":152,"column_start":12,"column_end":17},"name":"index","qualname":"<OccupiedEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index of the key-value pair\n","sig":null,"attributes":[{"value":"/ Return the index of the key-value pair","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":100344,"byte_end":100386,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":100391,"byte_end":100400,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":100687,"byte_end":100695,"line_start":159,"line_end":159,"column_start":12,"column_end":20},"name":"into_mut","qualname":"<OccupiedEntry>::into_mut","value":"pub fn into_mut(Self) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Converts into a mutable reference to the entry's value in the map,\n with a lifetime bound to the map itself.\n","sig":null,"attributes":[{"value":"/ Converts into a mutable reference to the entry's value in the map,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":100556,"byte_end":100626,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/ with a lifetime bound to the map itself.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":100631,"byte_end":100675,"line_start":158,"line_end":158,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":101157,"byte_end":101174,"line_start":171,"line_end":171,"column_start":12,"column_end":29},"name":"swap_remove_entry","qualname":"<OccupiedEntry>::swap_remove_entry","value":"pub fn swap_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":100805,"byte_end":100879,"line_start":164,"line_end":164,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":100884,"byte_end":100887,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":100892,"byte_end":100964,"line_start":166,"line_end":166,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":100969,"byte_end":101032,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":101037,"byte_end":101092,"line_start":168,"line_end":168,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":101097,"byte_end":101100,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":101105,"byte_end":101145,"line_start":170,"line_end":170,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":101824,"byte_end":101842,"line_start":185,"line_end":185,"column_start":12,"column_end":30},"name":"shift_remove_entry","qualname":"<OccupiedEntry>::shift_remove_entry","value":"pub fn shift_remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":101478,"byte_end":101552,"line_start":178,"line_end":178,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":101557,"byte_end":101560,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":101565,"byte_end":101631,"line_start":180,"line_end":180,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":101636,"byte_end":101697,"line_start":181,"line_end":181,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":101702,"byte_end":101759,"line_start":182,"line_end":182,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":101764,"byte_end":101767,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":101772,"byte_end":101812,"line_start":184,"line_end":184,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":273},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":88021,"byte_end":88029,"line_start":494,"line_end":494,"column_start":5,"column_end":13},"name":"Occupied","qualname":"::map::core::Entry::Occupied","value":"Entry::Occupied(OccupiedEntry)","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Existing slot with equivalent key.\n","sig":null,"attributes":[{"value":"/ Existing slot with equivalent key.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":87978,"byte_end":88016,"line_start":493,"line_end":493,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":276},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":88112,"byte_end":88118,"line_start":496,"line_end":496,"column_start":5,"column_end":11},"name":"Vacant","qualname":"::map::core::Entry::Vacant","value":"Entry::Vacant(VacantEntry)","parent":{"krate":0,"index":269},"children":[],"decl_id":null,"docs":" Vacant slot (no equivalent key in the map).\n","sig":null,"attributes":[{"value":"/ Vacant slot (no equivalent key in the map).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":88060,"byte_end":88107,"line_start":495,"line_end":495,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":269},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":87956,"byte_end":87961,"line_start":492,"line_end":492,"column_start":10,"column_end":15},"name":"Entry","qualname":"::map::core::Entry","value":"pub enum Entry<'a, K, V> { Occupied(OccupiedEntry), Vacant(VacantEntry), }","parent":null,"children":[{"krate":0,"index":273},{"krate":0,"index":276}],"decl_id":null,"docs":" Entry for an existing key-value pair or a vacant location to\n insert one.\n","sig":null,"attributes":[{"value":"/ Entry for an existing key-value pair or a vacant location to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":87866,"byte_end":87930,"line_start":490,"line_end":490,"column_start":1,"column_end":65}},{"value":"/ insert one.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":87931,"byte_end":87946,"line_start":491,"line_end":491,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":88441,"byte_end":88450,"line_start":504,"line_end":504,"column_start":12,"column_end":21},"name":"or_insert","qualname":"<Entry>::or_insert","value":"pub fn or_insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the given default value in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts the given default value in the entry if it is vacant and returns a mutable","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":88183,"byte_end":88269,"line_start":500,"line_end":500,"column_start":5,"column_end":91}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":88274,"byte_end":88366,"line_start":501,"line_end":501,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":88371,"byte_end":88374,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":88379,"byte_end":88429,"line_start":503,"line_end":503,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":88909,"byte_end":88923,"line_start":515,"line_end":515,"column_start":12,"column_end":26},"name":"or_insert_with","qualname":"<Entry>::or_insert_with","value":"pub fn or_insert_with<F>(Self, F) -> &'a mut V where F: FnOnce() -> V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the result of the `call` function in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts the result of the `call` function in the entry if it is vacant and returns a mutable","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":88641,"byte_end":88737,"line_start":511,"line_end":511,"column_start":5,"column_end":101}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":88742,"byte_end":88834,"line_start":512,"line_end":512,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":88839,"byte_end":88842,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":88847,"byte_end":88897,"line_start":514,"line_end":514,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":286},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":89464,"byte_end":89482,"line_start":530,"line_end":530,"column_start":12,"column_end":30},"name":"or_insert_with_key","qualname":"<Entry>::or_insert_with_key","value":"pub fn or_insert_with_key<F>(Self, F) -> &'a mut V where F: FnOnce(&K) -> V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the result of the `call` function with a reference to the entry's key if it is\n vacant, and returns a mutable reference to the new value. Otherwise a mutable reference to\n an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts the result of the `call` function with a reference to the entry's key if it is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":89153,"byte_end":89243,"line_start":525,"line_end":525,"column_start":5,"column_end":95}},{"value":"/ vacant, and returns a mutable reference to the new value. Otherwise a mutable reference to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":89248,"byte_end":89342,"line_start":526,"line_end":526,"column_start":5,"column_end":99}},{"value":"/ an already existent value is returned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":89347,"byte_end":89389,"line_start":527,"line_end":527,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":89394,"byte_end":89397,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":89402,"byte_end":89452,"line_start":529,"line_end":529,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":89938,"byte_end":89941,"line_start":545,"line_end":545,"column_start":12,"column_end":15},"name":"key","qualname":"<Entry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the entry's key, either within the map if occupied,\n or else the new key that was used to find the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the entry's key, either within the map if occupied,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":89790,"byte_end":89865,"line_start":543,"line_end":543,"column_start":5,"column_end":80}},{"value":"/ or else the new key that was used to find the entry.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":89870,"byte_end":89926,"line_start":544,"line_end":544,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":90193,"byte_end":90198,"line_start":553,"line_end":553,"column_start":12,"column_end":17},"name":"index","qualname":"<Entry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair exists or will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair exists or will be inserted.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":90108,"byte_end":90181,"line_start":552,"line_end":552,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":90425,"byte_end":90435,"line_start":561,"line_end":561,"column_start":12,"column_end":22},"name":"and_modify","qualname":"<Entry>::and_modify","value":"pub fn and_modify<F>(Self, F) -> Self where F: FnOnce(&mut V) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Modifies the entry if it is occupied.\n","sig":null,"attributes":[{"value":"/ Modifies the entry if it is occupied.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":90372,"byte_end":90413,"line_start":560,"line_end":560,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":90947,"byte_end":90957,"line_start":578,"line_end":578,"column_start":12,"column_end":22},"name":"or_default","qualname":"<Entry>::or_default","value":"pub fn or_default(Self) -> &'a mut V where V: Default","parent":null,"children":[],"decl_id":null,"docs":" Inserts a default-constructed value in the entry if it is vacant and returns a mutable\n reference to it. Otherwise a mutable reference to an already existent value is returned.","sig":null,"attributes":[{"value":"/ Inserts a default-constructed value in the entry if it is vacant and returns a mutable","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":90685,"byte_end":90775,"line_start":574,"line_end":574,"column_start":5,"column_end":95}},{"value":"/ reference to it. Otherwise a mutable reference to an already existent value is returned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":90780,"byte_end":90872,"line_start":575,"line_end":575,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":90877,"byte_end":90880,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":90885,"byte_end":90935,"line_start":577,"line_end":577,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":91752,"byte_end":91758,"line_start":603,"line_end":603,"column_start":12,"column_end":18},"name":"insert","qualname":"<OccupiedEntry>::insert","value":"pub fn insert(&mut Self, V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Sets the value of the entry to `value`, and returns the entry's old value.\n","sig":null,"attributes":[{"value":"/ Sets the value of the entry to `value`, and returns the entry's old value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":91662,"byte_end":91740,"line_start":602,"line_end":602,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92001,"byte_end":92007,"line_start":610,"line_end":610,"column_start":12,"column_end":18},"name":"remove","qualname":"<OccupiedEntry>::remove","value":"pub fn remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":91837,"byte_end":91923,"line_start":607,"line_end":607,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":91928,"byte_end":91931,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove()`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":91936,"byte_end":91989,"line_start":609,"line_end":609,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92423,"byte_end":92434,"line_start":621,"line_end":621,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<OccupiedEntry>::swap_remove","value":"pub fn swap_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92059,"byte_end":92145,"line_start":614,"line_end":614,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92150,"byte_end":92153,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92158,"byte_end":92230,"line_start":616,"line_end":616,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92235,"byte_end":92298,"line_start":617,"line_end":617,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92303,"byte_end":92358,"line_start":618,"line_end":618,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92363,"byte_end":92366,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92371,"byte_end":92411,"line_start":620,"line_end":620,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92852,"byte_end":92864,"line_start":632,"line_end":632,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<OccupiedEntry>::shift_remove","value":"pub fn shift_remove(Self) -> V","parent":null,"children":[],"decl_id":null,"docs":" Remove the key, value pair stored in the map for this entry, and return the value.","sig":null,"attributes":[{"value":"/ Remove the key, value pair stored in the map for this entry, and return the value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92494,"byte_end":92580,"line_start":625,"line_end":625,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92585,"byte_end":92588,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92593,"byte_end":92659,"line_start":627,"line_end":627,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92664,"byte_end":92725,"line_start":628,"line_end":628,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92730,"byte_end":92787,"line_start":629,"line_end":629,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92792,"byte_end":92795,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92800,"byte_end":92840,"line_start":631,"line_end":631,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93083,"byte_end":93095,"line_start":639,"line_end":639,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<OccupiedEntry>::remove_entry","value":"pub fn remove_entry(Self) -> (K, V)","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key, value pair stored in the map for this entry","sig":null,"attributes":[{"value":"/ Remove and return the key, value pair stored in the map for this entry","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":92925,"byte_end":92999,"line_start":636,"line_end":636,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93004,"byte_end":93007,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove_entry()`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93012,"byte_end":93071,"line_start":638,"line_end":638,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93586,"byte_end":93597,"line_start":657,"line_end":657,"column_start":12,"column_end":23},"name":"VacantEntry","qualname":"::map::core::VacantEntry","value":"VacantEntry {  }","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"decl_id":null,"docs":" A view into a vacant entry in a `IndexMap`.\n It is part of the [`Entry`] enum.","sig":null,"attributes":[{"value":"/ A view into a vacant entry in a `IndexMap`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93454,"byte_end":93501,"line_start":653,"line_end":653,"column_start":1,"column_end":48}},{"value":"/ It is part of the [`Entry`] enum.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93502,"byte_end":93539,"line_start":654,"line_end":654,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93540,"byte_end":93543,"line_start":655,"line_end":655,"column_start":1,"column_end":4}},{"value":"/ [`Entry`]: enum.Entry.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93544,"byte_end":93574,"line_start":656,"line_end":656,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93802,"byte_end":93805,"line_start":665,"line_end":665,"column_start":12,"column_end":15},"name":"key","qualname":"<VacantEntry>::key","value":"pub fn key(&Self) -> &K","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the key that was used to find the entry.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the key that was used to find the entry.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93726,"byte_end":93790,"line_start":664,"line_end":664,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93919,"byte_end":93927,"line_start":670,"line_end":670,"column_start":12,"column_end":20},"name":"into_key","qualname":"<VacantEntry>::into_key","value":"pub fn into_key(Self) -> K","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the key, leaving the entry vacant.\n","sig":null,"attributes":[{"value":"/ Takes ownership of the key, leaving the entry vacant.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93850,"byte_end":93907,"line_start":669,"line_end":669,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":94044,"byte_end":94049,"line_start":675,"line_end":675,"column_start":12,"column_end":17},"name":"index","qualname":"<VacantEntry>::index","value":"pub fn index(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the index where the key-value pair will be inserted.\n","sig":null,"attributes":[{"value":"/ Return the index where the key-value pair will be inserted.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93969,"byte_end":94032,"line_start":674,"line_end":674,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":94229,"byte_end":94235,"line_start":681,"line_end":681,"column_start":12,"column_end":18},"name":"insert","qualname":"<VacantEntry>::insert","value":"pub fn insert(Self, V) -> &'a mut V","parent":null,"children":[],"decl_id":null,"docs":" Inserts the entry's key and the given value into the map, and returns a mutable reference\n to the value.\n","sig":null,"attributes":[{"value":"/ Inserts the entry's key and the given value into the map, and returns a mutable reference","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":94102,"byte_end":94195,"line_start":679,"line_end":679,"column_start":5,"column_end":98}},{"value":"/ to the value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":94200,"byte_end":94217,"line_start":680,"line_end":680,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":409},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16658,"byte_end":16666,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"IndexMap","qualname":"::map::IndexMap","value":"IndexMap {  }","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414}],"decl_id":null,"docs":" A hash table where the iteration order of the key-value pairs is independent\n of the hash values of the keys.","sig":null,"attributes":[{"value":"/ A hash table where the iteration order of the key-value pairs is independent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15222,"byte_end":15302,"line_start":29,"line_end":29,"column_start":1,"column_end":81}},{"value":"/ of the hash values of the keys.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15303,"byte_end":15338,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15339,"byte_end":15342,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashMap`, but also","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15343,"byte_end":15420,"line_start":32,"line_end":32,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15421,"byte_end":15449,"line_start":33,"line_end":33,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15450,"byte_end":15453,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15454,"byte_end":15465,"line_start":35,"line_end":35,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15466,"byte_end":15469,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs have a consistent order that is determined by","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15470,"byte_end":15539,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ the sequence of insertion and removal calls on the map. The order does","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15540,"byte_end":15614,"line_start":38,"line_end":38,"column_start":1,"column_end":75}},{"value":"/ not depend on the keys or the hash function at all.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15615,"byte_end":15670,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15671,"byte_end":15674,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the map in *the order*.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15675,"byte_end":15725,"line_start":41,"line_end":41,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15726,"byte_end":15729,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15730,"byte_end":15804,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15805,"byte_end":15881,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15882,"byte_end":15947,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15948,"byte_end":15951,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15952,"byte_end":15965,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15966,"byte_end":15969,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The key-value pairs are indexed in a compact range without holes in the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":15970,"byte_end":16045,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ range `0..self.len()`. For example, the method `.get_full` looks up the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16046,"byte_end":16121,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/ index for a key, and the method `.get_index` looks up the key-value pair by","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16122,"byte_end":16201,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ index.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16202,"byte_end":16212,"line_start":52,"line_end":52,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16213,"byte_end":16216,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16217,"byte_end":16231,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16232,"byte_end":16235,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16236,"byte_end":16243,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexMap;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16244,"byte_end":16271,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16272,"byte_end":16275,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ // count the frequency of each letter in a sentence.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16276,"byte_end":16332,"line_start":59,"line_end":59,"column_start":1,"column_end":57}},{"value":"/ let mut letters = IndexMap::new();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16333,"byte_end":16371,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ for ch in \"a short treatise on fungi\".chars() {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16372,"byte_end":16423,"line_start":61,"line_end":61,"column_start":1,"column_end":52}},{"value":"/     *letters.entry(ch).or_insert(0) += 1;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16424,"byte_end":16469,"line_start":62,"line_end":62,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16470,"byte_end":16475,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16476,"byte_end":16479,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(letters[&'s'], 2);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16480,"byte_end":16513,"line_start":65,"line_end":65,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'t'], 3);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16514,"byte_end":16547,"line_start":66,"line_end":66,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters[&'u'], 1);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16548,"byte_end":16581,"line_start":67,"line_end":67,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(letters.get(&'y'), None);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16582,"byte_end":16622,"line_start":68,"line_end":68,"column_start":1,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16623,"byte_end":16630,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16631,"byte_end":16646,"line_start":70,"line_end":70,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18394,"byte_end":18397,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexMap<K, V>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new map. (Does not allocate.)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18326,"byte_end":18368,"line_start":145,"line_end":145,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18373,"byte_end":18382,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18624,"byte_end":18637,"line_start":156,"line_end":156,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexMap<K, V>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18452,"byte_end":18521,"line_start":151,"line_end":151,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18526,"byte_end":18555,"line_start":152,"line_end":152,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18560,"byte_end":18563,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18568,"byte_end":18598,"line_start":154,"line_end":154,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18603,"byte_end":18612,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18935,"byte_end":18959,"line_start":167,"line_end":167,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexMap<K, V, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with capacity for `n` key-value pairs. (Does not\n allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new map with capacity for `n` key-value pairs. (Does not","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18763,"byte_end":18832,"line_start":162,"line_end":162,"column_start":5,"column_end":74}},{"value":"/ allocate if `n` is zero.)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18837,"byte_end":18866,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18871,"byte_end":18874,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18879,"byte_end":18909,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18914,"byte_end":18923,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19371,"byte_end":19382,"line_start":182,"line_end":182,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<IndexMap<K, V, S>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new map with `hash_builder`.","sig":null,"attributes":[{"value":"/ Create a new map with `hash_builder`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19220,"byte_end":19261,"line_start":178,"line_end":178,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19266,"byte_end":19269,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This function is `const`, so it","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19274,"byte_end":19309,"line_start":180,"line_end":180,"column_start":5,"column_end":40}},{"value":"/ can be called in `static` contexts.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19314,"byte_end":19353,"line_start":181,"line_end":181,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19557,"byte_end":19565,"line_start":190,"line_end":190,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexMap<K, V, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19515,"byte_end":19545,"line_start":189,"line_end":189,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19686,"byte_end":19692,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexMap<K, V, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the map's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the map's `BuildHasher`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19624,"byte_end":19674,"line_start":194,"line_end":194,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19867,"byte_end":19870,"line_start":203,"line_end":203,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexMap<K, V, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Return the number of key-value pairs in the map.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19746,"byte_end":19798,"line_start":199,"line_end":199,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19803,"byte_end":19806,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19811,"byte_end":19841,"line_start":201,"line_end":201,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19846,"byte_end":19855,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":20042,"byte_end":20050,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexMap<K, V, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the map contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the map contains no elements.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19924,"byte_end":19973,"line_start":207,"line_end":207,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19978,"byte_end":19981,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":19986,"byte_end":20016,"line_start":209,"line_end":209,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":20021,"byte_end":20030,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":20189,"byte_end":20193,"line_start":216,"line_end":216,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexMap<K, V, S>>::iter","value":"pub fn iter(&Self) -> Iter<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":20103,"byte_end":20177,"line_start":215,"line_end":215,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":20387,"byte_end":20395,"line_start":223,"line_end":223,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<IndexMap<K, V, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> IterMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the key-value pairs of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the key-value pairs of the map, in their order","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":20301,"byte_end":20375,"line_start":222,"line_end":222,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":20596,"byte_end":20600,"line_start":230,"line_end":230,"column_start":12,"column_end":16},"name":"keys","qualname":"<IndexMap<K, V, S>>::keys","value":"pub fn keys(&Self) -> Keys<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the keys of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the keys of the map, in their order","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":20521,"byte_end":20584,"line_start":229,"line_end":229,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":20790,"byte_end":20799,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"into_keys","qualname":"<IndexMap<K, V, S>>::into_keys","value":"pub fn into_keys(Self) -> IntoKeys<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an owning iterator over the keys of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an owning iterator over the keys of the map, in their order","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":20708,"byte_end":20778,"line_start":236,"line_end":236,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":20994,"byte_end":21000,"line_start":244,"line_end":244,"column_start":12,"column_end":18},"name":"values","qualname":"<IndexMap<K, V, S>>::values","value":"pub fn values(&Self) -> Values<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the map, in their order","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":20917,"byte_end":20982,"line_start":243,"line_end":243,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":21219,"byte_end":21229,"line_start":252,"line_end":252,"column_start":12,"column_end":22},"name":"values_mut","qualname":"<IndexMap<K, V, S>>::values_mut","value":"pub fn values_mut(&mut Self) -> ValuesMut<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over mutable references to the values of the map,\n in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over mutable references to the values of the map,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":21112,"byte_end":21184,"line_start":250,"line_end":250,"column_start":5,"column_end":77}},{"value":"/ in their order","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":21189,"byte_end":21207,"line_start":251,"line_end":251,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":21443,"byte_end":21454,"line_start":259,"line_end":259,"column_start":12,"column_end":23},"name":"into_values","qualname":"<IndexMap<K, V, S>>::into_values","value":"pub fn into_values(Self) -> IntoValues<K, V>","parent":null,"children":[],"decl_id":null,"docs":" Return an owning iterator over the values of the map, in their order\n","sig":null,"attributes":[{"value":"/ Return an owning iterator over the values of the map, in their order","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":21359,"byte_end":21431,"line_start":258,"line_end":258,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":21704,"byte_end":21709,"line_start":268,"line_end":268,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexMap<K, V, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all key-value pairs in the map, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all key-value pairs in the map, while preserving its capacity.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":21576,"byte_end":21649,"line_start":265,"line_end":265,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":21654,"byte_end":21657,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":21662,"byte_end":21692,"line_start":267,"line_end":267,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":21937,"byte_end":21945,"line_start":275,"line_end":275,"column_start":12,"column_end":20},"name":"truncate","qualname":"<IndexMap<K, V, S>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the map, keeping the first `len` elements and dropping the rest.","sig":null,"attributes":[{"value":"/ Shortens the map, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":21761,"byte_end":21838,"line_start":272,"line_end":272,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":21843,"byte_end":21846,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the map's current length, this has no effect.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":21851,"byte_end":21925,"line_start":274,"line_end":274,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22697,"byte_end":22702,"line_start":292,"line_end":292,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexMap<K, V, S>>::drain","value":"pub fn drain<R>(&mut Self, R) -> Drain<, K, V> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexMap` in the given index range, returning those\n key-value pairs as a drain iterator.","sig":null,"attributes":[{"value":"/ Clears the `IndexMap` in the given index range, returning those","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22015,"byte_end":22082,"line_start":279,"line_end":279,"column_start":5,"column_end":72}},{"value":"/ key-value pairs as a drain iterator.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22087,"byte_end":22127,"line_start":280,"line_end":280,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22132,"byte_end":22135,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ The range may be any type that implements `RangeBounds<usize>`,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22140,"byte_end":22207,"line_start":282,"line_end":282,"column_start":5,"column_end":72}},{"value":"/ including all of the `std::ops::Range*` types, or even a tuple pair of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22212,"byte_end":22286,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ `Bound` start and end values. To drain the map entirely, use `RangeFull`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22291,"byte_end":22367,"line_start":284,"line_end":284,"column_start":5,"column_end":81}},{"value":"/ like `map.drain(..)`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22372,"byte_end":22397,"line_start":285,"line_end":285,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22402,"byte_end":22405,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ This shifts down all entries following the drained range to fill the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22410,"byte_end":22482,"line_start":287,"line_end":287,"column_start":5,"column_end":77}},{"value":"/ gap, and keeps the allocated memory for reuse.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22487,"byte_end":22537,"line_start":288,"line_end":288,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22542,"byte_end":22545,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the starting point is greater than the end point or if","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22550,"byte_end":22624,"line_start":290,"line_end":290,"column_start":5,"column_end":79}},{"value":"/ the end point is greater than the length of the map.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22629,"byte_end":22685,"line_start":291,"line_end":291,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23212,"byte_end":23221,"line_start":308,"line_end":308,"column_start":12,"column_end":21},"name":"split_off","qualname":"<IndexMap<K, V, S>>::split_off","value":"pub fn split_off(&mut Self, usize) -> Self where S: Clone","parent":null,"children":[],"decl_id":null,"docs":" Splits the collection into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the collection into two at the given index.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22872,"byte_end":22926,"line_start":301,"line_end":301,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22931,"byte_end":22934,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Returns a newly allocated map containing the elements in the range","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":22939,"byte_end":23009,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/ `[at, len)`. After the call, the original map will be left containing","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23014,"byte_end":23087,"line_start":304,"line_end":304,"column_start":5,"column_end":78}},{"value":"/ the elements `[0, at)` with its previous capacity unchanged.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23092,"byte_end":23156,"line_start":305,"line_end":305,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23161,"byte_end":23164,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `at > len`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23169,"byte_end":23200,"line_start":307,"line_end":307,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23612,"byte_end":23619,"line_start":327,"line_end":327,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexMap<K, V, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more key-value pairs.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more key-value pairs.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23498,"byte_end":23557,"line_start":324,"line_end":324,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23562,"byte_end":23565,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23570,"byte_end":23600,"line_start":326,"line_end":326,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23812,"byte_end":23825,"line_start":334,"line_end":334,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<IndexMap<K, V, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the map as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the map as much as possible.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23702,"byte_end":23757,"line_start":331,"line_end":331,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23762,"byte_end":23765,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23770,"byte_end":23800,"line_start":333,"line_end":333,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23991,"byte_end":24000,"line_start":341,"line_end":341,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<IndexMap<K, V, S>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the map with a lower limit.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the map with a lower limit.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23882,"byte_end":23936,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23941,"byte_end":23944,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23949,"byte_end":23979,"line_start":340,"line_end":340,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":24928,"byte_end":24934,"line_start":364,"line_end":364,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexMap<K, V, S>>::insert","value":"pub fn insert(&mut Self, K, V) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":24276,"byte_end":24315,"line_start":351,"line_end":351,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":24320,"byte_end":24323,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":24328,"byte_end":24399,"line_start":353,"line_end":353,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":24404,"byte_end":24477,"line_start":354,"line_end":354,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `Some(_)`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":24482,"byte_end":24548,"line_start":355,"line_end":355,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":24553,"byte_end":24556,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":24561,"byte_end":24631,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `None` is returned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":24636,"byte_end":24688,"line_start":358,"line_end":358,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":24693,"byte_end":24696,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":24701,"byte_end":24751,"line_start":360,"line_end":360,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":24756,"byte_end":24759,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":24764,"byte_end":24839,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":24844,"byte_end":24916,"line_start":363,"line_end":363,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25720,"byte_end":25731,"line_start":381,"line_end":381,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexMap<K, V, S>>::insert_full","value":"pub fn insert_full(&mut Self, K, V) -> (usize, Option<V>)","parent":null,"children":[],"decl_id":null,"docs":" Insert a key-value pair in the map, and get their index.","sig":null,"attributes":[{"value":"/ Insert a key-value pair in the map, and get their index.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25029,"byte_end":25089,"line_start":368,"line_end":368,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25094,"byte_end":25097,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ If an equivalent key already exists in the map: the key remains and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25102,"byte_end":25173,"line_start":370,"line_end":370,"column_start":5,"column_end":76}},{"value":"/ retains in its place in the order, its corresponding value is updated","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25178,"byte_end":25251,"line_start":371,"line_end":371,"column_start":5,"column_end":78}},{"value":"/ with `value` and the older value is returned inside `(index, Some(_))`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25256,"byte_end":25331,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25336,"byte_end":25339,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ If no equivalent key existed in the map: the new key-value pair is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25344,"byte_end":25414,"line_start":374,"line_end":374,"column_start":5,"column_end":75}},{"value":"/ inserted, last in order, and `(index, None)` is returned.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25419,"byte_end":25480,"line_start":375,"line_end":375,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25485,"byte_end":25488,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25493,"byte_end":25543,"line_start":377,"line_end":377,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25548,"byte_end":25551,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ See also [`entry`](#method.entry) if you you want to insert *or* modify","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25556,"byte_end":25631,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ or if you need to get the index of the corresponding key-value pair.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25636,"byte_end":25708,"line_start":380,"line_end":380,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":26063,"byte_end":26068,"line_start":390,"line_end":390,"column_start":12,"column_end":17},"name":"entry","qualname":"<IndexMap<K, V, S>>::entry","value":"pub fn entry(&mut Self, K) -> Entry<, K, V>","parent":null,"children":[],"decl_id":null,"docs":" Get the given key’s corresponding entry in the map for insertion and/or\n in-place manipulation.","sig":null,"attributes":[{"value":"/ Get the given key’s corresponding entry in the map for insertion and/or","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25880,"byte_end":25957,"line_start":386,"line_end":386,"column_start":5,"column_end":80}},{"value":"/ in-place manipulation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25962,"byte_end":25988,"line_start":387,"line_end":387,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":25993,"byte_end":25996,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":26001,"byte_end":26051,"line_start":389,"line_end":389,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":26318,"byte_end":26330,"line_start":398,"line_end":398,"column_start":12,"column_end":24},"name":"contains_key","qualname":"<IndexMap<K, V, S>>::contains_key","value":"pub fn contains_key<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `key` exists in the map.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `key` exists in the map.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":26191,"byte_end":26253,"line_start":395,"line_end":395,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":26258,"byte_end":26261,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":26266,"byte_end":26306,"line_start":397,"line_end":397,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":26624,"byte_end":26627,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexMap<K, V, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&V> where Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored for `key`, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored for `key`, if it is present,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":26467,"byte_end":26538,"line_start":405,"line_end":405,"column_start":5,"column_end":76}},{"value":"/ else `None`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":26543,"byte_end":26559,"line_start":406,"line_end":406,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":26564,"byte_end":26567,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":26572,"byte_end":26612,"line_start":408,"line_end":408,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":27066,"byte_end":27079,"line_start":425,"line_end":425,"column_start":12,"column_end":25},"name":"get_key_value","qualname":"<IndexMap<K, V, S>>::get_key_value","value":"pub fn get_key_value<Q: ?Sized>(&Self, &Q) -> Option<(&K, &V)> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return references to the key-value pair stored for `key`,\n if it is present, else `None`.","sig":null,"attributes":[{"value":"/ Return references to the key-value pair stored for `key`,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":26901,"byte_end":26962,"line_start":421,"line_end":421,"column_start":5,"column_end":66}},{"value":"/ if it is present, else `None`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":26967,"byte_end":27001,"line_start":422,"line_end":422,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":27006,"byte_end":27009,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":27014,"byte_end":27054,"line_start":424,"line_end":424,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":27421,"byte_end":27429,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexMap<K, V, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &K, &V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, key and value\n","sig":null,"attributes":[{"value":"/ Return item index, key and value","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":27373,"byte_end":27409,"line_start":437,"line_end":437,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":27844,"byte_end":27856,"line_start":453,"line_end":453,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<IndexMap<K, V, S>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, if it exists in the map","sig":null,"attributes":[{"value":"/ Return item index, if it exists in the map","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":27733,"byte_end":27779,"line_start":450,"line_end":450,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":27784,"byte_end":27787,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":27792,"byte_end":27832,"line_start":452,"line_end":452,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":28126,"byte_end":28133,"line_start":465,"line_end":465,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<IndexMap<K, V, S>>::get_mut","value":"pub fn get_mut<Q: ?Sized>(&mut Self, &Q) -> Option<&mut V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":28434,"byte_end":28446,"line_start":477,"line_end":477,"column_start":12,"column_end":24},"name":"get_full_mut","qualname":"<IndexMap<K, V, S>>::get_full_mut","value":"pub fn get_full_mut<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, &K, &mut V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29478,"byte_end":29484,"line_start":512,"line_end":512,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexMap<K, V, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29157,"byte_end":29217,"line_start":504,"line_end":504,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29222,"byte_end":29236,"line_start":505,"line_end":505,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29241,"byte_end":29244,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(key)`, if you need to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29249,"byte_end":29320,"line_start":507,"line_end":507,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the keys in the map, use `.shift_remove(key)`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29325,"byte_end":29396,"line_start":508,"line_end":508,"column_start":5,"column_end":76}},{"value":"/ instead.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29401,"byte_end":29413,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29418,"byte_end":29421,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29426,"byte_end":29466,"line_start":511,"line_end":511,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29934,"byte_end":29946,"line_start":526,"line_end":526,"column_start":12,"column_end":24},"name":"remove_entry","qualname":"<IndexMap<K, V, S>>::remove_entry","value":"pub fn remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29619,"byte_end":29680,"line_start":519,"line_end":519,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29685,"byte_end":29688,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove_entry(key)`, if you need to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29693,"byte_end":29770,"line_start":521,"line_end":521,"column_start":5,"column_end":82}},{"value":"/ preserve the order of the keys in the map, use `.shift_remove_entry(key)`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29775,"byte_end":29852,"line_start":522,"line_end":522,"column_start":5,"column_end":82}},{"value":"/ instead.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29857,"byte_end":29869,"line_start":523,"line_end":523,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29874,"byte_end":29877,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":29882,"byte_end":29922,"line_start":525,"line_end":525,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30503,"byte_end":30514,"line_start":543,"line_end":543,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexMap<K, V, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30092,"byte_end":30152,"line_start":533,"line_end":533,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30157,"byte_end":30171,"line_start":534,"line_end":534,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30176,"byte_end":30179,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30184,"byte_end":30256,"line_start":536,"line_end":536,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30261,"byte_end":30324,"line_start":537,"line_end":537,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30329,"byte_end":30384,"line_start":538,"line_end":538,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30389,"byte_end":30392,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30397,"byte_end":30438,"line_start":540,"line_end":540,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30443,"byte_end":30446,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30451,"byte_end":30491,"line_start":542,"line_end":542,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":31058,"byte_end":31075,"line_start":559,"line_end":559,"column_start":12,"column_end":29},"name":"swap_remove_entry","qualname":"<IndexMap<K, V, S>>::swap_remove_entry","value":"pub fn swap_remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30665,"byte_end":30726,"line_start":550,"line_end":550,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30731,"byte_end":30734,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30739,"byte_end":30811,"line_start":552,"line_end":552,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30816,"byte_end":30879,"line_start":553,"line_end":553,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30884,"byte_end":30939,"line_start":554,"line_end":554,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30944,"byte_end":30947,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30952,"byte_end":30993,"line_start":556,"line_end":556,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":30998,"byte_end":31001,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":31006,"byte_end":31046,"line_start":558,"line_end":558,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":31746,"byte_end":31762,"line_start":579,"line_end":579,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexMap<K, V, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":31321,"byte_end":31388,"line_start":569,"line_end":569,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":31393,"byte_end":31414,"line_start":570,"line_end":570,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":31419,"byte_end":31422,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":31427,"byte_end":31499,"line_start":572,"line_end":572,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":31504,"byte_end":31567,"line_start":573,"line_end":573,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":31572,"byte_end":31627,"line_start":574,"line_end":574,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":31632,"byte_end":31635,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":31640,"byte_end":31681,"line_start":576,"line_end":576,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":31686,"byte_end":31689,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":31694,"byte_end":31734,"line_start":578,"line_end":578,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32429,"byte_end":32441,"line_start":600,"line_end":600,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexMap<K, V, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> Option<V> where Q: Hash +\nEquivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return\n its value.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32024,"byte_end":32084,"line_start":590,"line_end":590,"column_start":5,"column_end":65}},{"value":"/ its value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32089,"byte_end":32103,"line_start":591,"line_end":591,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32108,"byte_end":32111,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32116,"byte_end":32182,"line_start":593,"line_end":593,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32187,"byte_end":32248,"line_start":594,"line_end":594,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32253,"byte_end":32310,"line_start":595,"line_end":595,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32315,"byte_end":32318,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32323,"byte_end":32364,"line_start":597,"line_end":597,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32369,"byte_end":32372,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32377,"byte_end":32417,"line_start":599,"line_end":599,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32980,"byte_end":32998,"line_start":616,"line_end":616,"column_start":12,"column_end":30},"name":"shift_remove_entry","qualname":"<IndexMap<K, V, S>>::shift_remove_entry","value":"pub fn shift_remove_entry<Q: ?Sized>(&mut Self, &Q) -> Option<(K, V)> where\nQ: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the key-value pair equivalent to `key`.","sig":null,"attributes":[{"value":"/ Remove and return the key-value pair equivalent to `key`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32593,"byte_end":32654,"line_start":607,"line_end":607,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32659,"byte_end":32662,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32667,"byte_end":32733,"line_start":609,"line_end":609,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32738,"byte_end":32799,"line_start":610,"line_end":610,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32804,"byte_end":32861,"line_start":611,"line_end":611,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32866,"byte_end":32869,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32874,"byte_end":32915,"line_start":613,"line_end":613,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32920,"byte_end":32923,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":32928,"byte_end":32968,"line_start":615,"line_end":615,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":505},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":33664,"byte_end":33681,"line_start":636,"line_end":636,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexMap<K, V, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, K, V)>\nwhere Q: Hash + Equivalent<K>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair equivalent to `key` and return it and\n the index it had.","sig":null,"attributes":[{"value":"/ Remove the key-value pair equivalent to `key` and return it and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":33245,"byte_end":33312,"line_start":626,"line_end":626,"column_start":5,"column_end":72}},{"value":"/ the index it had.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":33317,"byte_end":33338,"line_start":627,"line_end":627,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":33343,"byte_end":33346,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":33351,"byte_end":33417,"line_start":629,"line_end":629,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":33422,"byte_end":33483,"line_start":630,"line_end":630,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":33488,"byte_end":33545,"line_start":631,"line_end":631,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":33550,"byte_end":33553,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `key` is not in map.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":33558,"byte_end":33599,"line_start":633,"line_end":633,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":33604,"byte_end":33607,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":33612,"byte_end":33652,"line_start":635,"line_end":635,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":34111,"byte_end":34114,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexMap<K, V, S>>::pop","value":"pub fn pop(&mut Self) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last key-value pair","sig":null,"attributes":[{"value":"/ Remove the last key-value pair","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":33944,"byte_end":33978,"line_start":647,"line_end":647,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":33983,"byte_end":33986,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ This preserves the order of the remaining elements.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":33991,"byte_end":34046,"line_start":649,"line_end":649,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":34051,"byte_end":34054,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":34059,"byte_end":34099,"line_start":651,"line_end":651,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":34457,"byte_end":34463,"line_start":663,"line_end":663,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexMap<K, V, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&K, &mut V) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each key-value pair in the map and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each key-value pair in the map and keep those where the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":34181,"byte_end":34253,"line_start":656,"line_end":656,"column_start":5,"column_end":77}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":34258,"byte_end":34292,"line_start":657,"line_end":657,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":34297,"byte_end":34300,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":34305,"byte_end":34377,"line_start":659,"line_end":659,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":34382,"byte_end":34392,"line_start":660,"line_end":660,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":34397,"byte_end":34400,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":34405,"byte_end":34445,"line_start":662,"line_end":662,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":513},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":34918,"byte_end":34927,"line_start":680,"line_end":680,"column_start":12,"column_end":21},"name":"sort_keys","qualname":"<IndexMap<K, V, S>>::sort_keys","value":"pub fn sort_keys(&mut Self) where K: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs by the default ordering of the keys.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs by the default ordering of the keys.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":34773,"byte_end":34846,"line_start":677,"line_end":677,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":34851,"byte_end":34854,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ See [`sort_by`](Self::sort_by) for details.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":34859,"byte_end":34906,"line_start":679,"line_end":679,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":35517,"byte_end":35524,"line_start":697,"line_end":697,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexMap<K, V, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&K, &V, &K, &V) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the map’s key-value pairs in place using the comparison\n function `cmp`.","sig":null,"attributes":[{"value":"/ Sort the map’s key-value pairs in place using the comparison","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":35102,"byte_end":35168,"line_start":689,"line_end":689,"column_start":5,"column_end":69}},{"value":"/ function `cmp`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":35173,"byte_end":35192,"line_start":690,"line_end":690,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":35197,"byte_end":35200,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ The comparison function receives two key and value pairs to compare (you","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":35205,"byte_end":35281,"line_start":692,"line_end":692,"column_start":5,"column_end":81}},{"value":"/ can sort by keys or values or their combination as needed).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":35286,"byte_end":35349,"line_start":693,"line_end":693,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":35354,"byte_end":35357,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n + c)** time and **O(n)** space where *n* is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":35362,"byte_end":35433,"line_start":695,"line_end":695,"column_start":5,"column_end":76}},{"value":"/ the length of the map and *c* the capacity. The sort is stable.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":35438,"byte_end":35505,"line_start":696,"line_end":696,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":35927,"byte_end":35936,"line_start":710,"line_end":710,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexMap<K, V, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<K, V> where F: FnMut(&K, &V, &K, &V)\n-> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by-value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[{"value":"/ Sort the key-value pairs of the map and return a by-value iterator of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":35761,"byte_end":35834,"line_start":706,"line_end":706,"column_start":5,"column_end":78}},{"value":"/ the key-value pairs with the result.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":35839,"byte_end":35879,"line_start":707,"line_end":707,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":35884,"byte_end":35887,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":35892,"byte_end":35915,"line_start":709,"line_end":709,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":36461,"byte_end":36479,"line_start":725,"line_end":725,"column_start":12,"column_end":30},"name":"sort_unstable_keys","qualname":"<IndexMap<K, V, S>>::sort_unstable_keys","value":"pub fn sort_unstable_keys(&mut Self) where K: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the map's key-value pairs by the default ordering of the keys, but\n may not preserve the order of equal elements.","sig":null,"attributes":[{"value":"/ Sort the map's key-value pairs by the default ordering of the keys, but","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":36242,"byte_end":36317,"line_start":721,"line_end":721,"column_start":5,"column_end":80}},{"value":"/ may not preserve the order of equal elements.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":36322,"byte_end":36371,"line_start":722,"line_end":722,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":36376,"byte_end":36379,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ See [`sort_unstable_by`](Self::sort_unstable_by) for details.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":36384,"byte_end":36449,"line_start":724,"line_end":724,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":37112,"byte_end":37128,"line_start":742,"line_end":742,"column_start":12,"column_end":28},"name":"sort_unstable_by","qualname":"<IndexMap<K, V, S>>::sort_unstable_by","value":"pub fn sort_unstable_by<F>(&mut Self, F) where F: FnMut(&K, &V, &K, &V) ->\nOrdering","parent":null,"children":[],"decl_id":null,"docs":" Sort the map's key-value pairs in place using the comparison function `cmp`, but\n may not preserve the order of equal elements.","sig":null,"attributes":[{"value":"/ Sort the map's key-value pairs in place using the comparison function `cmp`, but","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":36663,"byte_end":36747,"line_start":734,"line_end":734,"column_start":5,"column_end":89}},{"value":"/ may not preserve the order of equal elements.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":36752,"byte_end":36801,"line_start":735,"line_end":735,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":36806,"byte_end":36809,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ The comparison function receives two key and value pairs to compare (you","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":36814,"byte_end":36890,"line_start":737,"line_end":737,"column_start":5,"column_end":81}},{"value":"/ can sort by keys or values or their combination as needed).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":36895,"byte_end":36958,"line_start":738,"line_end":738,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":36963,"byte_end":36966,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n + c)** time where *n* is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":36971,"byte_end":37023,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/ the length of the map and *c* is the capacity. The sort is unstable.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":37028,"byte_end":37100,"line_start":741,"line_end":741,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":37556,"byte_end":37574,"line_start":756,"line_end":756,"column_start":12,"column_end":30},"name":"sorted_unstable_by","qualname":"<IndexMap<K, V, S>>::sorted_unstable_by","value":"pub fn sorted_unstable_by<F>(Self, F) -> IntoIter<K, V> where\nF: FnMut(&K, &V, &K, &V) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the key-value pairs of the map and return a by-value iterator of\n the key-value pairs with the result.","sig":null,"attributes":[{"value":"/ Sort the key-value pairs of the map and return a by-value iterator of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":37374,"byte_end":37447,"line_start":751,"line_end":751,"column_start":5,"column_end":78}},{"value":"/ the key-value pairs with the result.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":37452,"byte_end":37492,"line_start":752,"line_end":752,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":37497,"byte_end":37500,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ The sort is unstable.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":37505,"byte_end":37530,"line_start":754,"line_end":754,"column_start":5,"column_end":30}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":37535,"byte_end":37544,"line_start":755,"line_end":755,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38026,"byte_end":38033,"line_start":770,"line_end":770,"column_start":12,"column_end":19},"name":"reverse","qualname":"<IndexMap<K, V, S>>::reverse","value":"pub fn reverse(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses the order of the map’s key-value pairs in place.","sig":null,"attributes":[{"value":"/ Reverses the order of the map’s key-value pairs in place.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":37889,"byte_end":37952,"line_start":767,"line_end":767,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":37957,"byte_end":37960,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time and **O(1)** space.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":37965,"byte_end":38014,"line_start":769,"line_end":769,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38270,"byte_end":38279,"line_start":781,"line_end":781,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexMap<K, V, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38122,"byte_end":38155,"line_start":776,"line_end":776,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38160,"byte_end":38163,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38168,"byte_end":38215,"line_start":778,"line_end":778,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38220,"byte_end":38223,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38228,"byte_end":38258,"line_start":780,"line_end":780,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38537,"byte_end":38550,"line_start":790,"line_end":790,"column_start":12,"column_end":25},"name":"get_index_mut","qualname":"<IndexMap<K, V, S>>::get_index_mut","value":"pub fn get_index_mut(&mut Self, usize) -> Option<(&mut K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get a key-value pair by index","sig":null,"attributes":[{"value":"/ Get a key-value pair by index","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38389,"byte_end":38422,"line_start":785,"line_end":785,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38427,"byte_end":38430,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38435,"byte_end":38482,"line_start":787,"line_end":787,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38487,"byte_end":38490,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38495,"byte_end":38525,"line_start":789,"line_end":789,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38767,"byte_end":38772,"line_start":797,"line_end":797,"column_start":12,"column_end":17},"name":"first","qualname":"<IndexMap<K, V, S>>::first","value":"pub fn first(&Self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the first key-value pair","sig":null,"attributes":[{"value":"/ Get the first key-value pair","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38680,"byte_end":38712,"line_start":794,"line_end":794,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38717,"byte_end":38720,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38725,"byte_end":38755,"line_start":796,"line_end":796,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38986,"byte_end":38995,"line_start":804,"line_end":804,"column_start":12,"column_end":21},"name":"first_mut","qualname":"<IndexMap<K, V, S>>::first_mut","value":"pub fn first_mut(&mut Self) -> Option<(&K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the first key-value pair, with mutable access to the value","sig":null,"attributes":[{"value":"/ Get the first key-value pair, with mutable access to the value","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38865,"byte_end":38931,"line_start":801,"line_end":801,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38936,"byte_end":38939,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38944,"byte_end":38974,"line_start":803,"line_end":803,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39193,"byte_end":39197,"line_start":811,"line_end":811,"column_start":12,"column_end":16},"name":"last","qualname":"<IndexMap<K, V, S>>::last","value":"pub fn last(&Self) -> Option<(&K, &V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the last key-value pair","sig":null,"attributes":[{"value":"/ Get the last key-value pair","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39107,"byte_end":39138,"line_start":808,"line_end":808,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39143,"byte_end":39146,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39151,"byte_end":39181,"line_start":810,"line_end":810,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":543},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39409,"byte_end":39417,"line_start":818,"line_end":818,"column_start":12,"column_end":20},"name":"last_mut","qualname":"<IndexMap<K, V, S>>::last_mut","value":"pub fn last_mut(&mut Self) -> Option<(&K, &mut V)>","parent":null,"children":[],"decl_id":null,"docs":" Get the last key-value pair, with mutable access to the value","sig":null,"attributes":[{"value":"/ Get the last key-value pair, with mutable access to the value","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39289,"byte_end":39354,"line_start":815,"line_end":815,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39359,"byte_end":39362,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39367,"byte_end":39397,"line_start":817,"line_end":817,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39904,"byte_end":39921,"line_start":831,"line_end":831,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexMap<K, V, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39528,"byte_end":39566,"line_start":822,"line_end":822,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39571,"byte_end":39574,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39579,"byte_end":39626,"line_start":824,"line_end":824,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39631,"byte_end":39634,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the pair is removed by swapping it with the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39639,"byte_end":39711,"line_start":826,"line_end":826,"column_start":5,"column_end":77}},{"value":"/ last element of the map and popping it off. **This perturbs","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39716,"byte_end":39779,"line_start":827,"line_end":827,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39784,"byte_end":39839,"line_start":828,"line_end":828,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39844,"byte_end":39847,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":39852,"byte_end":39892,"line_start":830,"line_end":830,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40391,"byte_end":40409,"line_start":844,"line_end":844,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexMap<K, V, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<(K, V)>","parent":null,"children":[],"decl_id":null,"docs":" Remove the key-value pair by index","sig":null,"attributes":[{"value":"/ Remove the key-value pair by index","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40021,"byte_end":40059,"line_start":835,"line_end":835,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40064,"byte_end":40067,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40072,"byte_end":40119,"line_start":837,"line_end":837,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40124,"byte_end":40127,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the pair is removed by shifting all of the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40132,"byte_end":40198,"line_start":839,"line_end":839,"column_start":5,"column_end":71}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40203,"byte_end":40264,"line_start":840,"line_end":840,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40269,"byte_end":40326,"line_start":841,"line_end":841,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40331,"byte_end":40334,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40339,"byte_end":40379,"line_start":843,"line_end":843,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40949,"byte_end":40959,"line_start":857,"line_end":857,"column_start":12,"column_end":22},"name":"move_index","qualname":"<IndexMap<K, V, S>>::move_index","value":"pub fn move_index(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Moves the position of a key-value pair from one index to another\n by shifting all other pairs in-between.","sig":null,"attributes":[{"value":"/ Moves the position of a key-value pair from one index to another","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40510,"byte_end":40578,"line_start":848,"line_end":848,"column_start":5,"column_end":73}},{"value":"/ by shifting all other pairs in-between.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40583,"byte_end":40626,"line_start":849,"line_end":849,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40631,"byte_end":40634,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ * If `from < to`, the other pairs will shift down while the targeted pair moves up.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40639,"byte_end":40726,"line_start":851,"line_end":851,"column_start":5,"column_end":92}},{"value":"/ * If `from > to`, the other pairs will shift up while the targeted pair moves down.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40731,"byte_end":40818,"line_start":852,"line_end":852,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40823,"byte_end":40826,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `from` or `to` are out of bounds.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40831,"byte_end":40884,"line_start":854,"line_end":854,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40889,"byte_end":40892,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":40897,"byte_end":40937,"line_start":856,"line_end":856,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41178,"byte_end":41190,"line_start":864,"line_end":864,"column_start":12,"column_end":24},"name":"swap_indices","qualname":"<IndexMap<K, V, S>>::swap_indices","value":"pub fn swap_indices(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the position of two key-value pairs in the map.","sig":null,"attributes":[{"value":"/ Swaps the position of two key-value pairs in the map.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41047,"byte_end":41104,"line_start":861,"line_end":861,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41109,"byte_end":41112,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `a` or `b` are out of bounds.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41117,"byte_end":41166,"line_start":863,"line_end":863,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":548},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41527,"byte_end":41531,"line_start":876,"line_end":876,"column_start":12,"column_end":16},"name":"Keys","qualname":"::map::Keys","value":"Keys {  }","parent":null,"children":[{"krate":0,"index":552}],"decl_id":null,"docs":" An iterator over the keys of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the keys of a `IndexMap`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41270,"byte_end":41316,"line_start":869,"line_end":869,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41317,"byte_end":41320,"line_start":870,"line_end":870,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`keys`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41321,"byte_end":41397,"line_start":871,"line_end":871,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41398,"byte_end":41425,"line_start":872,"line_end":872,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41426,"byte_end":41429,"line_start":873,"line_end":873,"column_start":1,"column_end":4}},{"value":"/ [`keys`]: struct.IndexMap.html#method.keys","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41430,"byte_end":41476,"line_start":874,"line_end":874,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41477,"byte_end":41515,"line_start":875,"line_end":875,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":576},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42620,"byte_end":42628,"line_start":920,"line_end":920,"column_start":12,"column_end":20},"name":"IntoKeys","qualname":"::map::IntoKeys","value":"IntoKeys {  }","parent":null,"children":[{"krate":0,"index":579}],"decl_id":null,"docs":" An owning iterator over the keys of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the keys of a `IndexMap`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42341,"byte_end":42394,"line_start":913,"line_end":913,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42395,"byte_end":42398,"line_start":914,"line_end":914,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_keys`] method on [`IndexMap`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42399,"byte_end":42472,"line_start":915,"line_end":915,"column_start":1,"column_end":74}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42473,"byte_end":42508,"line_start":916,"line_end":916,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42509,"byte_end":42512,"line_start":917,"line_end":917,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42513,"byte_end":42551,"line_start":918,"line_end":918,"column_start":1,"column_end":39}},{"value":"/ [`into_keys`]: struct.IndexMap.html#method.into_keys","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42552,"byte_end":42608,"line_start":919,"line_end":919,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":598},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43550,"byte_end":43556,"line_start":956,"line_end":956,"column_start":12,"column_end":18},"name":"Values","qualname":"::map::Values","value":"Values {  }","parent":null,"children":[{"krate":0,"index":602}],"decl_id":null,"docs":" An iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43285,"byte_end":43333,"line_start":949,"line_end":949,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43334,"byte_end":43337,"line_start":950,"line_end":950,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43338,"byte_end":43416,"line_start":951,"line_end":951,"column_start":1,"column_end":79}},{"value":"/ documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43417,"byte_end":43444,"line_start":952,"line_end":952,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43445,"byte_end":43448,"line_start":953,"line_end":953,"column_start":1,"column_end":4}},{"value":"/ [`values`]: struct.IndexMap.html#method.values","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43449,"byte_end":43499,"line_start":954,"line_end":954,"column_start":1,"column_end":51}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43500,"byte_end":43538,"line_start":955,"line_end":955,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":626},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44668,"byte_end":44677,"line_start":1000,"line_end":1000,"column_start":12,"column_end":21},"name":"ValuesMut","qualname":"::map::ValuesMut","value":"ValuesMut {  }","parent":null,"children":[{"krate":0,"index":630}],"decl_id":null,"docs":" A mutable iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44384,"byte_end":44439,"line_start":993,"line_end":993,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44440,"byte_end":44443,"line_start":994,"line_end":994,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`values_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44444,"byte_end":44526,"line_start":995,"line_end":995,"column_start":1,"column_end":83}},{"value":"/ documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44527,"byte_end":44554,"line_start":996,"line_end":996,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44555,"byte_end":44558,"line_start":997,"line_end":997,"column_start":1,"column_end":4}},{"value":"/ [`values_mut`]: struct.IndexMap.html#method.values_mut","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44559,"byte_end":44617,"line_start":998,"line_end":998,"column_start":1,"column_end":59}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44618,"byte_end":44656,"line_start":999,"line_end":999,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":650},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45679,"byte_end":45689,"line_start":1036,"line_end":1036,"column_start":12,"column_end":22},"name":"IntoValues","qualname":"::map::IntoValues","value":"IntoValues {  }","parent":null,"children":[{"krate":0,"index":653}],"decl_id":null,"docs":" An owning iterator over the values of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the values of a `IndexMap`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45392,"byte_end":45447,"line_start":1029,"line_end":1029,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45448,"byte_end":45451,"line_start":1030,"line_end":1030,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_values`] method on [`IndexMap`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45452,"byte_end":45527,"line_start":1031,"line_end":1031,"column_start":1,"column_end":76}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45528,"byte_end":45563,"line_start":1032,"line_end":1032,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45564,"byte_end":45567,"line_start":1033,"line_end":1033,"column_start":1,"column_end":4}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45568,"byte_end":45606,"line_start":1034,"line_end":1034,"column_start":1,"column_end":39}},{"value":"/ [`into_values`]: struct.IndexMap.html#method.into_values","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45607,"byte_end":45667,"line_start":1035,"line_end":1035,"column_start":1,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":672},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46622,"byte_end":46626,"line_start":1072,"line_end":1072,"column_start":12,"column_end":16},"name":"Iter","qualname":"::map::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":676}],"decl_id":null,"docs":" An iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46362,"byte_end":46411,"line_start":1065,"line_end":1065,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46412,"byte_end":46415,"line_start":1066,"line_end":1066,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46416,"byte_end":46492,"line_start":1067,"line_end":1067,"column_start":1,"column_end":77}},{"value":"/ documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46493,"byte_end":46520,"line_start":1068,"line_end":1068,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46521,"byte_end":46524,"line_start":1069,"line_end":1069,"column_start":1,"column_end":4}},{"value":"/ [`iter`]: struct.IndexMap.html#method.iter","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46525,"byte_end":46571,"line_start":1070,"line_end":1070,"column_start":1,"column_end":47}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46572,"byte_end":46610,"line_start":1071,"line_end":1071,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":700},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47730,"byte_end":47737,"line_start":1116,"line_end":1116,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::map::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":704}],"decl_id":null,"docs":" A mutable iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A mutable iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47451,"byte_end":47507,"line_start":1109,"line_end":1109,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47508,"byte_end":47511,"line_start":1110,"line_end":1110,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter_mut`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47512,"byte_end":47592,"line_start":1111,"line_end":1111,"column_start":1,"column_end":81}},{"value":"/ documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47593,"byte_end":47620,"line_start":1112,"line_end":1112,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47621,"byte_end":47624,"line_start":1113,"line_end":1113,"column_start":1,"column_end":4}},{"value":"/ [`iter_mut`]: struct.IndexMap.html#method.iter_mut","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47625,"byte_end":47679,"line_start":1114,"line_end":1114,"column_start":1,"column_end":55}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47680,"byte_end":47718,"line_start":1115,"line_end":1115,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":724},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48775,"byte_end":48783,"line_start":1152,"line_end":1152,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::map::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":727}],"decl_id":null,"docs":" An owning iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ An owning iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48454,"byte_end":48510,"line_start":1145,"line_end":1145,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48511,"byte_end":48514,"line_start":1146,"line_end":1146,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexMap`]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48515,"byte_end":48587,"line_start":1147,"line_end":1147,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48588,"byte_end":48663,"line_start":1148,"line_end":1148,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48664,"byte_end":48667,"line_start":1149,"line_end":1149,"column_start":1,"column_end":4}},{"value":"/ [`into_iter`]: struct.IndexMap.html#method.into_iter","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48668,"byte_end":48724,"line_start":1150,"line_end":1150,"column_start":1,"column_end":57}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48725,"byte_end":48763,"line_start":1151,"line_end":1151,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":746},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49737,"byte_end":49742,"line_start":1188,"line_end":1188,"column_start":12,"column_end":17},"name":"Drain","qualname":"::map::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":750}],"decl_id":null,"docs":" A draining iterator over the entries of a `IndexMap`.","sig":null,"attributes":[{"value":"/ A draining iterator over the entries of a `IndexMap`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49466,"byte_end":49523,"line_start":1181,"line_end":1181,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49524,"byte_end":49527,"line_start":1182,"line_end":1182,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexMap`]. See its","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49528,"byte_end":49605,"line_start":1183,"line_end":1183,"column_start":1,"column_end":78}},{"value":"/ documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49606,"byte_end":49633,"line_start":1184,"line_end":1184,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49634,"byte_end":49637,"line_start":1185,"line_end":1185,"column_start":1,"column_end":4}},{"value":"/ [`drain`]: struct.IndexMap.html#method.drain","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49638,"byte_end":49686,"line_start":1186,"line_end":1186,"column_start":1,"column_end":49}},{"value":"/ [`IndexMap`]: struct.IndexMap.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49687,"byte_end":49725,"line_start":1187,"line_end":1187,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":862},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"set","qualname":"::set","value":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":927},{"krate":0,"index":931},{"krate":0,"index":936},{"krate":0,"index":945},{"krate":0,"index":949},{"krate":0,"index":953},{"krate":0,"index":968},{"krate":0,"index":1042},{"krate":0,"index":1054},{"krate":0,"index":1059},{"krate":0,"index":1062},{"krate":0,"index":1065},{"krate":0,"index":1067},{"krate":0,"index":1070},{"krate":0,"index":1072},{"krate":0,"index":1075},{"krate":0,"index":1079},{"krate":0,"index":1083},{"krate":0,"index":1085},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1100},{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1110},{"krate":0,"index":1113},{"krate":0,"index":1120},{"krate":0,"index":1126},{"krate":0,"index":1132},{"krate":0,"index":1138},{"krate":0,"index":1144},{"krate":0,"index":1150},{"krate":0,"index":1154},{"krate":0,"index":1159},{"krate":0,"index":1162},{"krate":0,"index":1174},{"krate":0,"index":1180},{"krate":0,"index":1187},{"krate":0,"index":1191},{"krate":0,"index":1194},{"krate":0,"index":1198},{"krate":0,"index":1202},{"krate":0,"index":1208},{"krate":0,"index":1215},{"krate":0,"index":1219},{"krate":0,"index":1222},{"krate":0,"index":1226},{"krate":0,"index":1230},{"krate":0,"index":1236},{"krate":0,"index":1247},{"krate":0,"index":1255},{"krate":0,"index":1259},{"krate":0,"index":1264},{"krate":0,"index":1269},{"krate":0,"index":1274},{"krate":0,"index":1284},{"krate":0,"index":1291},{"krate":0,"index":1294},{"krate":0,"index":1298},{"krate":0,"index":1302},{"krate":0,"index":1308},{"krate":0,"index":1314},{"krate":0,"index":1320}],"decl_id":null,"docs":" A hash set implemented using `IndexMap`\n","sig":null,"attributes":[{"value":"/ A hash set implemented using `IndexMap`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":102145,"byte_end":102188,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":927},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":104235,"byte_end":104243,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"IndexSet","qualname":"::set::IndexSet","value":"IndexSet {  }","parent":null,"children":[{"krate":0,"index":930}],"decl_id":null,"docs":" A hash set where the iteration order of the values is independent of their\n hash values.","sig":null,"attributes":[{"value":"/ A hash set where the iteration order of the values is independent of their","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":102629,"byte_end":102707,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ hash values.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":102708,"byte_end":102724,"line_start":22,"line_end":22,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":102725,"byte_end":102728,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The interface is closely compatible with the standard `HashSet`, but also","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":102729,"byte_end":102806,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ has additional features.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":102807,"byte_end":102835,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":102836,"byte_end":102839,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Order","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":102840,"byte_end":102851,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":102852,"byte_end":102855,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The values have a consistent order that is determined by the sequence of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":102856,"byte_end":102932,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ insertion and removal calls on the set. The order does not depend on the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":102933,"byte_end":103009,"line_start":30,"line_end":30,"column_start":1,"column_end":77}},{"value":"/ values or the hash function at all. Note that insertion order and value","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103010,"byte_end":103085,"line_start":31,"line_end":31,"column_start":1,"column_end":76}},{"value":"/ are not affected if a re-insertion is attempted once an element is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103086,"byte_end":103156,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ already present.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103157,"byte_end":103177,"line_start":33,"line_end":33,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103178,"byte_end":103181,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ All iterators traverse the set *in order*.  Set operation iterators like","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103182,"byte_end":103258,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ `union` produce a concatenated order, as do their matching \"bitwise\"","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103259,"byte_end":103331,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ operators.  See their documentation for specifics.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103332,"byte_end":103386,"line_start":37,"line_end":37,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103387,"byte_end":103390,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ The insertion order is preserved, with **notable exceptions** like the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103391,"byte_end":103465,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ `.remove()` or `.swap_remove()` methods. Methods such as `.sort_by()` of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103466,"byte_end":103542,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ course result in a new order, depending on the sorting order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103543,"byte_end":103608,"line_start":41,"line_end":41,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103609,"byte_end":103612,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ # Indices","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103613,"byte_end":103626,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103627,"byte_end":103630,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The values are indexed in a compact range without holes in the range","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103631,"byte_end":103703,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ `0..self.len()`. For example, the method `.get_full` looks up the index for","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103704,"byte_end":103783,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ a value, and the method `.get_index` looks up the value by index.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103784,"byte_end":103853,"line_start":47,"line_end":47,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103854,"byte_end":103857,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103858,"byte_end":103872,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103873,"byte_end":103876,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103877,"byte_end":103884,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/ use indexmap::IndexSet;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103885,"byte_end":103912,"line_start":52,"line_end":52,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103913,"byte_end":103916,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ // Collects which letters appear in a sentence.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103917,"byte_end":103968,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/ let letters: IndexSet<_> = \"a short treatise on fungi\".chars().collect();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":103969,"byte_end":104046,"line_start":55,"line_end":55,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":104047,"byte_end":104050,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ assert!(letters.contains(&'s'));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":104051,"byte_end":104087,"line_start":57,"line_end":57,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'t'));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":104088,"byte_end":104124,"line_start":58,"line_end":58,"column_start":1,"column_end":37}},{"value":"/ assert!(letters.contains(&'u'));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":104125,"byte_end":104161,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/ assert!(!letters.contains(&'y'));","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":104162,"byte_end":104199,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":104200,"byte_end":104207,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"cfg(has_std)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":104208,"byte_end":104223,"line_start":62,"line_end":62,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":105687,"byte_end":105690,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<IndexSet<T>>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set. (Does not allocate.)\n","sig":null,"attributes":[{"value":"/ Create a new set. (Does not allocate.)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":105633,"byte_end":105675,"line_start":129,"line_end":129,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":952},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":105928,"byte_end":105941,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<IndexSet<T>>::with_capacity","value":"pub fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":105777,"byte_end":105829,"line_start":136,"line_end":136,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":105834,"byte_end":105873,"line_start":137,"line_end":137,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":105878,"byte_end":105881,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":105886,"byte_end":105916,"line_start":139,"line_end":139,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106228,"byte_end":106252,"line_start":152,"line_end":152,"column_start":12,"column_end":36},"name":"with_capacity_and_hasher","qualname":"<IndexSet<T, S>>::with_capacity_and_hasher","value":"pub fn with_capacity_and_hasher(usize, S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with capacity for `n` elements.\n (Does not allocate if `n` is zero.)","sig":null,"attributes":[{"value":"/ Create a new set with capacity for `n` elements.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106077,"byte_end":106129,"line_start":148,"line_end":148,"column_start":5,"column_end":57}},{"value":"/ (Does not allocate if `n` is zero.)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106134,"byte_end":106173,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106178,"byte_end":106181,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106186,"byte_end":106216,"line_start":151,"line_end":151,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106551,"byte_end":106562,"line_start":162,"line_end":162,"column_start":18,"column_end":29},"name":"with_hasher","qualname":"<IndexSet<T, S>>::with_hasher","value":"pub const fn with_hasher(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new set with `hash_builder`.","sig":null,"attributes":[{"value":"/ Create a new set with `hash_builder`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106400,"byte_end":106441,"line_start":158,"line_end":158,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106446,"byte_end":106449,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This function is `const`, so it","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106454,"byte_end":106489,"line_start":160,"line_end":160,"column_start":5,"column_end":40}},{"value":"/ can be called in `static` contexts.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106494,"byte_end":106533,"line_start":161,"line_end":161,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106726,"byte_end":106734,"line_start":169,"line_end":169,"column_start":12,"column_end":20},"name":"capacity","qualname":"<IndexSet<T, S>>::capacity","value":"pub fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes in **O(1)** time.\n","sig":null,"attributes":[{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106684,"byte_end":106714,"line_start":168,"line_end":168,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106854,"byte_end":106860,"line_start":174,"line_end":174,"column_start":12,"column_end":18},"name":"hasher","qualname":"<IndexSet<T, S>>::hasher","value":"pub fn hasher(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the set's `BuildHasher`.\n","sig":null,"attributes":[{"value":"/ Return a reference to the set's `BuildHasher`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106792,"byte_end":106842,"line_start":173,"line_end":173,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":960},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107013,"byte_end":107016,"line_start":181,"line_end":181,"column_start":12,"column_end":15},"name":"len","qualname":"<IndexSet<T, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements in the set.","sig":null,"attributes":[{"value":"/ Return the number of elements in the set.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106913,"byte_end":106958,"line_start":178,"line_end":178,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106963,"byte_end":106966,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106971,"byte_end":107001,"line_start":180,"line_end":180,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107173,"byte_end":107181,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<IndexSet<T, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the set contains no elements.","sig":null,"attributes":[{"value":"/ Returns true if the set contains no elements.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107069,"byte_end":107118,"line_start":185,"line_end":185,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107123,"byte_end":107126,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107131,"byte_end":107161,"line_start":187,"line_end":187,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":962},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107315,"byte_end":107319,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"iter","qualname":"<IndexSet<T, S>>::iter","value":"pub fn iter(&Self) -> Iter<, T>","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values of the set, in their order\n","sig":null,"attributes":[{"value":"/ Return an iterator over the values of the set, in their order","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107238,"byte_end":107303,"line_start":192,"line_end":192,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":963},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107549,"byte_end":107554,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"clear","qualname":"<IndexSet<T, S>>::clear","value":"pub fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements in the set, while preserving its capacity.","sig":null,"attributes":[{"value":"/ Remove all elements in the set, while preserving its capacity.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107428,"byte_end":107494,"line_start":199,"line_end":199,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107499,"byte_end":107502,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107507,"byte_end":107537,"line_start":201,"line_end":201,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107781,"byte_end":107789,"line_start":209,"line_end":209,"column_start":12,"column_end":20},"name":"truncate","qualname":"<IndexSet<T, S>>::truncate","value":"pub fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the set, keeping the first `len` elements and dropping the rest.","sig":null,"attributes":[{"value":"/ Shortens the set, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107605,"byte_end":107682,"line_start":206,"line_end":206,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107687,"byte_end":107690,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the set's current length, this has no effect.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107695,"byte_end":107769,"line_start":208,"line_end":208,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108531,"byte_end":108536,"line_start":226,"line_end":226,"column_start":12,"column_end":17},"name":"drain","qualname":"<IndexSet<T, S>>::drain","value":"pub fn drain<R>(&mut Self, R) -> Drain<, T> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Clears the `IndexSet` in the given index range, returning those values\n as a drain iterator.","sig":null,"attributes":[{"value":"/ Clears the `IndexSet` in the given index range, returning those values","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107858,"byte_end":107932,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ as a drain iterator.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107937,"byte_end":107961,"line_start":214,"line_end":214,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107966,"byte_end":107969,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ The range may be any type that implements `RangeBounds<usize>`,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":107974,"byte_end":108041,"line_start":216,"line_end":216,"column_start":5,"column_end":72}},{"value":"/ including all of the `std::ops::Range*` types, or even a tuple pair of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108046,"byte_end":108120,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ `Bound` start and end values. To drain the set entirely, use `RangeFull`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108125,"byte_end":108201,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ like `set.drain(..)`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108206,"byte_end":108231,"line_start":219,"line_end":219,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108236,"byte_end":108239,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ This shifts down all entries following the drained range to fill the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108244,"byte_end":108316,"line_start":221,"line_end":221,"column_start":5,"column_end":77}},{"value":"/ gap, and keeps the allocated memory for reuse.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108321,"byte_end":108371,"line_start":222,"line_end":222,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108376,"byte_end":108379,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if the starting point is greater than the end point or if","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108384,"byte_end":108458,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/ the end point is greater than the length of the set.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108463,"byte_end":108519,"line_start":225,"line_end":225,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109047,"byte_end":109056,"line_start":242,"line_end":242,"column_start":12,"column_end":21},"name":"split_off","qualname":"<IndexSet<T, S>>::split_off","value":"pub fn split_off(&mut Self, usize) -> Self where S: Clone","parent":null,"children":[],"decl_id":null,"docs":" Splits the collection into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the collection into two at the given index.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108707,"byte_end":108761,"line_start":235,"line_end":235,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108766,"byte_end":108769,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ Returns a newly allocated set containing the elements in the range","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108774,"byte_end":108844,"line_start":237,"line_end":237,"column_start":5,"column_end":75}},{"value":"/ `[at, len)`. After the call, the original set will be left containing","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108849,"byte_end":108922,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ the elements `[0, at)` with its previous capacity unchanged.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108927,"byte_end":108991,"line_start":239,"line_end":239,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":108996,"byte_end":108999,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `at > len`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109004,"byte_end":109035,"line_start":241,"line_end":241,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109377,"byte_end":109384,"line_start":260,"line_end":260,"column_start":12,"column_end":19},"name":"reserve","qualname":"<IndexSet<T, S>>::reserve","value":"pub fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more values.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more values.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109272,"byte_end":109322,"line_start":257,"line_end":257,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109327,"byte_end":109330,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109335,"byte_end":109365,"line_start":259,"line_end":259,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109576,"byte_end":109589,"line_start":267,"line_end":267,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<IndexSet<T, S>>::shrink_to_fit","value":"pub fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the set as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the set as much as possible.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109466,"byte_end":109521,"line_start":264,"line_end":264,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109526,"byte_end":109529,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109534,"byte_end":109564,"line_start":266,"line_end":266,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109757,"byte_end":109766,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<IndexSet<T, S>>::shrink_to","value":"pub fn shrink_to(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the set with a lower limit.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the set with a lower limit.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109648,"byte_end":109702,"line_start":271,"line_end":271,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109707,"byte_end":109710,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109715,"byte_end":109745,"line_start":273,"line_end":273,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":110206,"byte_end":110212,"line_start":286,"line_end":286,"column_start":12,"column_end":18},"name":"insert","qualname":"<IndexSet<T, S>>::insert","value":"pub fn insert(&mut Self, T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set.","sig":null,"attributes":[{"value":"/ Insert the value into the set.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109854,"byte_end":109888,"line_start":278,"line_end":278,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109893,"byte_end":109896,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109901,"byte_end":109964,"line_start":280,"line_end":280,"column_start":5,"column_end":68}},{"value":"/ `false` leaving the original value in the set and without","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109969,"byte_end":110030,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/ altering its insertion order. Otherwise, it inserts the new","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":110035,"byte_end":110098,"line_start":282,"line_end":282,"column_start":5,"column_end":68}},{"value":"/ item and returns `true`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":110103,"byte_end":110131,"line_start":283,"line_end":283,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":110136,"byte_end":110139,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":110144,"byte_end":110194,"line_start":285,"line_end":285,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":110750,"byte_end":110761,"line_start":299,"line_end":299,"column_start":12,"column_end":23},"name":"insert_full","qualname":"<IndexSet<T, S>>::insert_full","value":"pub fn insert_full(&mut Self, T) -> (usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Insert the value into the set, and get its index.","sig":null,"attributes":[{"value":"/ Insert the value into the set, and get its index.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":110300,"byte_end":110353,"line_start":290,"line_end":290,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":110358,"byte_end":110361,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ If an equivalent item already exists in the set, it returns","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":110366,"byte_end":110429,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/ the index of the existing item and `false`, leaving the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":110434,"byte_end":110493,"line_start":293,"line_end":293,"column_start":5,"column_end":64}},{"value":"/ original value in the set and without altering its insertion","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":110498,"byte_end":110562,"line_start":294,"line_end":294,"column_start":5,"column_end":69}},{"value":"/ order. Otherwise, it inserts the new item and returns the index","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":110567,"byte_end":110634,"line_start":295,"line_end":295,"column_start":5,"column_end":72}},{"value":"/ of the inserted item and `true`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":110639,"byte_end":110675,"line_start":296,"line_end":296,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":110680,"byte_end":110683,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (amortized average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":110688,"byte_end":110738,"line_start":298,"line_end":298,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":111251,"byte_end":111261,"line_start":315,"line_end":315,"column_start":12,"column_end":22},"name":"difference","qualname":"<IndexSet<T, S>>::difference","value":"pub fn difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Difference where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` but not `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` but not `other`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":111083,"byte_end":111157,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":111162,"byte_end":111165,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":111170,"byte_end":111239,"line_start":314,"line_end":314,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":111710,"byte_end":111730,"line_start":330,"line_end":330,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<IndexSet<T, S>>::symmetric_difference","value":"pub fn symmetric_difference<'a, S2>(&'a Self, &'a IndexSet<T, S2>)\n-> SymmetricDifference where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in `self` or `other`,\n but not in both.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in `self` or `other`,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":111466,"byte_end":111535,"line_start":325,"line_end":325,"column_start":5,"column_end":74}},{"value":"/ but not in both.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":111540,"byte_end":111560,"line_start":326,"line_end":326,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":111565,"byte_end":111568,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":111573,"byte_end":111645,"line_start":328,"line_end":328,"column_start":5,"column_end":77}},{"value":"/ values from `other` in their original order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":111650,"byte_end":111698,"line_start":329,"line_end":329,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":112170,"byte_end":112182,"line_start":345,"line_end":345,"column_start":12,"column_end":24},"name":"intersection","qualname":"<IndexSet<T, S>>::intersection","value":"pub fn intersection<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Intersection\nwhere S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over the values that are in both `self` and `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over the values that are in both `self` and `other`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":112001,"byte_end":112076,"line_start":342,"line_end":342,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":112081,"byte_end":112084,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Values are produced in the same order that they appear in `self`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":112089,"byte_end":112158,"line_start":344,"line_end":344,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":112624,"byte_end":112629,"line_start":359,"line_end":359,"column_start":12,"column_end":17},"name":"union","qualname":"<IndexSet<T, S>>::union","value":"pub fn union<'a, S2>(&'a Self, &'a IndexSet<T, S2>) -> Union where\nS2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all values that are in `self` or `other`.","sig":null,"attributes":[{"value":"/ Return an iterator over all values that are in `self` or `other`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":112391,"byte_end":112460,"line_start":355,"line_end":355,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":112465,"byte_end":112468,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Values from `self` are produced in their original order, followed by","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":112473,"byte_end":112545,"line_start":357,"line_end":357,"column_start":5,"column_end":77}},{"value":"/ values that are unique to `other` in their original order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":112550,"byte_end":112612,"line_start":358,"line_end":358,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":112963,"byte_end":112971,"line_start":371,"line_end":371,"column_start":12,"column_end":20},"name":"contains","qualname":"<IndexSet<T, S>>::contains","value":"pub fn contains<Q: ?Sized>(&Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return `true` if an equivalent to `value` exists in the set.","sig":null,"attributes":[{"value":"/ Return `true` if an equivalent to `value` exists in the set.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":112834,"byte_end":112898,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":112903,"byte_end":112906,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":112911,"byte_end":112951,"line_start":370,"line_end":370,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":113264,"byte_end":113267,"line_start":382,"line_end":382,"column_start":12,"column_end":15},"name":"get","qualname":"<IndexSet<T, S>>::get","value":"pub fn get<Q: ?Sized>(&Self, &Q) -> Option<&T> where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to the value stored in the set, if it is present,\n else `None`.","sig":null,"attributes":[{"value":"/ Return a reference to the value stored in the set, if it is present,","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":113106,"byte_end":113178,"line_start":378,"line_end":378,"column_start":5,"column_end":77}},{"value":"/ else `None`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":113183,"byte_end":113199,"line_start":379,"line_end":379,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":113204,"byte_end":113207,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":113212,"byte_end":113252,"line_start":381,"line_end":381,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":113470,"byte_end":113478,"line_start":390,"line_end":390,"column_start":12,"column_end":20},"name":"get_full","qualname":"<IndexSet<T, S>>::get_full","value":"pub fn get_full<Q: ?Sized>(&Self, &Q) -> Option<(usize, &T)> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return item index and value\n","sig":null,"attributes":[{"value":"/ Return item index and value","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":113427,"byte_end":113458,"line_start":389,"line_end":389,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":113708,"byte_end":113720,"line_start":398,"line_end":398,"column_start":12,"column_end":24},"name":"get_index_of","qualname":"<IndexSet<T, S>>::get_index_of","value":"pub fn get_index_of<Q: ?Sized>(&Self, &Q) -> Option<usize> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Return item index, if it exists in the set\n","sig":null,"attributes":[{"value":"/ Return item index, if it exists in the set","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":113650,"byte_end":113696,"line_start":397,"line_end":397,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":114109,"byte_end":114116,"line_start":410,"line_end":410,"column_start":12,"column_end":19},"name":"replace","qualname":"<IndexSet<T, S>>::replace","value":"pub fn replace(&mut Self, T) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is\n equal to the given one, without altering its insertion order. Returns\n the replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":113864,"byte_end":113938,"line_start":405,"line_end":405,"column_start":5,"column_end":79}},{"value":"/ equal to the given one, without altering its insertion order. Returns","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":113943,"byte_end":114016,"line_start":406,"line_end":406,"column_start":5,"column_end":78}},{"value":"/ the replaced value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":114021,"byte_end":114044,"line_start":407,"line_end":407,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":114049,"byte_end":114052,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":114057,"byte_end":114097,"line_start":409,"line_end":409,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1000},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":114470,"byte_end":114482,"line_start":419,"line_end":419,"column_start":12,"column_end":24},"name":"replace_full","qualname":"<IndexSet<T, S>>::replace_full","value":"pub fn replace_full(&mut Self, T) -> (usize, Option<T>)","parent":null,"children":[],"decl_id":null,"docs":" Adds a value to the set, replacing the existing value, if any, that is\n equal to the given one, without altering its insertion order. Returns\n the index of the item and its replaced value.","sig":null,"attributes":[{"value":"/ Adds a value to the set, replacing the existing value, if any, that is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":114199,"byte_end":114273,"line_start":414,"line_end":414,"column_start":5,"column_end":79}},{"value":"/ equal to the given one, without altering its insertion order. Returns","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":114278,"byte_end":114351,"line_start":415,"line_end":415,"column_start":5,"column_end":78}},{"value":"/ the index of the item and its replaced value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":114356,"byte_end":114405,"line_start":416,"line_end":416,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":114410,"byte_end":114413,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":114418,"byte_end":114458,"line_start":418,"line_end":418,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115128,"byte_end":115134,"line_start":438,"line_end":438,"column_start":12,"column_end":18},"name":"remove","qualname":"<IndexSet<T, S>>::remove","value":"pub fn remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":114825,"byte_end":114896,"line_start":432,"line_end":432,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":114901,"byte_end":114904,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_remove(value)`, if you want","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":114909,"byte_end":114979,"line_start":434,"line_end":434,"column_start":5,"column_end":75}},{"value":"/ to preserve the order of the values in the set, use `.shift_remove(value)`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":114984,"byte_end":115063,"line_start":435,"line_end":435,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115068,"byte_end":115071,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115076,"byte_end":115116,"line_start":437,"line_end":437,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115680,"byte_end":115691,"line_start":454,"line_end":454,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<IndexSet<T, S>>::swap_remove","value":"pub fn swap_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115268,"byte_end":115339,"line_start":445,"line_end":445,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115344,"byte_end":115347,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115352,"byte_end":115425,"line_start":447,"line_end":447,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115430,"byte_end":115493,"line_start":448,"line_end":448,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115498,"byte_end":115553,"line_start":449,"line_end":449,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115558,"byte_end":115561,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115566,"byte_end":115615,"line_start":451,"line_end":451,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115620,"byte_end":115623,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115628,"byte_end":115668,"line_start":453,"line_end":453,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116245,"byte_end":116257,"line_start":470,"line_end":470,"column_start":12,"column_end":24},"name":"shift_remove","qualname":"<IndexSet<T, S>>::shift_remove","value":"pub fn shift_remove<Q: ?Sized>(&mut Self, &Q) -> bool where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set, and return `true` if it was present.","sig":null,"attributes":[{"value":"/ Remove the value from the set, and return `true` if it was present.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115839,"byte_end":115910,"line_start":461,"line_end":461,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115915,"byte_end":115918,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115923,"byte_end":115990,"line_start":463,"line_end":463,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":115995,"byte_end":116056,"line_start":464,"line_end":464,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116061,"byte_end":116118,"line_start":465,"line_end":465,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116123,"byte_end":116126,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Return `false` if `value` was not in the set.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116131,"byte_end":116180,"line_start":467,"line_end":467,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116185,"byte_end":116188,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116193,"byte_end":116233,"line_start":469,"line_end":469,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116743,"byte_end":116747,"line_start":485,"line_end":485,"column_start":12,"column_end":16},"name":"take","qualname":"<IndexSet<T, S>>::take","value":"pub fn take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116406,"byte_end":116480,"line_start":477,"line_end":477,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116485,"byte_end":116499,"line_start":478,"line_end":478,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116504,"byte_end":116507,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ **NOTE:** This is equivalent to `.swap_take(value)`, if you need to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116512,"byte_end":116583,"line_start":480,"line_end":480,"column_start":5,"column_end":76}},{"value":"/ preserve the order of the values in the set, use `.shift_take(value)`","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116588,"byte_end":116661,"line_start":481,"line_end":481,"column_start":5,"column_end":78}},{"value":"/ instead.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116666,"byte_end":116678,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116683,"byte_end":116686,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116691,"byte_end":116731,"line_start":484,"line_end":484,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117317,"byte_end":117326,"line_start":502,"line_end":502,"column_start":12,"column_end":21},"name":"swap_take","qualname":"<IndexSet<T, S>>::swap_take","value":"pub fn swap_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116884,"byte_end":116958,"line_start":492,"line_end":492,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116963,"byte_end":116977,"line_start":493,"line_end":493,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116982,"byte_end":116985,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":116990,"byte_end":117063,"line_start":495,"line_end":495,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117068,"byte_end":117131,"line_start":496,"line_end":496,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117136,"byte_end":117191,"line_start":497,"line_end":497,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117196,"byte_end":117199,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117204,"byte_end":117252,"line_start":499,"line_end":499,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117257,"byte_end":117260,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117265,"byte_end":117305,"line_start":501,"line_end":501,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117919,"byte_end":117929,"line_start":519,"line_end":519,"column_start":12,"column_end":22},"name":"shift_take","qualname":"<IndexSet<T, S>>::shift_take","value":"pub fn shift_take<Q: ?Sized>(&mut Self, &Q) -> Option<T> where Q: Hash +\nEquivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the value in the set, if any, that is equal to the\n given one.","sig":null,"attributes":[{"value":"/ Removes and returns the value in the set, if any, that is equal to the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117492,"byte_end":117566,"line_start":509,"line_end":509,"column_start":5,"column_end":79}},{"value":"/ given one.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117571,"byte_end":117585,"line_start":510,"line_end":510,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117590,"byte_end":117593,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117598,"byte_end":117665,"line_start":512,"line_end":512,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117670,"byte_end":117731,"line_start":513,"line_end":513,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117736,"byte_end":117793,"line_start":514,"line_end":514,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117798,"byte_end":117801,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117806,"byte_end":117854,"line_start":516,"line_end":516,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117859,"byte_end":117862,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":117867,"byte_end":117907,"line_start":518,"line_end":518,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1016},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118448,"byte_end":118464,"line_start":533,"line_end":533,"column_start":12,"column_end":28},"name":"swap_remove_full","qualname":"<IndexSet<T, S>>::swap_remove_full","value":"pub fn swap_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118096,"byte_end":118161,"line_start":526,"line_end":526,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118166,"byte_end":118169,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118174,"byte_end":118247,"line_start":528,"line_end":528,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118252,"byte_end":118315,"line_start":529,"line_end":529,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118320,"byte_end":118375,"line_start":530,"line_end":530,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118380,"byte_end":118383,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118388,"byte_end":118436,"line_start":532,"line_end":532,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118992,"byte_end":119009,"line_start":547,"line_end":547,"column_start":12,"column_end":29},"name":"shift_remove_full","qualname":"<IndexSet<T, S>>::shift_remove_full","value":"pub fn shift_remove_full<Q: ?Sized>(&mut Self, &Q) -> Option<(usize, T)> where\nQ: Hash + Equivalent<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value from the set return it and the index it had.","sig":null,"attributes":[{"value":"/ Remove the value from the set return it and the index it had.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118646,"byte_end":118711,"line_start":540,"line_end":540,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118716,"byte_end":118719,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118724,"byte_end":118791,"line_start":542,"line_end":542,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118796,"byte_end":118857,"line_start":543,"line_end":543,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118862,"byte_end":118919,"line_start":544,"line_end":544,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118924,"byte_end":118927,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ Return `None` if `value` was not in the set.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":118932,"byte_end":118980,"line_start":546,"line_end":546,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119350,"byte_end":119353,"line_start":559,"line_end":559,"column_start":12,"column_end":15},"name":"pop","qualname":"<IndexSet<T, S>>::pop","value":"pub fn pop(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the last value","sig":null,"attributes":[{"value":"/ Remove the last value","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119192,"byte_end":119217,"line_start":554,"line_end":554,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119222,"byte_end":119225,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ This preserves the order of the remaining elements.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119230,"byte_end":119285,"line_start":556,"line_end":556,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119290,"byte_end":119293,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119298,"byte_end":119338,"line_start":558,"line_end":558,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119698,"byte_end":119704,"line_start":570,"line_end":570,"column_start":12,"column_end":18},"name":"retain","qualname":"<IndexSet<T, S>>::retain","value":"pub fn retain<F>(&mut Self, F) where F: FnMut(&T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Scan through each value in the set and keep those where the\n closure `keep` returns `true`.","sig":null,"attributes":[{"value":"/ Scan through each value in the set and keep those where the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119431,"byte_end":119494,"line_start":563,"line_end":563,"column_start":5,"column_end":68}},{"value":"/ closure `keep` returns `true`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119499,"byte_end":119533,"line_start":564,"line_end":564,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119538,"byte_end":119541,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ The elements are visited in order, and remaining elements keep their","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119546,"byte_end":119618,"line_start":566,"line_end":566,"column_start":5,"column_end":77}},{"value":"/ order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119623,"byte_end":119633,"line_start":567,"line_end":567,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119638,"byte_end":119641,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119646,"byte_end":119686,"line_start":569,"line_end":569,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119966,"byte_end":119970,"line_start":580,"line_end":580,"column_start":12,"column_end":16},"name":"sort","qualname":"<IndexSet<T, S>>::sort","value":"pub fn sort(&mut Self) where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values by their default ordering.","sig":null,"attributes":[{"value":"/ Sort the set’s values by their default ordering.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119840,"byte_end":119894,"line_start":577,"line_end":577,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119899,"byte_end":119902,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ See [`sort_by`](Self::sort_by) for details.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":119907,"byte_end":119954,"line_start":579,"line_end":579,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":120227,"byte_end":120234,"line_start":590,"line_end":590,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<IndexSet<T, S>>::sort_by","value":"pub fn sort_by<F>(&mut Self, F) where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the set’s values in place using the comparison function `cmp`.","sig":null,"attributes":[{"value":"/ Sort the set’s values in place using the comparison function `cmp`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":120054,"byte_end":120127,"line_start":587,"line_end":587,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":120132,"byte_end":120135,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n)** time and **O(n)** space. The sort is stable.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":120140,"byte_end":120215,"line_start":589,"line_end":589,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":120529,"byte_end":120538,"line_start":601,"line_end":601,"column_start":12,"column_end":21},"name":"sorted_by","qualname":"<IndexSet<T, S>>::sorted_by","value":"pub fn sorted_by<F>(Self, F) -> IntoIter<T> where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by-value iterator of\n the values with the result.","sig":null,"attributes":[{"value":"/ Sort the values of the set and return a by-value iterator of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":120381,"byte_end":120445,"line_start":597,"line_end":597,"column_start":5,"column_end":69}},{"value":"/ the values with the result.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":120450,"byte_end":120481,"line_start":598,"line_end":598,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":120486,"byte_end":120489,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ The sort is stable.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":120494,"byte_end":120517,"line_start":600,"line_end":600,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":120955,"byte_end":120968,"line_start":615,"line_end":615,"column_start":12,"column_end":25},"name":"sort_unstable","qualname":"<IndexSet<T, S>>::sort_unstable","value":"pub fn sort_unstable(&mut Self) where T: Ord","parent":null,"children":[],"decl_id":null,"docs":" Sort the set's values by their default ordering.","sig":null,"attributes":[{"value":"/ Sort the set's values by their default ordering.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":120813,"byte_end":120865,"line_start":612,"line_end":612,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":120870,"byte_end":120873,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ See [`sort_unstable_by`](Self::sort_unstable_by) for details.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":120878,"byte_end":120943,"line_start":614,"line_end":614,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":121214,"byte_end":121230,"line_start":625,"line_end":625,"column_start":12,"column_end":28},"name":"sort_unstable_by","qualname":"<IndexSet<T, S>>::sort_unstable_by","value":"pub fn sort_unstable_by<F>(&mut Self, F) where F: FnMut(&T, &T) -> Ordering","parent":null,"children":[],"decl_id":null,"docs":" Sort the set's values in place using the comparison funtion `cmp`.","sig":null,"attributes":[{"value":"/ Sort the set's values in place using the comparison funtion `cmp`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":121061,"byte_end":121131,"line_start":622,"line_end":622,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":121136,"byte_end":121139,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n log n)** time. The sort is unstable.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":121144,"byte_end":121202,"line_start":624,"line_end":624,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":121497,"byte_end":121515,"line_start":634,"line_end":634,"column_start":12,"column_end":30},"name":"sorted_unstable_by","qualname":"<IndexSet<T, S>>::sorted_unstable_by","value":"pub fn sorted_unstable_by<F>(Self, F) -> IntoIter<T> where F: FnMut(&T, &T) ->\nOrdering","parent":null,"children":[],"decl_id":null,"docs":" Sort the values of the set and return a by-value iterator of\n the values with the result.\n","sig":null,"attributes":[{"value":"/ Sort the values of the set and return a by-value iterator of","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":121385,"byte_end":121449,"line_start":632,"line_end":632,"column_start":5,"column_end":69}},{"value":"/ the values with the result.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":121454,"byte_end":121485,"line_start":633,"line_end":633,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":121927,"byte_end":121934,"line_start":648,"line_end":648,"column_start":12,"column_end":19},"name":"reverse","qualname":"<IndexSet<T, S>>::reverse","value":"pub fn reverse(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses the order of the set’s values in place.","sig":null,"attributes":[{"value":"/ Reverses the order of the set’s values in place.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":121799,"byte_end":121853,"line_start":645,"line_end":645,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":121858,"byte_end":121861,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time and **O(1)** space.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":121866,"byte_end":121915,"line_start":647,"line_end":647,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122155,"byte_end":122164,"line_start":659,"line_end":659,"column_start":12,"column_end":21},"name":"get_index","qualname":"<IndexSet<T, S>>::get_index","value":"pub fn get_index(&Self, usize) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a value by index","sig":null,"attributes":[{"value":"/ Get a value by index","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122016,"byte_end":122040,"line_start":654,"line_end":654,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122045,"byte_end":122048,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122053,"byte_end":122100,"line_start":656,"line_end":656,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122105,"byte_end":122108,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122113,"byte_end":122143,"line_start":658,"line_end":658,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122349,"byte_end":122354,"line_start":666,"line_end":666,"column_start":12,"column_end":17},"name":"first","qualname":"<IndexSet<T, S>>::first","value":"pub fn first(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get the first value","sig":null,"attributes":[{"value":"/ Get the first value","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122271,"byte_end":122294,"line_start":663,"line_end":663,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122299,"byte_end":122302,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122307,"byte_end":122337,"line_start":665,"line_end":665,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122521,"byte_end":122525,"line_start":673,"line_end":673,"column_start":12,"column_end":16},"name":"last","qualname":"<IndexSet<T, S>>::last","value":"pub fn last(&Self) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get the last value","sig":null,"attributes":[{"value":"/ Get the last value","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122444,"byte_end":122466,"line_start":670,"line_end":670,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122471,"byte_end":122474,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122479,"byte_end":122509,"line_start":672,"line_end":672,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122982,"byte_end":122999,"line_start":686,"line_end":686,"column_start":12,"column_end":29},"name":"swap_remove_index","qualname":"<IndexSet<T, S>>::swap_remove_index","value":"pub fn swap_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value by index","sig":null,"attributes":[{"value":"/ Remove the value by index","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122614,"byte_end":122643,"line_start":677,"line_end":677,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122648,"byte_end":122651,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122656,"byte_end":122703,"line_start":679,"line_end":679,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122708,"byte_end":122711,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::swap_remove`, the value is removed by swapping it with the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122716,"byte_end":122789,"line_start":681,"line_end":681,"column_start":5,"column_end":78}},{"value":"/ last element of the set and popping it off. **This perturbs","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122794,"byte_end":122857,"line_start":682,"line_end":682,"column_start":5,"column_end":68}},{"value":"/ the position of what used to be the last element!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122862,"byte_end":122917,"line_start":683,"line_end":683,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122922,"byte_end":122925,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(1)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":122930,"byte_end":122970,"line_start":685,"line_end":685,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123472,"byte_end":123490,"line_start":699,"line_end":699,"column_start":12,"column_end":30},"name":"shift_remove_index","qualname":"<IndexSet<T, S>>::shift_remove_index","value":"pub fn shift_remove_index(&mut Self, usize) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Remove the value by index","sig":null,"attributes":[{"value":"/ Remove the value by index","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123110,"byte_end":123139,"line_start":690,"line_end":690,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123144,"byte_end":123147,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ Valid indices are *0 <= index < self.len()*","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123152,"byte_end":123199,"line_start":692,"line_end":692,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123204,"byte_end":123207,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ Like `Vec::remove`, the value is removed by shifting all of the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123212,"byte_end":123279,"line_start":694,"line_end":694,"column_start":5,"column_end":72}},{"value":"/ elements that follow it, preserving their relative order.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123284,"byte_end":123345,"line_start":695,"line_end":695,"column_start":5,"column_end":66}},{"value":"/ **This perturbs the index of all of those elements!**","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123350,"byte_end":123407,"line_start":696,"line_end":696,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123412,"byte_end":123415,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123420,"byte_end":123460,"line_start":698,"line_end":698,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":124037,"byte_end":124047,"line_start":712,"line_end":712,"column_start":12,"column_end":22},"name":"move_index","qualname":"<IndexSet<T, S>>::move_index","value":"pub fn move_index(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Moves the position of a value from one index to another\n by shifting all other values in-between.","sig":null,"attributes":[{"value":"/ Moves the position of a value from one index to another","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123602,"byte_end":123661,"line_start":703,"line_end":703,"column_start":5,"column_end":64}},{"value":"/ by shifting all other values in-between.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123666,"byte_end":123710,"line_start":704,"line_end":704,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123715,"byte_end":123718,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ * If `from < to`, the other values will shift down while the targeted value moves up.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123723,"byte_end":123812,"line_start":706,"line_end":706,"column_start":5,"column_end":94}},{"value":"/ * If `from > to`, the other values will shift up while the targeted value moves down.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123817,"byte_end":123906,"line_start":707,"line_end":707,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123911,"byte_end":123914,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `from` or `to` are out of bounds.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123919,"byte_end":123972,"line_start":709,"line_end":709,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123977,"byte_end":123980,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ Computes in **O(n)** time (average).","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":123985,"byte_end":124025,"line_start":711,"line_end":711,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":124256,"byte_end":124268,"line_start":719,"line_end":719,"column_start":12,"column_end":24},"name":"swap_indices","qualname":"<IndexSet<T, S>>::swap_indices","value":"pub fn swap_indices(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps the position of two values in the set.","sig":null,"attributes":[{"value":"/ Swaps the position of two values in the set.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":124134,"byte_end":124182,"line_start":716,"line_end":716,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":124187,"byte_end":124190,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ ***Panics*** if `a` or `b` are out of bounds.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":124195,"byte_end":124244,"line_start":718,"line_end":718,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125651,"byte_end":125659,"line_start":771,"line_end":771,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::set::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":1061}],"decl_id":null,"docs":" An owning iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An owning iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125332,"byte_end":125386,"line_start":764,"line_end":764,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125387,"byte_end":125390,"line_start":765,"line_end":765,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`into_iter`] method on [`IndexSet`]","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125391,"byte_end":125463,"line_start":766,"line_end":766,"column_start":1,"column_end":73}},{"value":"/ (provided by the `IntoIterator` trait). See its documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125464,"byte_end":125539,"line_start":767,"line_end":767,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125540,"byte_end":125543,"line_start":768,"line_end":768,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125544,"byte_end":125582,"line_start":769,"line_end":769,"column_start":1,"column_end":39}},{"value":"/ [`into_iter`]: struct.IndexSet.html#method.into_iter","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125583,"byte_end":125639,"line_start":770,"line_end":770,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126538,"byte_end":126542,"line_start":807,"line_end":807,"column_start":12,"column_end":16},"name":"Iter","qualname":"::set::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":1078}],"decl_id":null,"docs":" An iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ An iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126280,"byte_end":126327,"line_start":800,"line_end":800,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126328,"byte_end":126331,"line_start":801,"line_end":801,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`iter`] method on [`IndexSet`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126332,"byte_end":126400,"line_start":802,"line_end":802,"column_start":1,"column_end":69}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126401,"byte_end":126436,"line_start":803,"line_end":803,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126437,"byte_end":126440,"line_start":804,"line_end":804,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126441,"byte_end":126479,"line_start":805,"line_end":805,"column_start":1,"column_end":39}},{"value":"/ [`iter`]: struct.IndexSet.html#method.iter","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126480,"byte_end":126526,"line_start":806,"line_end":806,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127526,"byte_end":127531,"line_start":850,"line_end":850,"column_start":12,"column_end":17},"name":"Drain","qualname":"::set::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":1099}],"decl_id":null,"docs":" A draining iterator over the items of a `IndexSet`.","sig":null,"attributes":[{"value":"/ A draining iterator over the items of a `IndexSet`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127257,"byte_end":127312,"line_start":843,"line_end":843,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127313,"byte_end":127316,"line_start":844,"line_end":844,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`drain`] method on [`IndexSet`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127317,"byte_end":127386,"line_start":845,"line_end":845,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127387,"byte_end":127422,"line_start":846,"line_end":846,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127423,"byte_end":127426,"line_start":847,"line_end":847,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127427,"byte_end":127465,"line_start":848,"line_end":848,"column_start":1,"column_end":39}},{"value":"/ [`drain`]: struct.IndexSet.html#method.drain","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127466,"byte_end":127514,"line_start":849,"line_end":849,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":130492,"byte_end":130503,"line_start":989,"line_end":989,"column_start":12,"column_end":23},"name":"is_disjoint","qualname":"<IndexSet<T, S>>::is_disjoint","value":"pub fn is_disjoint<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `self` has no elements in common with `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if `self` has no elements in common with `other`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":130412,"byte_end":130480,"line_start":988,"line_end":988,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":130878,"byte_end":130887,"line_start":1001,"line_end":1001,"column_start":12,"column_end":21},"name":"is_subset","qualname":"<IndexSet<T, S>>::is_subset","value":"pub fn is_subset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `self` are contained in `other`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `self` are contained in `other`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":130796,"byte_end":130866,"line_start":1000,"line_end":1000,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":131155,"byte_end":131166,"line_start":1009,"line_end":1009,"column_start":12,"column_end":23},"name":"is_superset","qualname":"<IndexSet<T, S>>::is_superset","value":"pub fn is_superset<S2>(&Self, &IndexSet<T, S2>) -> bool where S2: BuildHasher","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all elements of `other` are contained in `self`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all elements of `other` are contained in `self`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":131073,"byte_end":131143,"line_start":1008,"line_end":1008,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":131592,"byte_end":131602,"line_start":1024,"line_end":1024,"column_start":12,"column_end":22},"name":"Difference","qualname":"::set::Difference","value":"Difference {  }","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179}],"decl_id":null,"docs":" A lazy iterator producing elements in the difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the difference of `IndexSet`s.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":131291,"byte_end":131363,"line_start":1017,"line_end":1017,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":131364,"byte_end":131367,"line_start":1018,"line_end":1018,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`difference`] method on [`IndexSet`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":131368,"byte_end":131442,"line_start":1019,"line_end":1019,"column_start":1,"column_end":75}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":131443,"byte_end":131478,"line_start":1020,"line_end":1020,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":131479,"byte_end":131482,"line_start":1021,"line_end":1021,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":131483,"byte_end":131521,"line_start":1022,"line_end":1022,"column_start":1,"column_end":39}},{"value":"/ [`difference`]: struct.IndexSet.html#method.difference","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":131522,"byte_end":131580,"line_start":1023,"line_end":1023,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1202},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":133254,"byte_end":133266,"line_start":1098,"line_end":1098,"column_start":12,"column_end":24},"name":"Intersection","qualname":"::set::Intersection","value":"Intersection {  }","parent":null,"children":[{"krate":0,"index":1206},{"krate":0,"index":1207}],"decl_id":null,"docs":" A lazy iterator producing elements in the intersection of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the intersection of `IndexSet`s.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":132945,"byte_end":133019,"line_start":1091,"line_end":1091,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":133020,"byte_end":133023,"line_start":1092,"line_end":1092,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`intersection`] method on [`IndexSet`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":133024,"byte_end":133100,"line_start":1093,"line_end":1093,"column_start":1,"column_end":77}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":133101,"byte_end":133136,"line_start":1094,"line_end":1094,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":133137,"byte_end":133140,"line_start":1095,"line_end":1095,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":133141,"byte_end":133179,"line_start":1096,"line_end":1096,"column_start":1,"column_end":39}},{"value":"/ [`intersection`]: struct.IndexSet.html#method.intersection","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":133180,"byte_end":133242,"line_start":1097,"line_end":1097,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":134960,"byte_end":134979,"line_start":1172,"line_end":1172,"column_start":12,"column_end":31},"name":"SymmetricDifference","qualname":"::set::SymmetricDifference","value":"SymmetricDifference {  }","parent":null,"children":[{"krate":0,"index":1235}],"decl_id":null,"docs":" A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the symmetric difference of `IndexSet`s.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":134619,"byte_end":134701,"line_start":1165,"line_end":1165,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":134702,"byte_end":134705,"line_start":1166,"line_end":1166,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`symmetric_difference`] method on","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":134706,"byte_end":134776,"line_start":1167,"line_end":1167,"column_start":1,"column_end":71}},{"value":"/ [`IndexSet`]. See its documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":134777,"byte_end":134826,"line_start":1168,"line_end":1168,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":134827,"byte_end":134830,"line_start":1169,"line_end":1169,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":134831,"byte_end":134869,"line_start":1170,"line_end":1170,"column_start":1,"column_end":39}},{"value":"/ [`symmetric_difference`]: struct.IndexSet.html#method.symmetric_difference","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":134870,"byte_end":134948,"line_start":1171,"line_end":1171,"column_start":1,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1269},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":136776,"byte_end":136781,"line_start":1252,"line_end":1252,"column_start":12,"column_end":17},"name":"Union","qualname":"::set::Union","value":"Union {  }","parent":null,"children":[{"krate":0,"index":1273}],"decl_id":null,"docs":" A lazy iterator producing elements in the union of `IndexSet`s.","sig":null,"attributes":[{"value":"/ A lazy iterator producing elements in the union of `IndexSet`s.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":136495,"byte_end":136562,"line_start":1245,"line_end":1245,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":136563,"byte_end":136566,"line_start":1246,"line_end":1246,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`union`] method on [`IndexSet`].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":136567,"byte_end":136636,"line_start":1247,"line_end":1247,"column_start":1,"column_end":70}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":136637,"byte_end":136672,"line_start":1248,"line_end":1248,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":136673,"byte_end":136676,"line_start":1249,"line_end":1249,"column_start":1,"column_end":4}},{"value":"/ [`IndexSet`]: struct.IndexSet.html","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":136677,"byte_end":136715,"line_start":1250,"line_end":1250,"column_start":1,"column_end":39}},{"value":"/ [`union`]: struct.IndexSet.html#method.union","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":136716,"byte_end":136764,"line_start":1251,"line_end":1251,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":5215,"byte_end":5220,"line_start":186,"line_end":186,"column_start":10,"column_end":15},"name":"Entry","qualname":"::Entries::Entry","value":"type Entry;","parent":{"krate":0,"index":1354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","byte_start":11208,"byte_end":11209,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":28}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":13039,"byte_end":13047,"line_start":51,"line_end":51,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":61},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":95724,"byte_end":95736,"line_start":26,"line_end":26,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":96036,"byte_end":96048,"line_start":34,"line_end":34,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99097,"byte_end":99110,"line_start":116,"line_end":116,"column_start":40,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99225,"byte_end":99238,"line_start":119,"line_end":119,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":73073,"byte_end":73085,"line_start":59,"line_end":59,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":73771,"byte_end":73783,"line_start":82,"line_end":82,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":74102,"byte_end":74114,"line_start":95,"line_end":95,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":74617,"byte_end":74629,"line_start":122,"line_end":122,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":88161,"byte_end":88166,"line_start":499,"line_end":499,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":91223,"byte_end":91228,"line_start":589,"line_end":589,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":91632,"byte_end":91645,"line_start":601,"line_end":601,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93206,"byte_end":93219,"line_start":644,"line_end":644,"column_start":51,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93698,"byte_end":93709,"line_start":663,"line_end":663,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":94412,"byte_end":94423,"line_start":687,"line_end":687,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16897,"byte_end":16905,"line_start":81,"line_end":81,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":17303,"byte_end":17311,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":17835,"byte_end":17843,"line_start":126,"line_end":126,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18305,"byte_end":18313,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18739,"byte_end":18747,"line_start":161,"line_end":161,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23430,"byte_end":23438,"line_start":319,"line_end":319,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":505},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":530},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38098,"byte_end":38106,"line_start":775,"line_end":775,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41614,"byte_end":41618,"line_start":880,"line_end":880,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41733,"byte_end":41737,"line_start":886,"line_end":886,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1368},{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41839,"byte_end":41843,"line_start":890,"line_end":890,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41947,"byte_end":41951,"line_start":896,"line_end":896,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42042,"byte_end":42046,"line_start":899,"line_end":899,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42198,"byte_end":42202,"line_start":907,"line_end":907,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42703,"byte_end":42711,"line_start":924,"line_end":924,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":583},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42814,"byte_end":42822,"line_start":930,"line_end":930,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42916,"byte_end":42924,"line_start":934,"line_end":934,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":590}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43024,"byte_end":43032,"line_start":940,"line_end":940,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43081,"byte_end":43089,"line_start":942,"line_end":942,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43639,"byte_end":43645,"line_start":960,"line_end":960,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43762,"byte_end":43768,"line_start":966,"line_end":966,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1386},{"krate":0,"index":1387}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43872,"byte_end":43878,"line_start":970,"line_end":970,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43982,"byte_end":43988,"line_start":976,"line_end":976,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44079,"byte_end":44085,"line_start":979,"line_end":979,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":621}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44239,"byte_end":44245,"line_start":987,"line_end":987,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44763,"byte_end":44772,"line_start":1004,"line_end":1004,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":635},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44893,"byte_end":44902,"line_start":1010,"line_end":1010,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1396}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45006,"byte_end":45015,"line_start":1014,"line_end":1014,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45119,"byte_end":45128,"line_start":1020,"line_end":1020,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45181,"byte_end":45190,"line_start":1022,"line_end":1022,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45764,"byte_end":45774,"line_start":1040,"line_end":1040,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45879,"byte_end":45889,"line_start":1046,"line_end":1046,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45985,"byte_end":45995,"line_start":1050,"line_end":1050,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46095,"byte_end":46105,"line_start":1056,"line_end":1056,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46154,"byte_end":46164,"line_start":1058,"line_end":1058,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46709,"byte_end":46713,"line_start":1076,"line_end":1076,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410},{"krate":0,"index":1411}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46834,"byte_end":46838,"line_start":1082,"line_end":1082,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1413},{"krate":0,"index":1414}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46937,"byte_end":46941,"line_start":1086,"line_end":1086,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47045,"byte_end":47049,"line_start":1092,"line_end":1092,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47140,"byte_end":47144,"line_start":1095,"line_end":1095,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47308,"byte_end":47312,"line_start":1103,"line_end":1103,"column_start":51,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":699}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47823,"byte_end":47830,"line_start":1120,"line_end":1120,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47958,"byte_end":47965,"line_start":1126,"line_end":1126,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48067,"byte_end":48074,"line_start":1130,"line_end":1130,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":716}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48178,"byte_end":48185,"line_start":1136,"line_end":1136,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48250,"byte_end":48257,"line_start":1138,"line_end":1138,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":723}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48858,"byte_end":48866,"line_start":1156,"line_end":1156,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48980,"byte_end":48988,"line_start":1162,"line_end":1162,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1431},{"krate":0,"index":1432}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49088,"byte_end":49096,"line_start":1166,"line_end":1166,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49196,"byte_end":49204,"line_start":1172,"line_end":1172,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49265,"byte_end":49273,"line_start":1174,"line_end":1174,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49833,"byte_end":49838,"line_start":1192,"line_end":1192,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":1433},{"krate":0,"index":1434},{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49956,"byte_end":49961,"line_start":1198,"line_end":1198,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1440},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":50065,"byte_end":50070,"line_start":1202,"line_end":1202,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":50174,"byte_end":50179,"line_start":1208,"line_end":1208,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":50244,"byte_end":50249,"line_start":1210,"line_end":1210,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":50890,"byte_end":50898,"line_start":1233,"line_end":1233,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":51682,"byte_end":51690,"line_start":1265,"line_end":1265,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":52858,"byte_end":52866,"line_start":1310,"line_end":1310,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":53943,"byte_end":53951,"line_start":1352,"line_end":1352,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":809},{"krate":0,"index":810}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":55045,"byte_end":55053,"line_start":1394,"line_end":1394,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":815}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":55401,"byte_end":55409,"line_start":1405,"line_end":1405,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":56025,"byte_end":56033,"line_start":1425,"line_end":1425,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":56426,"byte_end":56434,"line_start":1443,"line_end":1443,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":833}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":57733,"byte_end":57741,"line_start":1476,"line_end":1476,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":841}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":58137,"byte_end":58145,"line_start":1490,"line_end":1490,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":58365,"byte_end":58373,"line_start":1500,"line_end":1500,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":58738,"byte_end":58746,"line_start":1517,"line_end":1517,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":104421,"byte_end":104429,"line_start":71,"line_end":71,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":104691,"byte_end":104699,"line_start":87,"line_end":87,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":105210,"byte_end":105218,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":105615,"byte_end":105623,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106056,"byte_end":106064,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":962},{"krate":0,"index":963},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109207,"byte_end":109215,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":977},{"krate":0,"index":980},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":997},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1013},{"krate":0,"index":1016},{"krate":0,"index":1019},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1031},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1038},{"krate":0,"index":1041}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":121995,"byte_end":122003,"line_start":653,"line_end":653,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125035,"byte_end":125043,"line_start":752,"line_end":752,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125725,"byte_end":125733,"line_start":775,"line_end":775,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1064},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125830,"byte_end":125838,"line_start":781,"line_end":781,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1449},{"krate":0,"index":1450}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125926,"byte_end":125934,"line_start":785,"line_end":785,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1069}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126028,"byte_end":126036,"line_start":791,"line_end":791,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126079,"byte_end":126087,"line_start":793,"line_end":793,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126618,"byte_end":126622,"line_start":811,"line_end":811,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1453},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126731,"byte_end":126735,"line_start":817,"line_end":817,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126831,"byte_end":126835,"line_start":821,"line_end":821,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126933,"byte_end":126937,"line_start":827,"line_end":827,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126967,"byte_end":126971,"line_start":829,"line_end":829,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127117,"byte_end":127121,"line_start":837,"line_end":837,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1095}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127602,"byte_end":127607,"line_start":854,"line_end":854,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1102},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127708,"byte_end":127713,"line_start":860,"line_end":860,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127805,"byte_end":127810,"line_start":864,"line_end":864,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1107}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127908,"byte_end":127913,"line_start":870,"line_end":870,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127960,"byte_end":127965,"line_start":872,"line_end":872,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":128372,"byte_end":128380,"line_start":888,"line_end":888,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":128605,"byte_end":128613,"line_start":899,"line_end":899,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":128940,"byte_end":128948,"line_start":913,"line_end":913,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":129314,"byte_end":129322,"line_start":931,"line_end":931,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":129573,"byte_end":129581,"line_start":942,"line_end":942,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1148}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":129826,"byte_end":129834,"line_start":953,"line_end":953,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":130050,"byte_end":130058,"line_start":965,"line_end":965,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1158}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":130272,"byte_end":130280,"line_start":976,"line_end":976,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":130347,"byte_end":130355,"line_start":983,"line_end":983,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1165},{"krate":0,"index":1169},{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":131700,"byte_end":131710,"line_start":1029,"line_end":1029,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1186}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":132144,"byte_end":132154,"line_start":1050,"line_end":1050,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":132472,"byte_end":132482,"line_start":1065,"line_end":1065,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":132563,"byte_end":132573,"line_start":1072,"line_end":1072,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":132739,"byte_end":132749,"line_start":1081,"line_end":1081,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":133364,"byte_end":133376,"line_start":1103,"line_end":1103,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":133809,"byte_end":133821,"line_start":1124,"line_end":1124,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1218}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":134138,"byte_end":134150,"line_start":1139,"line_end":1139,"column_start":30,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":134231,"byte_end":134243,"line_start":1146,"line_end":1146,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":134411,"byte_end":134423,"line_start":1155,"line_end":1155,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":135096,"byte_end":135115,"line_start":1176,"line_end":1176,"column_start":34,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":135570,"byte_end":135589,"line_start":1200,"line_end":1200,"column_start":41,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1251},{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":135937,"byte_end":135956,"line_start":1218,"line_end":1218,"column_start":35,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":136069,"byte_end":136088,"line_start":1226,"line_end":1226,"column_start":27,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1263}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":136253,"byte_end":136272,"line_start":1234,"line_end":1234,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1268}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":136877,"byte_end":136882,"line_start":1256,"line_end":1256,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":137305,"byte_end":137310,"line_start":1279,"line_end":1279,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1287},{"krate":0,"index":1288}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":137626,"byte_end":137631,"line_start":1296,"line_end":1296,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":137712,"byte_end":137717,"line_start":1303,"line_end":1303,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":137858,"byte_end":137863,"line_start":1311,"line_end":1311,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":3891,"byte_end":3900,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":4098,"byte_end":4104,"line_start":134,"line_end":134,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":4497,"byte_end":4503,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1346},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349},{"krate":0,"index":1350},{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":3364,"byte_end":3367,"line_start":98,"line_end":98,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":81}},{"kind":"Mod","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":3377,"byte_end":3380,"line_start":99,"line_end":99,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":862}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/equivalent.rs","byte_start":11208,"byte_end":11209,"line_start":18,"line_end":18,"column_start":46,"column_end":47},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":26},"to":{"krate":0,"index":22}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/mutable_keys.rs","byte_start":13039,"byte_end":13047,"line_start":51,"line_end":51,"column_start":31,"column_end":39},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":409},"to":{"krate":0,"index":45}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":95724,"byte_end":95736,"line_start":26,"line_end":26,"column_start":21,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":116},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":96036,"byte_end":96048,"line_start":34,"line_end":34,"column_start":12,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99097,"byte_end":99110,"line_start":116,"line_end":116,"column_start":40,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":134},"to":{"krate":1,"index":3036}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core/raw.rs","byte_start":99225,"byte_end":99238,"line_start":119,"line_end":119,"column_start":16,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":73073,"byte_end":73085,"line_start":59,"line_end":59,"column_start":22,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":194},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":73771,"byte_end":73783,"line_start":82,"line_end":82,"column_start":27,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":194},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":74102,"byte_end":74114,"line_start":95,"line_end":95,"column_start":24,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":194},"to":{"krate":0,"index":1354}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":74617,"byte_end":74629,"line_start":122,"line_end":122,"column_start":12,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":88161,"byte_end":88166,"line_start":499,"line_end":499,"column_start":16,"column_end":21},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":91223,"byte_end":91228,"line_start":589,"line_end":589,"column_start":51,"column_end":56},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":269},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":91632,"byte_end":91645,"line_start":601,"line_end":601,"column_start":12,"column_end":25},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93206,"byte_end":93219,"line_start":644,"line_end":644,"column_start":51,"column_end":64},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":134},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":93698,"byte_end":93709,"line_start":663,"line_end":663,"column_start":16,"column_end":27},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map/core.rs","byte_start":94412,"byte_end":94423,"line_start":687,"line_end":687,"column_start":39,"column_end":50},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":312},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":16897,"byte_end":16905,"line_start":81,"line_end":81,"column_start":25,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":17303,"byte_end":17311,"line_start":100,"line_end":100,"column_start":27,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":409},"to":{"krate":0,"index":1354}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":17835,"byte_end":17843,"line_start":126,"line_end":126,"column_start":30,"column_end":38},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18305,"byte_end":18313,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":18739,"byte_end":18747,"line_start":161,"line_end":161,"column_start":15,"column_end":23},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":23430,"byte_end":23438,"line_start":319,"line_end":319,"column_start":15,"column_end":23},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":38098,"byte_end":38106,"line_start":775,"line_end":775,"column_start":15,"column_end":23},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41614,"byte_end":41618,"line_start":880,"line_end":880,"column_start":29,"column_end":33},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41733,"byte_end":41737,"line_start":886,"line_end":886,"column_start":36,"column_end":40},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41839,"byte_end":41843,"line_start":890,"line_end":890,"column_start":34,"column_end":38},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":41947,"byte_end":41951,"line_start":896,"line_end":896,"column_start":30,"column_end":34},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42042,"byte_end":42046,"line_start":899,"line_end":899,"column_start":22,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42198,"byte_end":42202,"line_start":907,"line_end":907,"column_start":39,"column_end":43},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":548},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42703,"byte_end":42711,"line_start":924,"line_end":924,"column_start":25,"column_end":33},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":576},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42814,"byte_end":42822,"line_start":930,"line_end":930,"column_start":36,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":576},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":42916,"byte_end":42924,"line_start":934,"line_end":934,"column_start":34,"column_end":42},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":576},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43024,"byte_end":43032,"line_start":940,"line_end":940,"column_start":30,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":576},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43081,"byte_end":43089,"line_start":942,"line_end":942,"column_start":39,"column_end":47},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":576},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43639,"byte_end":43645,"line_start":960,"line_end":960,"column_start":29,"column_end":35},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43762,"byte_end":43768,"line_start":966,"line_end":966,"column_start":36,"column_end":42},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43872,"byte_end":43878,"line_start":970,"line_end":970,"column_start":34,"column_end":40},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":43982,"byte_end":43988,"line_start":976,"line_end":976,"column_start":30,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44079,"byte_end":44085,"line_start":979,"line_end":979,"column_start":22,"column_end":28},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44239,"byte_end":44245,"line_start":987,"line_end":987,"column_start":39,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":598},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44763,"byte_end":44772,"line_start":1004,"line_end":1004,"column_start":29,"column_end":38},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":626},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":44893,"byte_end":44902,"line_start":1010,"line_end":1010,"column_start":36,"column_end":45},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":626},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45006,"byte_end":45015,"line_start":1014,"line_end":1014,"column_start":34,"column_end":43},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":626},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45119,"byte_end":45128,"line_start":1020,"line_end":1020,"column_start":30,"column_end":39},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":626},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45181,"byte_end":45190,"line_start":1022,"line_end":1022,"column_start":39,"column_end":48},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":626},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45764,"byte_end":45774,"line_start":1040,"line_end":1040,"column_start":25,"column_end":35},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":650},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45879,"byte_end":45889,"line_start":1046,"line_end":1046,"column_start":36,"column_end":46},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":650},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":45985,"byte_end":45995,"line_start":1050,"line_end":1050,"column_start":34,"column_end":44},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":650},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46095,"byte_end":46105,"line_start":1056,"line_end":1056,"column_start":30,"column_end":40},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":650},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46154,"byte_end":46164,"line_start":1058,"line_end":1058,"column_start":39,"column_end":49},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":650},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46709,"byte_end":46713,"line_start":1076,"line_end":1076,"column_start":29,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":672},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46834,"byte_end":46838,"line_start":1082,"line_end":1082,"column_start":36,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":672},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":46937,"byte_end":46941,"line_start":1086,"line_end":1086,"column_start":34,"column_end":38},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":672},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47045,"byte_end":47049,"line_start":1092,"line_end":1092,"column_start":30,"column_end":34},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":672},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47140,"byte_end":47144,"line_start":1095,"line_end":1095,"column_start":22,"column_end":26},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":672},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47308,"byte_end":47312,"line_start":1103,"line_end":1103,"column_start":51,"column_end":55},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":672},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47823,"byte_end":47830,"line_start":1120,"line_end":1120,"column_start":29,"column_end":36},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":700},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":47958,"byte_end":47965,"line_start":1126,"line_end":1126,"column_start":36,"column_end":43},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":700},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48067,"byte_end":48074,"line_start":1130,"line_end":1130,"column_start":34,"column_end":41},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":700},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48178,"byte_end":48185,"line_start":1136,"line_end":1136,"column_start":30,"column_end":37},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":700},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48250,"byte_end":48257,"line_start":1138,"line_end":1138,"column_start":51,"column_end":58},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":700},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48858,"byte_end":48866,"line_start":1156,"line_end":1156,"column_start":25,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":724},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":48980,"byte_end":48988,"line_start":1162,"line_end":1162,"column_start":36,"column_end":44},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":724},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49088,"byte_end":49096,"line_start":1166,"line_end":1166,"column_start":34,"column_end":42},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":724},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49196,"byte_end":49204,"line_start":1172,"line_end":1172,"column_start":30,"column_end":38},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":724},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49265,"byte_end":49273,"line_start":1174,"line_end":1174,"column_start":51,"column_end":59},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":724},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49833,"byte_end":49838,"line_start":1192,"line_end":1192,"column_start":25,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":746},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":49956,"byte_end":49961,"line_start":1198,"line_end":1198,"column_start":36,"column_end":41},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":746},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":50065,"byte_end":50070,"line_start":1202,"line_end":1202,"column_start":34,"column_end":39},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":746},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":50174,"byte_end":50179,"line_start":1208,"line_end":1208,"column_start":30,"column_end":35},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":746},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":50244,"byte_end":50249,"line_start":1210,"line_end":1210,"column_start":51,"column_end":56},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":746},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":50890,"byte_end":50898,"line_start":1233,"line_end":1233,"column_start":32,"column_end":40},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":7715}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":51682,"byte_end":51690,"line_start":1265,"line_end":1265,"column_start":40,"column_end":48},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":3327}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":52858,"byte_end":52866,"line_start":1310,"line_end":1310,"column_start":43,"column_end":51},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":3331}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":53943,"byte_end":53951,"line_start":1352,"line_end":1352,"column_start":32,"column_end":40},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":3327}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":55045,"byte_end":55053,"line_start":1394,"line_end":1394,"column_start":35,"column_end":43},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":3331}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":55401,"byte_end":55409,"line_start":1405,"line_end":1405,"column_start":40,"column_end":48},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":7711}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":56025,"byte_end":56033,"line_start":1425,"line_end":1425,"column_start":50,"column_end":58},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":56426,"byte_end":56434,"line_start":1443,"line_end":1443,"column_start":34,"column_end":42},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":7724}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":57733,"byte_end":57741,"line_start":1476,"line_end":1476,"column_start":46,"column_end":54},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":7724}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":58137,"byte_end":58145,"line_start":1490,"line_end":1490,"column_start":27,"column_end":35},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":58365,"byte_end":58373,"line_start":1500,"line_end":1500,"column_start":60,"column_end":68},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/map.rs","byte_start":58738,"byte_end":58746,"line_start":1517,"line_end":1517,"column_start":22,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":409},"to":{"krate":1,"index":2680}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":104421,"byte_end":104429,"line_start":71,"line_end":71,"column_start":22,"column_end":30},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":927},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":104691,"byte_end":104699,"line_start":87,"line_end":87,"column_start":24,"column_end":32},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":927},"to":{"krate":0,"index":1354}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":105210,"byte_end":105218,"line_start":113,"line_end":113,"column_start":27,"column_end":35},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":927},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":105615,"byte_end":105623,"line_start":128,"line_end":128,"column_start":9,"column_end":17},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":106056,"byte_end":106064,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":109207,"byte_end":109215,"line_start":252,"line_end":252,"column_start":12,"column_end":20},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":121995,"byte_end":122003,"line_start":653,"line_end":653,"column_start":12,"column_end":20},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125035,"byte_end":125043,"line_start":752,"line_end":752,"column_start":29,"column_end":37},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":927},"to":{"krate":1,"index":3327}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125725,"byte_end":125733,"line_start":775,"line_end":775,"column_start":22,"column_end":30},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1059},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125830,"byte_end":125838,"line_start":781,"line_end":781,"column_start":33,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1059},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":125926,"byte_end":125934,"line_start":785,"line_end":785,"column_start":31,"column_end":39},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1059},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126028,"byte_end":126036,"line_start":791,"line_end":791,"column_start":27,"column_end":35},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1059},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126079,"byte_end":126087,"line_start":793,"line_end":793,"column_start":36,"column_end":44},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1059},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126618,"byte_end":126622,"line_start":811,"line_end":811,"column_start":26,"column_end":30},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1075},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126731,"byte_end":126735,"line_start":817,"line_end":817,"column_start":33,"column_end":37},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1075},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126831,"byte_end":126835,"line_start":821,"line_end":821,"column_start":31,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1075},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126933,"byte_end":126937,"line_start":827,"line_end":827,"column_start":27,"column_end":31},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1075},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":126967,"byte_end":126971,"line_start":829,"line_end":829,"column_start":19,"column_end":23},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1075},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127117,"byte_end":127121,"line_start":837,"line_end":837,"column_start":36,"column_end":40},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1075},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127602,"byte_end":127607,"line_start":854,"line_end":854,"column_start":22,"column_end":27},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1096},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127708,"byte_end":127713,"line_start":860,"line_end":860,"column_start":33,"column_end":38},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1096},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127805,"byte_end":127810,"line_start":864,"line_end":864,"column_start":31,"column_end":36},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1096},"to":{"krate":1,"index":7784}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127908,"byte_end":127913,"line_start":870,"line_end":870,"column_start":27,"column_end":32},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1096},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":127960,"byte_end":127965,"line_start":872,"line_end":872,"column_start":36,"column_end":41},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1096},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":128372,"byte_end":128380,"line_start":888,"line_end":888,"column_start":29,"column_end":37},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":927},"to":{"krate":1,"index":7715}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":128605,"byte_end":128613,"line_start":899,"line_end":899,"column_start":32,"column_end":40},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":927},"to":{"krate":1,"index":7711}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":128940,"byte_end":128948,"line_start":913,"line_end":913,"column_start":42,"column_end":50},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":927},"to":{"krate":1,"index":2930}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":129314,"byte_end":129322,"line_start":931,"line_end":931,"column_start":26,"column_end":34},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":927},"to":{"krate":1,"index":7724}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":129573,"byte_end":129581,"line_start":942,"line_end":942,"column_start":34,"column_end":42},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":927},"to":{"krate":1,"index":7724}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":129826,"byte_end":129834,"line_start":953,"line_end":953,"column_start":24,"column_end":32},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":927},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":130050,"byte_end":130058,"line_start":965,"line_end":965,"column_start":48,"column_end":56},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":927},"to":{"krate":1,"index":2675}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":130272,"byte_end":130280,"line_start":976,"line_end":976,"column_start":19,"column_end":27},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":927},"to":{"krate":1,"index":2680}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":130347,"byte_end":130355,"line_start":983,"line_end":983,"column_start":12,"column_end":20},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":131700,"byte_end":131710,"line_start":1029,"line_end":1029,"column_start":29,"column_end":39},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1174},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":132144,"byte_end":132154,"line_start":1050,"line_end":1050,"column_start":36,"column_end":46},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1174},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":132472,"byte_end":132482,"line_start":1065,"line_end":1065,"column_start":30,"column_end":40},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1174},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":132563,"byte_end":132573,"line_start":1072,"line_end":1072,"column_start":22,"column_end":32},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1174},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":132739,"byte_end":132749,"line_start":1081,"line_end":1081,"column_start":27,"column_end":37},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1174},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":133364,"byte_end":133376,"line_start":1103,"line_end":1103,"column_start":29,"column_end":41},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":133809,"byte_end":133821,"line_start":1124,"line_end":1124,"column_start":36,"column_end":48},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":134138,"byte_end":134150,"line_start":1139,"line_end":1139,"column_start":30,"column_end":42},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":134231,"byte_end":134243,"line_start":1146,"line_end":1146,"column_start":22,"column_end":34},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":134411,"byte_end":134423,"line_start":1155,"line_end":1155,"column_start":27,"column_end":39},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1202},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":135096,"byte_end":135115,"line_start":1176,"line_end":1176,"column_start":34,"column_end":53},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1230},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":135570,"byte_end":135589,"line_start":1200,"line_end":1200,"column_start":41,"column_end":60},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1230},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":135937,"byte_end":135956,"line_start":1218,"line_end":1218,"column_start":35,"column_end":54},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1230},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":136069,"byte_end":136088,"line_start":1226,"line_end":1226,"column_start":27,"column_end":46},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1230},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":136253,"byte_end":136272,"line_start":1234,"line_end":1234,"column_start":32,"column_end":51},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1230},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":136877,"byte_end":136882,"line_start":1256,"line_end":1256,"column_start":29,"column_end":34},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1269},"to":{"krate":1,"index":7907}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":137305,"byte_end":137310,"line_start":1279,"line_end":1279,"column_start":36,"column_end":41},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1269},"to":{"krate":1,"index":7759}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":137626,"byte_end":137631,"line_start":1296,"line_end":1296,"column_start":30,"column_end":35},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1269},"to":{"krate":1,"index":8180}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":137712,"byte_end":137717,"line_start":1303,"line_end":1303,"column_start":22,"column_end":27},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1269},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/set.rs","byte_start":137858,"byte_end":137863,"line_start":1311,"line_end":1311,"column_start":27,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1269},"to":{"krate":1,"index":9597}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":3891,"byte_end":3900,"line_start":120,"line_end":120,"column_start":6,"column_end":15},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":4098,"byte_end":4104,"line_start":134,"line_end":134,"column_start":22,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1481},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/indexmap-1.9.1/src/lib.rs","byte_start":4497,"byte_end":4503,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1481},"to":{"krate":4294967295,"index":4294967295}}]}