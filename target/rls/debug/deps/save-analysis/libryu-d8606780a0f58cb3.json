{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11","program":"/Users/maximvezenov/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ryu","--edition=2018","/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=d8606780a0f58cb3","-C","extra-filename=-d8606780a0f58cb3","--out-dir","/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps","-L","dependency=/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/maximvezenov/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/maximvezenov/Documents/dev/noir-backends/marlin_arkworks_backend/target/rls/debug/deps/libryu-d8606780a0f58cb3.rmeta"},"prelude":{"crate_id":{"name":"ryu","disambiguator":[2629904191261666052,0]},"crate_root":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src","external_crates":[{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14793976659495462539,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3402831840469434398,0]}},{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[10266006331935790141,0]}}],"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":0,"byte_end":4038,"line_start":1,"line_end":123,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":21},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":3883,"byte_end":3889,"line_start":118,"line_end":118,"column_start":25,"column_end":31},"alias_span":null,"name":"Buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":36},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":3891,"byte_end":3896,"line_start":118,"line_end":118,"column_start":33,"column_end":38},"alias_span":null,"name":"Float","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":162},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":4016,"byte_end":4024,"line_start":122,"line_end":122,"column_start":29,"column_end":37},"alias_span":null,"name":"format32","value":"","parent":{"krate":0,"index":170}},{"kind":"Use","ref_id":{"krate":0,"index":161},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":4026,"byte_end":4034,"line_start":122,"line_end":122,"column_start":39,"column_end":47},"alias_span":null,"name":"format64","value":"","parent":{"krate":0,"index":170}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":0,"byte_end":4038,"line_start":1,"line_end":123,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":57},{"krate":0,"index":64},{"krate":0,"index":81},{"krate":0,"index":88},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":120},{"krate":0,"index":132},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":170}],"decl_id":null,"docs":" [![github]](https://github.com/dtolnay/ryu)&ensp;[![crates-io]](https://crates.io/crates/ryu)&ensp;[![docs-rs]](https://docs.rs/ryu)","sig":null,"attributes":[{"value":"/ [![github]](https://github.com/dtolnay/ryu)&ensp;[![crates-io]](https://crates.io/crates/ryu)&ensp;[![docs-rs]](https://docs.rs/ryu)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":0,"byte_end":136,"line_start":1,"line_end":1,"column_start":1,"column_end":137}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":137,"byte_end":140,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [github]: https://img.shields.io/badge/github-8da0cb?style=for-the-badge&labelColor=555555&logo=github","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":141,"byte_end":247,"line_start":3,"line_end":3,"column_start":1,"column_end":107}},{"value":"/ [crates-io]: https://img.shields.io/badge/crates.io-fc8d62?style=for-the-badge&labelColor=555555&logo=rust","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":248,"byte_end":358,"line_start":4,"line_end":4,"column_start":1,"column_end":111}},{"value":"/ [docs-rs]: https://img.shields.io/badge/docs.rs-66c2a5?style=for-the-badge&labelColor=555555&logo=docs.rs","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":359,"byte_end":468,"line_start":5,"line_end":5,"column_start":1,"column_end":110}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":469,"byte_end":472,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ <br>","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":473,"byte_end":481,"line_start":7,"line_end":7,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":482,"byte_end":485,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ Pure Rust implementation of Ryū, an algorithm to quickly convert floating","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":486,"byte_end":564,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/ point numbers to decimal strings.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":565,"byte_end":602,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":603,"byte_end":606,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The PLDI'18 paper [*Ryū: fast float-to-string conversion*][paper] by Ulf","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":607,"byte_end":684,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ Adams includes a complete correctness proof of the algorithm. The paper is","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":685,"byte_end":763,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ available under the creative commons CC-BY-SA license.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":764,"byte_end":822,"line_start":14,"line_end":14,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":823,"byte_end":826,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This Rust implementation is a line-by-line port of Ulf Adams' implementation","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":827,"byte_end":907,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ in C, [https://github.com/ulfjack/ryu][upstream].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":908,"byte_end":961,"line_start":17,"line_end":17,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":962,"byte_end":965,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [paper]: https://dl.acm.org/citation.cfm?id=3192369","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":966,"byte_end":1021,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/ [upstream]: https://github.com/ulfjack/ryu","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1022,"byte_end":1068,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1069,"byte_end":1072,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1073,"byte_end":1086,"line_start":22,"line_end":22,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1087,"byte_end":1090,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1091,"byte_end":1098,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1099,"byte_end":1114,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/     let mut buffer = ryu::Buffer::new();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1115,"byte_end":1159,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/     let printed = buffer.format(1.234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1160,"byte_end":1203,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/     assert_eq!(printed, \"1.234\");","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1204,"byte_end":1241,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1242,"byte_end":1247,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1248,"byte_end":1255,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1256,"byte_end":1259,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ## Performance (lower is better)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1260,"byte_end":1296,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1297,"byte_end":1300,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ![performance](https://raw.githubusercontent.com/dtolnay/ryu/master/performance.png)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1301,"byte_end":1389,"line_start":34,"line_end":34,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1390,"byte_end":1393,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ You can run upstream's benchmarks with:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1394,"byte_end":1437,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1438,"byte_end":1441,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```console","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1442,"byte_end":1456,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/ $ git clone https://github.com/ulfjack/ryu c-ryu","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1457,"byte_end":1509,"line_start":39,"line_end":39,"column_start":1,"column_end":53}},{"value":"/ $ cd c-ryu","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1510,"byte_end":1524,"line_start":40,"line_end":40,"column_start":1,"column_end":15}},{"value":"/ $ bazel run -c opt //ryu/benchmark","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1525,"byte_end":1563,"line_start":41,"line_end":41,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1564,"byte_end":1571,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1572,"byte_end":1575,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ And the same benchmark against our implementation with:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1576,"byte_end":1635,"line_start":44,"line_end":44,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1636,"byte_end":1639,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ ```console","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1640,"byte_end":1654,"line_start":46,"line_end":46,"column_start":1,"column_end":15}},{"value":"/ $ git clone https://github.com/dtolnay/ryu rust-ryu","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1655,"byte_end":1710,"line_start":47,"line_end":47,"column_start":1,"column_end":56}},{"value":"/ $ cd rust-ryu","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1711,"byte_end":1728,"line_start":48,"line_end":48,"column_start":1,"column_end":18}},{"value":"/ $ cargo run --example upstream_benchmark --release","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1729,"byte_end":1783,"line_start":49,"line_end":49,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1784,"byte_end":1791,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1792,"byte_end":1795,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ These benchmarks measure the average time to print a 32-bit float and average","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1796,"byte_end":1877,"line_start":52,"line_end":52,"column_start":1,"column_end":82}},{"value":"/ time to print a 64-bit float, where the inputs are distributed as uniform random","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1878,"byte_end":1962,"line_start":53,"line_end":53,"column_start":1,"column_end":85}},{"value":"/ bit patterns 32 and 64 bits wide.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":1963,"byte_end":2000,"line_start":54,"line_end":54,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2001,"byte_end":2004,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The upstream C code, the unsafe direct Rust port, and the safe pretty Rust API","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2005,"byte_end":2087,"line_start":56,"line_end":56,"column_start":1,"column_end":83}},{"value":"/ all perform the same, taking around 21 nanoseconds to format a 32-bit float and","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2088,"byte_end":2171,"line_start":57,"line_end":57,"column_start":1,"column_end":84}},{"value":"/ 31 nanoseconds to format a 64-bit float.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2172,"byte_end":2216,"line_start":58,"line_end":58,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2217,"byte_end":2220,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ There is also a Rust-specific benchmark comparing this implementation to the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2221,"byte_end":2301,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ standard library which you can run with:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2302,"byte_end":2346,"line_start":61,"line_end":61,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2347,"byte_end":2350,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ ```console","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2351,"byte_end":2365,"line_start":63,"line_end":63,"column_start":1,"column_end":15}},{"value":"/ $ cargo bench","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2366,"byte_end":2383,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2384,"byte_end":2391,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2392,"byte_end":2395,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ The benchmark shows Ryū approximately 2-5x faster than the standard library","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2396,"byte_end":2476,"line_start":67,"line_end":67,"column_start":1,"column_end":80}},{"value":"/ across a range of f32 and f64 inputs. Measurements are in nanoseconds per","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2477,"byte_end":2554,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/ iteration; smaller is better.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2555,"byte_end":2588,"line_start":69,"line_end":69,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2589,"byte_end":2592,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ## Formatting","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2593,"byte_end":2610,"line_start":71,"line_end":71,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2611,"byte_end":2614,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This library tends to produce more human-readable output than the standard","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2615,"byte_end":2693,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/ library's to\\_string, which never uses scientific notation. Here are two","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2694,"byte_end":2770,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ examples:","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2771,"byte_end":2784,"line_start":75,"line_end":75,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2785,"byte_end":2788,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ - *ryu:* 1.23e40, *std:* 12300000000000000000000000000000000000000","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2789,"byte_end":2859,"line_start":77,"line_end":77,"column_start":1,"column_end":71}},{"value":"/ - *ryu:* 1.23e-40, *std:* 0.000000000000000000000000000000000000000123","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2860,"byte_end":2934,"line_start":78,"line_end":78,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2935,"byte_end":2938,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Both libraries print short decimals such as 0.0000123 without scientific","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":2939,"byte_end":3015,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ notation.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":3016,"byte_end":3029,"line_start":81,"line_end":81,"column_start":1,"column_end":14}},{"value":"no_std","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":3031,"byte_end":3041,"line_start":83,"line_end":83,"column_start":1,"column_end":11}},{"value":"allow(clippy :: cast_lossless, clippy :: cast_possible_truncation, clippy ::\ncast_possible_wrap, clippy :: cast_sign_loss, clippy :: checked_conversions,\nclippy :: doc_markdown, clippy :: expl_impl_clone_on_copy, clippy ::\nif_not_else, clippy :: many_single_char_names, clippy :: missing_panics_doc,\nclippy :: module_name_repetitions, clippy :: must_use_candidate, clippy ::\nsimilar_names, clippy :: too_many_lines, clippy :: unreadable_literal, clippy\n:: unseparated_literal_suffix, clippy :: wildcard_imports)","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":3096,"byte_end":3647,"line_start":85,"line_end":103,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":21},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4485,"byte_end":4491,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::buffer::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":22}],"decl_id":null,"docs":" Safe API for formatting floating point numbers to text.","sig":null,"attributes":[{"value":"/ Safe API for formatting floating point numbers to text.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4253,"byte_end":4312,"line_start":11,"line_end":11,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4313,"byte_end":4316,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4317,"byte_end":4331,"line_start":13,"line_end":13,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4332,"byte_end":4335,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4336,"byte_end":4343,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ let mut buffer = ryu::Buffer::new();","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4344,"byte_end":4384,"line_start":16,"line_end":16,"column_start":1,"column_end":41}},{"value":"/ let printed = buffer.format_finite(1.234);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4385,"byte_end":4431,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(printed, \"1.234\");","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4432,"byte_end":4465,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4466,"byte_end":4473,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4723,"byte_end":4726,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<Buffer>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" This is a cheap operation; you don't need to worry about reusing buffers\n for efficiency.\n","sig":null,"attributes":[{"value":"/ This is a cheap operation; you don't need to worry about reusing buffers","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4549,"byte_end":4625,"line_start":25,"line_end":25,"column_start":5,"column_end":81}},{"value":"/ for efficiency.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4630,"byte_end":4649,"line_start":26,"line_end":26,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4654,"byte_end":4663,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":5444,"byte_end":5450,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"format","qualname":"<Buffer>::format","value":"pub fn format<F: Float>(&mut Self, F) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Print a floating point number into this buffer and return a reference to\n its string representation within the buffer.","sig":null,"attributes":[{"value":"/ Print a floating point number into this buffer and return a reference to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4830,"byte_end":4906,"line_start":34,"line_end":34,"column_start":5,"column_end":81}},{"value":"/ its string representation within the buffer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4911,"byte_end":4959,"line_start":35,"line_end":35,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4964,"byte_end":4967,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Special cases","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4972,"byte_end":4991,"line_start":37,"line_end":37,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4996,"byte_end":4999,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ This function formats NaN as the string \"NaN\", positive infinity as","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":5004,"byte_end":5075,"line_start":39,"line_end":39,"column_start":5,"column_end":76}},{"value":"/ \"inf\", and negative infinity as \"-inf\" to match std::fmt.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":5080,"byte_end":5141,"line_start":40,"line_end":40,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":5146,"byte_end":5149,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ If your input is known to be finite, you may get better performance by","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":5154,"byte_end":5228,"line_start":42,"line_end":42,"column_start":5,"column_end":79}},{"value":"/ calling the `format_finite` method instead of `format` to avoid the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":5233,"byte_end":5304,"line_start":43,"line_end":43,"column_start":5,"column_end":76}},{"value":"/ checks for special cases.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":5309,"byte_end":5338,"line_start":44,"line_end":44,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":6516,"byte_end":6529,"line_start":72,"line_end":72,"column_start":12,"column_end":25},"name":"format_finite","qualname":"<Buffer>::format_finite","value":"pub fn format_finite<F: Float>(&mut Self, F) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Print a floating point number into this buffer and return a reference to\n its string representation within the buffer.","sig":null,"attributes":[{"value":"/ Print a floating point number into this buffer and return a reference to","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":5623,"byte_end":5699,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ its string representation within the buffer.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":5704,"byte_end":5752,"line_start":56,"line_end":56,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":5757,"byte_end":5760,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Special cases","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":5765,"byte_end":5784,"line_start":58,"line_end":58,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":5789,"byte_end":5792,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This function **does not** check for NaN or infinity. If the input","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":5797,"byte_end":5867,"line_start":60,"line_end":60,"column_start":5,"column_end":75}},{"value":"/ number is not a finite float, the printed representation will be some","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":5872,"byte_end":5945,"line_start":61,"line_end":61,"column_start":5,"column_end":78}},{"value":"/ correctly formatted but unspecified numerical value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":5950,"byte_end":6006,"line_start":62,"line_end":62,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":6011,"byte_end":6014,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Please check [`is_finite`] yourself before calling this function, or","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":6019,"byte_end":6091,"line_start":64,"line_end":64,"column_start":5,"column_end":77}},{"value":"/ check [`is_nan`] and [`is_infinite`] and handle those cases yourself.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":6096,"byte_end":6169,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":6174,"byte_end":6177,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ [`is_finite`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_finite","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":6182,"byte_end":6266,"line_start":67,"line_end":67,"column_start":5,"column_end":89}},{"value":"/ [`is_nan`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_nan","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":6271,"byte_end":6349,"line_start":68,"line_end":68,"column_start":5,"column_end":83}},{"value":"/ [`is_infinite`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_infinite","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":6354,"byte_end":6442,"line_start":69,"line_end":69,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":6447,"byte_end":6456,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":7334,"byte_end":7339,"line_start":104,"line_end":104,"column_start":11,"column_end":16},"name":"Float","qualname":"::buffer::Float","value":"Float: Sealed","parent":null,"children":[],"decl_id":null,"docs":" A floating point number, f32 or f64, that can be written into a\n [`ryu::Buffer`][Buffer].","sig":null,"attributes":[{"value":"/ A floating point number, f32 or f64, that can be written into a","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":7130,"byte_end":7197,"line_start":99,"line_end":99,"column_start":1,"column_end":68}},{"value":"/ [`ryu::Buffer`][Buffer].","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":7198,"byte_end":7226,"line_start":100,"line_end":100,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":7227,"byte_end":7230,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ This trait is sealed and cannot be implemented for types outside of the","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":7231,"byte_end":7306,"line_start":102,"line_end":102,"column_start":1,"column_end":76}},{"value":"/ `ryu` crate.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":7307,"byte_end":7323,"line_start":103,"line_end":103,"column_start":1,"column_end":17}}]},{"kind":"Trait","id":{"krate":0,"index":39},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":7406,"byte_end":7412,"line_start":108,"line_end":108,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::buffer::Sealed","value":"Sealed: Copy","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":7428,"byte_end":7440,"line_start":109,"line_end":109,"column_start":8,"column_end":20},"name":"is_nonfinite","qualname":"::buffer::Sealed::is_nonfinite","value":"pub fn is_nonfinite(Self) -> bool","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":7463,"byte_end":7479,"line_start":110,"line_end":110,"column_start":8,"column_end":24},"name":"format_nonfinite","qualname":"::buffer::Sealed::format_nonfinite","value":"pub fn format_nonfinite(Self) -> &'static str","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":7517,"byte_end":7536,"line_start":111,"line_end":111,"column_start":15,"column_end":34},"name":"write_to_ryu_buffer","qualname":"::buffer::Sealed::write_to_ryu_buffer","value":"pub unsafe fn write_to_ryu_buffer(Self, *mut u8) -> usize","parent":{"krate":0,"index":39},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":161},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72502,"byte_end":72510,"line_start":52,"line_end":52,"column_start":15,"column_end":23},"name":"format64","qualname":"::pretty::format64","value":"pub unsafe fn format64(f64, *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f64 to the given buffer and return number of bytes written.","sig":null,"attributes":[{"value":"/ Print f64 to the given buffer and return number of bytes written.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71103,"byte_end":71172,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71173,"byte_end":71176,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ At most 24 bytes will be written.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71177,"byte_end":71214,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71215,"byte_end":71218,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Special cases","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71219,"byte_end":71239,"line_start":17,"line_end":17,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71240,"byte_end":71243,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ This function **does not** check for NaN or infinity. If the input","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71244,"byte_end":71314,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ number is not a finite float, the printed representation will be some","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71315,"byte_end":71388,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ correctly formatted but unspecified numerical value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71389,"byte_end":71445,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71446,"byte_end":71449,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Please check [`is_finite`] yourself before calling this function, or","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71450,"byte_end":71522,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ check [`is_nan`] and [`is_infinite`] and handle those cases yourself.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71523,"byte_end":71596,"line_start":24,"line_end":24,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71597,"byte_end":71600,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`is_finite`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_finite","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71601,"byte_end":71685,"line_start":26,"line_end":26,"column_start":1,"column_end":85}},{"value":"/ [`is_nan`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_nan","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71686,"byte_end":71764,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"/ [`is_infinite`]: https://doc.rust-lang.org/std/primitive.f64.html#method.is_infinite","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71765,"byte_end":71853,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71854,"byte_end":71857,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ## Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71858,"byte_end":71871,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71872,"byte_end":71875,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The `result` pointer argument must point to sufficiently many writable bytes","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71876,"byte_end":71956,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/ to hold Ryū's representation of `f`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71957,"byte_end":71998,"line_start":33,"line_end":33,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":71999,"byte_end":72002,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72003,"byte_end":72017,"line_start":35,"line_end":35,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72018,"byte_end":72021,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72022,"byte_end":72029,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ use std::{mem::MaybeUninit, slice, str};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72030,"byte_end":72074,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72075,"byte_end":72078,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ let f = 1.234f64;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72079,"byte_end":72100,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72101,"byte_end":72104,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72105,"byte_end":72117,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/     let mut buffer = [MaybeUninit::<u8>::uninit(); 24];","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72118,"byte_end":72177,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     let len = ryu::raw::format64(f, buffer.as_mut_ptr() as *mut u8);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72178,"byte_end":72250,"line_start":44,"line_end":44,"column_start":1,"column_end":73}},{"value":"/     let slice = slice::from_raw_parts(buffer.as_ptr() as *const u8, len);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72251,"byte_end":72328,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/     let print = str::from_utf8_unchecked(slice);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72329,"byte_end":72381,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(print, \"1.234\");","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72382,"byte_end":72417,"line_start":47,"line_end":47,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72418,"byte_end":72423,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72424,"byte_end":72431,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":72432,"byte_end":72443,"line_start":50,"line_end":50,"column_start":1,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":162},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":76425,"byte_end":76433,"line_start":159,"line_end":159,"column_start":15,"column_end":23},"name":"format32","qualname":"::pretty::format32","value":"pub unsafe fn format32(f32, *mut u8) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Print f32 to the given buffer and return number of bytes written.","sig":null,"attributes":[{"value":"/ Print f32 to the given buffer and return number of bytes written.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75026,"byte_end":75095,"line_start":120,"line_end":120,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75096,"byte_end":75099,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ At most 16 bytes will be written.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75100,"byte_end":75137,"line_start":122,"line_end":122,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75138,"byte_end":75141,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ## Special cases","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75142,"byte_end":75162,"line_start":124,"line_end":124,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75163,"byte_end":75166,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ This function **does not** check for NaN or infinity. If the input","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75167,"byte_end":75237,"line_start":126,"line_end":126,"column_start":1,"column_end":71}},{"value":"/ number is not a finite float, the printed representation will be some","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75238,"byte_end":75311,"line_start":127,"line_end":127,"column_start":1,"column_end":74}},{"value":"/ correctly formatted but unspecified numerical value.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75312,"byte_end":75368,"line_start":128,"line_end":128,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75369,"byte_end":75372,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Please check [`is_finite`] yourself before calling this function, or","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75373,"byte_end":75445,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ check [`is_nan`] and [`is_infinite`] and handle those cases yourself.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75446,"byte_end":75519,"line_start":131,"line_end":131,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75520,"byte_end":75523,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ [`is_finite`]: https://doc.rust-lang.org/std/primitive.f32.html#method.is_finite","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75524,"byte_end":75608,"line_start":133,"line_end":133,"column_start":1,"column_end":85}},{"value":"/ [`is_nan`]: https://doc.rust-lang.org/std/primitive.f32.html#method.is_nan","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75609,"byte_end":75687,"line_start":134,"line_end":134,"column_start":1,"column_end":79}},{"value":"/ [`is_infinite`]: https://doc.rust-lang.org/std/primitive.f32.html#method.is_infinite","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75688,"byte_end":75776,"line_start":135,"line_end":135,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75777,"byte_end":75780,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ## Safety","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75781,"byte_end":75794,"line_start":137,"line_end":137,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75795,"byte_end":75798,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ The `result` pointer argument must point to sufficiently many writable bytes","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75799,"byte_end":75879,"line_start":139,"line_end":139,"column_start":1,"column_end":81}},{"value":"/ to hold Ryū's representation of `f`.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75880,"byte_end":75921,"line_start":140,"line_end":140,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75922,"byte_end":75925,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75926,"byte_end":75940,"line_start":142,"line_end":142,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75941,"byte_end":75944,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75945,"byte_end":75952,"line_start":144,"line_end":144,"column_start":1,"column_end":8}},{"value":"/ use std::{mem::MaybeUninit, slice, str};","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75953,"byte_end":75997,"line_start":145,"line_end":145,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":75998,"byte_end":76001,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ let f = 1.234f32;","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":76002,"byte_end":76023,"line_start":147,"line_end":147,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":76024,"byte_end":76027,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":76028,"byte_end":76040,"line_start":149,"line_end":149,"column_start":1,"column_end":13}},{"value":"/     let mut buffer = [MaybeUninit::<u8>::uninit(); 16];","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":76041,"byte_end":76100,"line_start":150,"line_end":150,"column_start":1,"column_end":60}},{"value":"/     let len = ryu::raw::format32(f, buffer.as_mut_ptr() as *mut u8);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":76101,"byte_end":76173,"line_start":151,"line_end":151,"column_start":1,"column_end":73}},{"value":"/     let slice = slice::from_raw_parts(buffer.as_ptr() as *const u8, len);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":76174,"byte_end":76251,"line_start":152,"line_end":152,"column_start":1,"column_end":78}},{"value":"/     let print = str::from_utf8_unchecked(slice);","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":76252,"byte_end":76304,"line_start":153,"line_end":153,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(print, \"1.234\");","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":76305,"byte_end":76340,"line_start":154,"line_end":154,"column_start":1,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":76341,"byte_end":76346,"line_start":155,"line_end":155,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":76347,"byte_end":76354,"line_start":156,"line_end":156,"column_start":1,"column_end":8}},{"value":"must_use","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/pretty/mod.rs","byte_start":76355,"byte_end":76366,"line_start":157,"line_end":157,"column_start":1,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":170},"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":3982,"byte_end":3985,"line_start":121,"line_end":121,"column_start":9,"column_end":12},"name":"raw","qualname":"::raw","value":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","parent":null,"children":[{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":175}],"decl_id":null,"docs":" Unsafe functions that mirror the API of the C implementation of Ryū.\n","sig":null,"attributes":[{"value":"/ Unsafe functions that mirror the API of the C implementation of Ryū.","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/lib.rs","byte_start":3900,"byte_end":3973,"line_start":120,"line_end":120,"column_start":1,"column_end":73}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4536,"byte_end":4542,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":27},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":6874,"byte_end":6880,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":6900,"byte_end":6906,"line_start":84,"line_end":84,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":7001,"byte_end":7007,"line_start":91,"line_end":91,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":4536,"byte_end":4542,"line_start":24,"line_end":24,"column_start":6,"column_end":12},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":21},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":6874,"byte_end":6880,"line_start":82,"line_end":82,"column_start":15,"column_end":21},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":21},"to":{"krate":1,"index":3034}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":6900,"byte_end":6906,"line_start":84,"line_end":84,"column_start":16,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":21},"to":{"krate":1,"index":2645}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":7001,"byte_end":7007,"line_start":91,"line_end":91,"column_start":18,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":21},"to":{"krate":1,"index":3002}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":7341,"byte_end":7347,"line_start":104,"line_end":104,"column_start":18,"column_end":24},"kind":"SuperTrait","from":{"krate":0,"index":39},"to":{"krate":0,"index":36}},{"span":{"file_name":"/Users/maximvezenov/.cargo/registry/src/github.com-1ecc6299db9ec823/ryu-1.0.11/src/buffer/mod.rs","byte_start":7414,"byte_end":7418,"line_start":108,"line_end":108,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":3034},"to":{"krate":0,"index":39}}]}